/*
* ‚ö†Ô∏èWAJIB DIBACA!!!
* MAU NGAPAIN SU JANGAN MODAL NAMA DOANK!!
* KASIH CREDIT GUA SU, GAK KASIH GA UP SC LAGI!!!
* SCRIPT FROM FARHAN X CODE ( Fxc7 )
* REMAKE OF FADHIL GRAPHY √ó BRYAN GAY:V
* SETING¬≤? BUKA AJA DI [ setting.json ]

* Masih Banyak Bug Di Script Ini:(
* Fix Bug? During free time!!!
*/
const {
    WAConnection,
    MessageType,
    Presence,
    Mimetype,
    GroupSettingChange
} = require("@adiwajshing/baileys")

const { wait, simih, getBuffer, h2k, generateMessageID, getGroupAdmins, getRandom, banner, start, info, success, close } = require('./lib/functions')
const { fetchJson } = require('./lib/fetcher')
const { recognize } = require('./lib/ocr')
const { color, bgcolor } = require('./lib/color')
const { help } = require('./FADHIL/help')
const { rules } = require('./FADHIL/rules')
const { bahasa } = require('./FADHIL/bahasa')
const { donasi } = require('./FADHIL/donasi')
const { limits } = require('./FADHIL/limit')
const { bokep } = require('./FADHIL/bokep.js')
const { ownermenu } = require('./FADHIL/ownermenu.js')
const { groupmenu } = require('./FADHIL/groupmenu.js')
const { mediamenu } = require('./FADHIL/mediamenu.js')
const { nsfwmenu } = require('./FADHIL/nsfwmenu.js')
const { listmenu } = require('./FADHIL/listmenu.js')
const { funmenu } = require('./FADHIL/funmenu.js')
const { makermenu } = require('./FADHIL/makermenu.js')
const { updatemenu } = require('./FADHIL/updatemenu.js')
const { vnmenu } = require('./FADHIL/vnmenu.js')
//jangan hiraukan ini!!,,,ini uji coba yang gagal:) kontol//
//const { gabutmenu } = require('./FADHIL/gabutmenu')
//const { ownermenu } = require('./FADHIL/ownermenu')
//const { groupmenu } = require('./FADHIL/groupmenu')
//const { vipmenu } = require('./FADHIL/vipmenu')
//const { nsfwmenu } = require('./FADHIL/nsfwmenu')
//const { creatormenu } = require('./FADHIL/creatormenu')
//const { downloadmenu } = require('./FADHIL/downloadmenu')
//const { allmenu } = require('./FADHIL/allmenu')

const fs = require('fs')
const moment = require('moment-timezone')
const { exec } = require('child_process')
const kagApi = require('@kagchi/kag-api')
const fetch = require('node-fetch')
const tiktod = require('tiktok-scraper')
const ffmpeg = require('fluent-ffmpeg')
const imgbb = require('imgbb-uploader')
const google = require('google-it')
const get = require('got')
const emojiUnicode = require('emoji-unicode')
const imageToBase64 = require('image-to-base64')
const speed = require('performance-now')
const { removeBackgroundFromImageFile } = require('remove.bg')
const brainly = require('brainly-scraper')
const cd = 4.32e+7
const lolis = require('lolis.life')
const loli = new lolis()

const { BarBarApi, ZeksApi, TechApi, TobzApi, ItsApi, VthearApi } = JSON.parse(fs.readFileSync('./database/json/apikey.json')) //APIKEY BELI SENDIRI!!
const { prefix, name, instagram, yt, replySet, rdaftar, groupLimit, memberLimit } = JSON.parse(fs.readFileSync('./database/json/setting.json'))
const welkom = JSON.parse(fs.readFileSync('./database/json/welkom.json'))
const nsfw = JSON.parse(fs.readFileSync('./database/json/nsfw.json'))
const _limit = JSON.parse(fs.readFileSync('./database/json/limit.json'))
const samih = JSON.parse(fs.readFileSync('./database/json/simi.json'))
const user = JSON.parse(fs.readFileSync('./database/json/user.json'))
const katailham = JSON.parse(fs.readFileSync('./database/json/katailham.json'))
const bucinrandom = JSON.parse(fs.readFileSync('./database/json/bucin.json'))
const adminNumber = JSON.parse(fs.readFileSync('./database/json/admin.json'))
const hekerbucin = JSON.parse(fs.readFileSync('./database/json/hekerbucin.json'))
const anime = JSON.parse(fs.readFileSync('./database/json/anime.json'))
const blocked = JSON.parse(fs.readFileSync('./database/json/blocked.json'))
const antilink = JSON.parse(fs.readFileSync('./src/antilink.json'))

const vcard = 'BEGIN:VCARD\n'
            + 'VERSION:3.0\n'
            + 'FN:TIO DO CAFE \n'//MUDAR NOME LU COK
            + 'ORG:Creator SR ALLISON;\n'//MUDE O NOME LU!!
            + 'TEL;type=CELL;type=VOICE;waid=558688036194:+55 86 8803-6194n'//ALTERAR N√öMERO DE LU
            + 'END:VCARD'

limitt = 'UNLIMITED'

function kyun(seconds){
  function pad(s){
    return (s < 10 ? '0' : '') + s;
  }
  var hours = Math.floor(seconds / (60*60));
  var minutes = Math.floor(seconds % (60*60) / 60);
  var seconds = Math.floor(seconds % 60);

  return `${pad(hours)} Jam ${pad(minutes)} Menit ${pad(seconds)} Detik`
}

async function starts() {
	const client = new WAConnection()
	client.logger.level = 'warn'
	console.log(banner.string)
	client.on('qr', () => {
		console.log(color('[','white'), color('!','red'), color(']','white'), color('BURUAN SCAN!! Subscribe Fadhil Graphy'))
	})

	fs.existsSync('./Fadhil.json') && client.loadAuthInfo('./Fadhil.json')
	client.on('connecting', () => {
		start('2', 'Mencari doi baru...')
	})
	client.on('open', () => {
		success('2', 'Mendapatkan doi baru!')
	})
	await client.connect({timeoutMs: 30*1000})
        fs.writeFileSync('./Fadhil.json', JSON.stringify(client.base64EncodedAuthInfo(), null, '\t'))

	client.on('group-participants-update', async (anu) => {
		if (!welkom.includes(anu.jid)) return
		try {
			const mdata = await client.groupMetadata(anu.jid)
			console.log(anu)
			if (anu.action == 'add') {
				num = anu.participants[0]
				try {
					ppimg = await client.getProfilePicture(`${anu.participants[0].split('@')[0]}@c.us`)
				} catch {
					ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
				}
				teks = `Ola @${num.split('@')[0]}\nBem vindo a este grupo solicite as regras para os adm *${mdata.subject}*\n*proibido pornografia neste grupo e links de outros grupos:)*\n\n*SEJA UM MEMBRO ATIVO NAO SEJA GADO üêÉ‚òï‚úã:D*`
				let buff = await getBuffer(ppimg)
				client.sendMessage(mdata.id, buff, MessageType.image, {caption: teks, contextInfo: {"mentionedJid": [num]}})
			} else if (anu.action == 'remove') {
				num = anu.participants[0]
				try {
					ppimg = await client.getProfilePicture(`${num.split('@')[0]}@c.us`)
				} catch {
					ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
				}
				teks = `Adeus @${num.split('@')[0]} volte sempre que precisar, menos os nota fake lixosüëã`
				let buff = await getBuffer(ppimg)
				client.sendMessage(mdata.id, buff, MessageType.image, {caption: teks, contextInfo: {"mentionedJid": [num]}})
			}
		} catch (e) {
			console.log('Error : %s', color(e, 'yellow'))
		}
	})

		client.on('CB:Blocklist', json => {
            if (blocked.length > 2) return
	    for (let i of json[1].blocklist) {
	    	blocked.push(i.replace('c.us','s.whatsapp.net'))
	    }
	})

	client.on('chat-update', async (mek) => {
		try {
			if (!mek.hasNewMessage) return
              mek = JSON.parse(JSON.stringify(mek)).messages[0]
			if (!mek.message) return
			if (mek.key && mek.key.remoteJid == 'status@broadcast') return
			if (mek.key.fromMe) return
			global.prefix
			global.blocked
			const content = JSON.stringify(mek.message)
			const from = mek.key.remoteJid
			const type = Object.keys(mek.message)[0]
			const FadhilGraphy = ["558688036194@s.whatsapp.net"]
			const farhan = mek.message.conversation
			const insom = from.endsWith('@g.us')
			const nameReq = insom ? mek.participant : mek.key.remoteJid
			pushname2 = client.contacts[nameReq] != undefined ? client.contacts[nameReq].vname || client.contacts[nameReq].notify : undefined
            
			const { text, extendedText, contact, location, liveLocation, image, video, sticker, document, audio, product } = MessageType

			const date = new Date().toLocaleDateString()
			const time = moment.tz('Asia/Jakarta').format('HH:mm:ss')
			const jam = moment.tz('Asia/Jakarta').format('HH:mm')

            body = (type === 'conversation' && mek.message.conversation.startsWith(prefix)) ? mek.message.conversation : (type == 'imageMessage') && mek.message.imageMessage.caption.startsWith(prefix) ? mek.message.imageMessage.caption : (type == 'videoMessage') && mek.message.videoMessage.caption.startsWith(prefix) ? mek.message.videoMessage.caption : (type == 'extendedTextMessage') && mek.message.extendedTextMessage.text.startsWith(prefix) ? mek.message.extendedTextMessage.text : ''
			budy = (type === 'conversation') ? mek.message.conversation : (type === 'extendedTextMessage') ? mek.message.extendedTextMessage.text : ''
            var tas = (type === 'conversation' && mek.message.conversation) ? mek.message.conversation : (type == 'imageMessage') && mek.message.imageMessage.caption ? mek.message.imageMessage.caption : (type == 'videoMessage') && mek.message.videoMessage.caption ? mek.message.videoMessage.caption : (type == 'extendedTextMessage') && mek.message.extendedTextMessage.text ? mek.message.extendedTextMessage.text : ''
			const command = body.slice(1).trim().split(/ +/).shift().toLowerCase()
			const args = body.trim().split(/ +/).slice(1)
			const mesejAnti = tas.slice(0).trim().split(/ +/).shift().toLowerCase()
			const Far = args.join(' ')
			const isCmd = body.startsWith(prefix)
		
			

			mess = {
				wait: '*_tome um cafe ‚òï enquanto te como de pe_..*',
				success: '*Sucesso...*',
				error: {
					stick: '*Falha, ocorre um erro ao converter a imagem em adesivo*',
					Iv: 'Desculpe, o link que voc√™ enviou √© inv√°lido!!*'
				},
				only: {
					group: '*Desculpe, este comando s√≥ pode ser usado dentro de grupos!*',
					benned: '*Desculpe, seu n√∫mero foi banido pelo propriet√°rio, entre em contato com o propriet√°rio para abrir seus banimentos*',
					ownerG: '*Desculpe, este comando s√≥ pode ser usado pelo grupo propriet√°rio!*',
					ownerB: '*Desculpe, este comando s√≥ pode ser usado pelo propriet√°rio do bot!* ',
					premium: '*Desculpe, este comando s√≥ pode ser usado por usu√°rios premium!!*',
					userB: '*n√£o registrado ainda* *modelo* #daftar',
					admin: '*Desculpe, este comando s√≥ pode ser usado por administradores de grupo!*',
					Badmin: '*Desculpe, este comando s√≥ pode ser usado quando o bot √© um administrador!*'
				}
			}
			
			ban = [
			
			]
			const ownerNumber = [
			"558688036194@s.whatsapp.net"//GANTI NOMOR LU
			]
			premium = [
			"558688036194@s.whatsapp.net","559496665817@s.whatsapp.net"//GANTI NOMOR YAG MAU DI PREM, GABISA NYIMPEN DI DATABASE!!
			]
			
			const apakahh = [
            'Ya','Tidak','Ga tau','Mungkin','Coba Tnya Owner'
            ]
            const bisakahh = [
            'Bisa','Tidak Bisa','Ga tau','Mungkin','Coba Tnya Owner'
            ]
            const kapankahh = [
            '1 Minggu lagi','1 Bulan lagi','1 Tahun lagi','100 tahun lagi','gatau','2030','1 Jam lagi','1 Menit lagi' 
            ]
            
            const hob =[
            'Memasak','Membantu Atok','Mabar','Nobar','Sosmed an','Membantu Orang lain','Nonton Anime','Nonton Drakor','Naik Motor','Nyanyi','Menari','Bertumbuk','cowly','Menggambar','Foto fotoan Ga jelas','Maen Game','Berbicara Sendiri' 
            ]
            const wa =[
            'penyayang','pemurah','Pemarah','Pemaaf','Penurut','Baik','baperan','Baik Hati','penyabar','Uwu','top deh, pokoknya','Suka Membantu' 
            ] 
            var rate = [
            `100%`,`95%`,`90%`,`85%`,`80%`,`75%`,`70%`,`65%`,`60%`,`55%`,`50%`,`45%`,`40%`,`35%`,`30%`,`25%`,`20%`,`15%`,`10%`,`5%`
            ]
            var persengayy = [
            `*4%*\n\n*Tobat Ngegay Gan:v*`,`*9%*\n\n*OTW Tobat Gan:v*`,`*17%*\n\n*Kang Coli*`,`*28%*\n\n*Buset Dah Gayü§¶*`,`*34%*\n\n *Korban Tusbol*`,`*48%*\n\n*Kang Hunter Bool:v*`,`*59%*\n\n *Bahaya Ni Orang Gan*`,`*62%*\n\n*Hati" Sama Ni Orang Beneran Dah*`,`*74%*\n\n*Astagfirullah Kabur GanüèÉüå¨Ô∏è*`,`83%\n\n Yaallah Nakü§¶`,`97%\n\nAstagfirullahü§¶`,`100%\n\nKabur ae Gan Daripada Ditusbol Bool luüèÉ`,`29%\n\n amann:v`,`94%\n\n YaallahüèÉ`,`75%\n\nHadehh Gayü§¶`,`82%\n\nMending Lu Tobat DahüèÉ`,`41%\n\nSering Cari Bool Diperempatan`,`39%\n\nSering Tusbol Bool TopanüèÉ`
            ]
            var persenbucin = [
            `4%\n\nHadehhü§¶`,`9%\n\nMasih Kecil Dah Bucin Ae`,`17%\n\nNakk Masih Kecil`,`28%\n\nYoalahh hmm`,`34%\n\nMayan Lah`,`48%\n\nGatau`,`59%\n\nBiasa Kang Bucin`,`62%\n\n HadehhhüèÉ`,`74%\n\n bucen Teroosss`,`83%\n\n Sekali" kek Ga bucin Gitu`,`97%\n\nHadehh Pakboi"`,`100%\n\nHadehhh Ini Bukan Bucin Tapi Pakboi`,`29%\n\nKasian Mana Masih Muda`,`94%\n\n Dasar Pakboi`,`75%\n\n Ya Ampun`
            ]

			const botNumber = client.user.jid
			const tescuk = ["558688036194@s.whatsapp.net"]
			const isGroup = from.endsWith('@g.us')
			const sender = isGroup ? mek.participant : mek.key.remoteJid
			const groupMetadata = isGroup ? await client.groupMetadata(from) : ''
			const groupName = isGroup ? groupMetadata.subject : ''
			const groupId = isGroup ? groupMetadata.jid : ''
			const groupMembers = isGroup ? groupMetadata.participants : ''
			const groupDesc = isGroup ? groupMetadata.desc : ''
			const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''
			const totalchat = await client.chats.all()
			const isBotGroupAdmins = groupAdmins.includes(botNumber) || false 
			const isGroupAdmins = groupAdmins.includes(sender) || false
			const isWelkom = isGroup ? welkom.includes(from) : false
			const isNsfw = isGroup ? nsfw.includes(from) : false
			const isAnime = isGroup ? anime.includes(from) : false
			const isAntiLink = isGroup ? antilink.includes(from) : false
			const isSimi = isGroup ? samih.includes(from) : false 
			const isOwner = ownerNumber.includes(sender)
			const isUser = user.includes(sender)
			const isBanned = ban.includes(sender)
			const isPrem = premium.includes(sender)
			const isImage = type === 'imageMessage'
			const isUrl = (url) => {
			    return url.match(new RegExp(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/, 'gi'))
			}
			const reply = (teks) => {
				client.sendMessage(from, teks, text, {quoted:mek})
			}
			const sendMess = (hehe, teks) => {
				client.sendMessage(hehe, teks, text)
			}
			const costum = (pesan, tipe, target, target2) => {
			client.sendMessage(from, pesan, tipe, {quoted: { key: { fromMe: false, participant: `${target}`, ...(from ? { remoteJid: from } : {}) }, message: { conversation: `${target2}` }}})
			}
			const mentions = (teks, memberr, id) => {
				(id == null || id == undefined || id == false) ? client.sendMessage(from, teks.trim(), extendedText, {contextInfo: {"mentionedJid": memberr}}) : client.sendMessage(from, teks.trim(), extendedText, {quoted: mek, contextInfo: {"mentionedJid": memberr}})
			}
// ANTI LINK GRUP
            if (mesejAnti.includes("://chat.whatsapp.com/")){
		        if (!isGroup) return
		        if (!isAntiLink) return
		        if (isGroupAdmins) return reply('administrador de grupo pode postar:v')
		        client.updatePresence(from, Presence.composing)
		        if (mesejAnti.includes("#izinbos")) return reply("Iya kak jangan spam ya")
		        var kic = `${sender.split("@")[0]}@s.whatsapp.net`
		        reply(`*„Äå LINK DE GRUPO DETECTADO „Äç* \nVoce sera removido por postar link de outro grupo :)`)
		        setTimeout( () => {
			        client.groupRemove(from, [kic]).catch((e)=>{reply(`Felizmente nao e admin, se o admin ja o chutou!`)})
		        }, 3000)
		        setTimeout( () => {
			        client.updatePresence(from, Presence.composing)
			        reply("foi avisado :v")
		        }, 2000)
		        setTimeout( () => {
			        client.updatePresence(from, Presence.composing)
			        reply("vou te remover ")
		        }, 1000)
		        setTimeout( () => {
			        client.updatePresence(from, Presence.composing)
			        reply("Adeus corno?")
		        }, 0)
            }
			colors = ['red','white','black','blue','yellow','green']
			const isMedia = (type === 'imageMessage' || type === 'videoMessage')
			const isQuotedImage = type === 'extendedTextMessage' && content.includes('imageMessage')
			const isQuotedVideo = type === 'extendedTextMessage' && content.includes('videoMessage')
			const isQuotedSticker = type === 'extendedTextMessage' && content.includes('stickerMessage')
			
			const checkLimit = (sender) => {
                let found = false
                    for (let lmt of _limit) {
                        if (lmt.id === sender) {
                            limitCounts = limitt - lmt.limit
                            if (limitCounts <= 0) return client.sendMessage(from,`Limit request anda sudah habis\n\n_Note : Limit akan direset setiap jam 21:00!_`, text,{ quoted: mek})
                            client.sendMessage(from, limits.limitcount(limitCounts), text, { quoted : mek})
                            found = true
                        }
                    }
                    if (found === false) {
                        let obj = { id: sender, limit: 1 }
                        _limit.push(obj)
                        fs.writeFileSync('./database/json/limit.json', JSON.stringify(_limit))
                        client.sendMessage(from, limits.limitcount(limitCounts), text, { quoted : mek})
                    }
                                }

           const isLimit = (sender) =>{
                      let position = false
              for (let i of _limit) {
              if (i.id === sender) {
                let limits = i.limit
              if (limits >= limitt ) {
                  position = true
                    client.sendMessage(from, limits.limitend(pushname2), text, {quoted: mek})
                    return true
              } else {
                _limit
                  position = true
                  return false
               }
             }
           }
           if (position === false) {
                const obj = { id: sender, limit: 1 }
                _limit.push(obj)
                fs.writeFileSync('./database/json/limit.json',JSON.stringify(_limit))
           return false
       }
     }
     const bayarLimit = (sender, amount) => {
                let position = false
            Object.keys(_limit).forEach((i) => {
                if (_limit[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                _limit[position].limit -= amount
                fs.writeFileSync('./database/json/limit.json', JSON.stringify(_limit))
            }
        } 
        
        const limitAdd = (sender) => {
             let position = false
            Object.keys(_limit).forEach((i) => {
                if (_limit[i].id == sender) {
                    position = i
                }
            })
            if (position !== false) {
                _limit[position].limit += 1
                fs.writeFileSync('./database/json/limit.json', JSON.stringify(_limit))
            }
        }
     
     		if (!isGroup && isCmd) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32mEXEC\x1b[1;37m]', time, color(command), 'from', color(sender.split('@')[0]), 'args :', color(args.length))
			if (!isGroup && !isCmd) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;31mRECV\x1b[1;37m]', time, color('Message'), 'from', color(sender.split('@')[0]), 'args :', color(args.length))
			
			if (isCmd && isGroup) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32mEXEC\x1b[1;37m]', time, color(command), 'from', color(sender.split('@')[0]), 'in', color(groupName), 'args :', color(args.length))
			if (!isCmd && isGroup) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;31mRECV\x1b[1;37m]', time, color('Message'), 'from', color(sender.split('@')[0]), 'in', color(groupName), 'args :', color(args.length))
			
			switch(command) {
		case 'join':
					if (args.length == 0) return reply(from, `maaf ,bot ini hanya bisa dimasukkan ke grup `, text)
					let linkgrup = `${body.slice(6)}`
					let islink = linkgrup.match(/(https:\/\/chat.whatsapp.com)/gi)
					let chekgrup = await client.inviteInfo(linkgrup)
					if (!islink) return reply(from, 'Desculpe, o link do grupo est√° errado! ', id)
					if (isOwnerBot) {
					  await client.joinGroupViaLink(linkgrup)
					    .then(async () => {
					      client.sendMessage(from, 'Entrou no grupo com sucesso via link!', text)
					    })
					} else {
					  let cgrup = await client.getAllGroups()
					  if (cgrup.length > groupLimit) return client.reply(from, `Sorry, the groups is not valid `, id)
					  if (cgrup.size < memberLimit) return client.reply(from, `Sorry, Bot wil not join if the group members do not exceed ${memberLimit} people`, id)
					  await client.joinGroupViaLink(linkgrup)
					    .then(async () => {
					      reply('Entrou no grupo com sucesso via link!')
					    })
					    .catch(() => {
					      reply('Fracassado!')
					    })
					}
					break 
					
					case 'setreply':
					if (!isOwner) return reply(mess.only.ownerB)
                    client.updatePresence(from, Presence.composing) 
					if (args.length < 1) return
					replySet = body.slice(10)
					reply(`reply berhasil di ubah menjadi : ${replySet}`)
				break 
				
				case 'grouplist':
				case 'gruplist':
					if (!isUser) return reply(mess.only.userB)
					if (isBanned) return reply(mess.only.benned)
					client.updatePresence(from, Presence.composing) 
					teks = `\`\`\`Ini adalah list group ${name} :\n\n\`\`\``
					no = 0
					for (let hehehe of groupId) {
						no += 1
						teks += `\`\`\`[${no.toString()}]\`\`\` @${hehehe.split('@')[0]}\n`
					}
					teks += `\n\`\`\`Total grup : ${groupId.length}\`\`\``
					client.sendMessage(from, teks.trim(), extendedText, {quoted: mek})
				break 
				case 'botstat': {
            client.updatePresence(from, Presence.composing)
            const chatIds = await client.getAllChatIds()
            const groups = await client.getAllGroups()
            client.sendText(from, `Status :\n- *${loadedMsg}* Loaded Messages\n- *${groups.length}* Group Chats\n- *${chatIds.length - groups.length}* Personal Chats\n- *${chatIds.length}* Total Chats`)
            break
        }
			case 'brainly':
					if (!isUser) return reply(mess.only.userB)
					if (isBanned) return reply(mess.only.benned)
					if (isLimit(sender)) return reply(limits.limitend(pushname2))
                    brien = body.slice(9)
					brainly(`${brien}`).then(res => {
					teks = '‚ùâ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùâ\n'
					for (let Y of res.data) {
						teks += `\n*„Äå _BRAINLY_ „Äç*\n\n*‚û∏ Pertanyaan:* ${Y.pertanyaan}\n\n*‚û∏ Jawaban:* ${Y.jawaban[0].text}\n‚ùâ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùâ\n`
					}
					client.sendMessage(from, teks, text, {quoted: mek, detectLinks: false})
                        console.log(res)
                    })
                await limitAdd(sender)
				break 
					case 'antilink':
					if (args.length < 1) return reply('digite 1 para ativar')
					if (Number(args[0]) === 1) {
						if (isAntiLink) return reply('EMANG MATI?')
						antilink.push(from)
						fs.writeFileSync('./src/antilink.json', JSON.stringify(antilink))
						reply('„ÄåSUCESSO„ÄçATIVAR ANTI LINKS NO GRUPO')
						client.sendMessage(from,`ALERTA!!! Se voce nao e adm nao envie links de grupo ou vou te remover`, text)
					} else if (Number(args[0]) === 0) {
						if (!isAntiLink) return reply('NAO ESTA ATIVO ?')
						var ini = anti.botLangsexOf(from)
						antilink.splice(ini, 1)
						fs.writeFileSync('./src/antilink.json', JSON.stringify(antilink))
						reply('„ÄåSUCESSO„ÄçANTI LINK DESLIGADO NO GRUPO')
					} else {
						reply('1 ativar, 0 desabilitar')
					}
					break 
			case 'chatlist':
					client.updatePresence(from, Presence.composing)
					var chat = await client.chats.all()
					teks = 'This is list of chat number :\n'
					for (let all of chat) {
						teks += `~> @${all}\n`
					}
					teks += `Total : ${chat.length}`
					client.sendMessage(from, teks.trim(), extendedText, {quoted: mek, contextInfo: {"mentionedJid": chat}})
					break
				case 'totaluser':
					client.updatePresence(from, Presence.composing) 
					if (!isUser) return reply(mess.only.userB)
					if (!isOwner) return reply(mess.only.ownerB)    
					teks = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ„Äå *TOTAL USER ${name}* „Äç\n`
					no = 0
					for (let hehehe of user) {
						no += 1
						teks += `[${no.toString()}] @${hehehe.split('@')[0]}\n`
					}
					teks += `‚îÇ+ Total Pengguna : ${user.length}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*‚éø *${name}* ‚èã*‚îÄ‚îÄ‚îÄ‚îÄ`
					client.sendMessage(from, teks.trim(), extendedText, {quoted: mek, contextInfo: {"mentionedJid": user}})
					break
			case 'kepo':
			case 'nyw':
			    client.updatePresence(from, Presence.composing)
			   if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
                 if (args.length < 1) return reply (`Prameter salan\nCommand : ${prefix}daftar nama/umur/asal\n\nContoh : ${prefix}daftar Bryan/17/Indonesia`)
                 reg = `{bodyslice(8)}`
                 jeneng = reg.slipt("/")[0];
                 umure = reg.split("/")[1];
                 asal = reg.split("/")[2];
                 user.push(sender)
                 ppimg = await client.getProfilePicture(`${num.split('@')[0]}@c.us.https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg`)
                 client.sendMessage(from, ppimg, image, { quoted: mek, caption: '*Pendaftaran Berhasil*'})
                fs.writeFileSync('./database/json/user.json', JSON.stringify(user))
                 break
				case 'daftar':
					client.updatePresence(from, Presence.composing)
					if (isUser) return reply('Seu n√∫mero est√° registrado no banco de dados BOT')
					user.push(sender)
					fs.writeFileSync('./database/json/user.json', JSON.stringify(user))
					try {
					ppimg = await client.getProfilePicture(`${sender.split('@')[0]}@s.whatsapp.net`)
					} catch {
					ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
					}
					captionnya = `‚ï≠‚îÄ„Äå *REGISTRO DE USUARIO* „Äç\n‚îÇ *Registro foi feito com sucesso com SN*: \n‚îÇ *HSKBRY2IHD017*\n‚îÇ\n‚îÇ *Sobre ${date} ${time}* \n‚îÇ *Nome* : *${pushname2}*\n‚îÇ *Numero* : *wa.me/${sender.split("@")[0]}*\n‚îÇ *Usar bot* \n‚îÇ *Por Favor* \n‚îÇ *Mandar ${prefix}help/menu* \n‚îÇ\n‚îÇ *Total Do Ultilizador* :  *${user.length} Pessoa* \n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`
					daftarimg = await getBuffer(ppimg)
					client.sendMessage(from, daftarimg, image, {quoted: mek, caption: captionnya})
					break
			/**************MENU*************/
		
			case 'help':
			case 'menu':
			case 'cmd':
			case 'ajuda':
				if (isBanned) return reply(mess.only.benned)
				if (!isUser) return reply(mess.only.userB)
				uptime = process.uptime()
				user.push(sender)
				myMonths = ["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"];
                myDays = ['Minggu','Senin','Selasa','Rabu','Kamis','Jum at','Sabtu'];
                var tgl = new Date();
                var day = tgl.getDate()
                  bulan = tgl.getMonth()
                var thisDay = tgl.getDay(),
                thisDay = myDays[thisDay];
                var yy = tgl.getYear()
                var year = (yy < 1000) ? yy + 1900 : yy;
                const tanggal = `${thisDay}, ${day} - ${myMonths[bulan]} - ${year}`
                setTimeout( () => {
					costum(help(prefix, instagram, yt, name, pushname2, user, limitt), text, FadhilGraphy, replySet)
					}, 1500)
					setTimeout( () => {
					/*client.sendMessage(from, rules(name, uptime, tanggal, jam, prefix), text, {quoted: mek })
					}, 1200)
					setTimeout( () => {*/
					client.sendMessage(from, 'OBRIGADO POR USAR *SCREAMOBOTZ*', text, {quoted: mek})
					}, 0)
    				break
/*********PISAH MENU**********/
              case 'ownermenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, ownermenu(prefix), text, { quoted: mek })
					break
            case 'rules':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
          client.sendMessage(from, rules(prefix), text, { quoted: mek })
                    break
		      case 'groupmenu':
		      case 'menugroup':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, groupmenu(prefix), text, { quoted: mek })
					break
			  case 'mediamenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, mediamenu(prefix), text, { quoted: mek })
					break
			   case 'updatemenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)

					client.sendMessage(from, updatemenu(prefix), text, { quoted: mek })
					break
			   case 'nsfwmenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)

					client.sendMessage(from, nsfwmenu(prefix), text, { quoted: mek })
					break
				case 'vnmenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, vnmenu(prefix), text, { quoted: mek })
					break
				case 'listmenu':
				case 'allmenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, listmenu(prefix), text, { quoted: mek })
					break
				case 'funmenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, funmenu(prefix), text, { quoted: mek })
					break
				case 'makermenu':
				case 'creatormenu':
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
					
					client.sendMessage(from, makermenu(prefix), text, { quoted: mek })
					break
/*********END PISAH MENU***********/
			  case 'donkkasi':
			  case 'donkkate':
					client.sendMessage(from, donasi(instagram, name), text, {quoted: mek})
					break
					case 'info':
					me = client.user
					user.push(sender)
					uptime = process.uptime()
					teks = `‚ü©‚û¢ *Nome Bot* : ${me.name}\n‚ü©‚û¢ *Numero Bot* : @${me.jid.split('@')[0]}\n‚ü©‚û¢ *Dono* : wa.me/558688036194\n‚ü©‚û¢ *prefix* : | ${prefix} |\n‚ü©‚û¢ *Total Bloqueados* : ${blocked.length}\n‚ü©‚û¢ *Ativo Desde* : ${kyun(uptime)}\n\n‚ü©‚û¢ Total Do Utilizador: *${user.length}* Do Utilizador\n‚ü©‚û¢ *Especial Agradecimentos* :\n‚ü©‚û¢ Obrigado SWT \n‚ü©‚û¢ Figurinhas (Kawaii)\n‚ü©‚û¢ Cortes Screamo\n‚ü©‚û¢ Copiador Uchiha\n‚ü©‚û¢ Bruxinho Mods\n‚ü©‚û¢ Mafia Tutors\n‚ü©‚û¢ Mosca\n‚ü©‚û¢ Elite Das Fcc\n‚ü©‚û¢ CanalScreamo apikey\n‚ü©‚û¢ MeuBot Equipe\n‚ü©‚û¢ Usuario Bot`
					buffer = await getBuffer(me.imgUrl)
					client.sendMessage(from, buffer, image, {quoted: mek, caption: teks, contextInfo:{mentionedJid: [me.jid]}})
					break
				case 'blocklist':
					teks = 'List Block :\n'
					for (let block of blocked) {
						teks += `~> @${block.split('@')[0]}\n`
					}
					teks += `Total : ${blocked.length}`
					client.sendMessage(from, teks.trim(), extendedText, {quoted: mek, contextInfo: {"mentionedJid": blocked}})
					break 
				case 'banlist':
				ben = '```List Banned``` :\n'
					for (let banned of ban) {
						ben += `~> @${banned.split('@')[0]}\n`
					}
					ben += `Total : ${ban.length}`
					client.sendMessage(from, ben.trim(), extendedText, {quoted: mek, contextInfo: {"mentionedJid": ban}})
					break
				case 'ocr':
					if ((isMedia && !mek.message.videoMessage || isQuotedImage) && args.length == 0) {
						const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						const media = await client.downloadAndSaveMediaMessage(encmedia)
						reply(mess.wait)
						await recognize(media, {lang: 'eng+ind', oem: 1, psm: 3})
							.then(teks => {
								reply(teks.trim())
								fs.unlinkSync(media)
							})
							.catch(err => {
								reply(err.message)
								fs.unlinkSync(media)
							})
					} else {
						reply('Foto aja gan')
					}
					await limitAdd(sender) 
					break 
				case 'gifstiker':
				case 'stiker':
				case 'sticker':
				case 's':
				case 'stickergif':
				case 'stickergift':
				case 'stikergif':
				case 'stikergift':
						if ((isMedia && !mek.message.videoMessage || isQuotedImage) && args.length == 0) {
						const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						const media = await client.downloadAndSaveMediaMessage(encmedia)
						if (isLimit(sender)) return reply(limits.limitend(pushname2))
						reply(mess.wait)
						const ran= getRandom('.webp')
						await ffmpeg(`./${media}`)
							.input(media)
							.on('start', function (cmd) {
								console.log(`Started : ${cmd}`)
							})
							.on('error', function (err) {
								console.log(`Error : ${err}`)
								fs.unlinkSync(media)
								reply(mess.error.stick)
							})
							.on('end', function () {
								console.log('Finish')
								buff = fs.readFileSync(ran)
								client.sendMessage(from, buff, sticker, {quoted: mek})
								fs.unlinkSync(media)
								fs.unlinkSync(ran)
							})
							.addOutputOptions([`-vcodec`,`libwebp`,`-vf`,`scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`])
							.toFormat('webp')
							.save(ran)
					} else if ((isMedia && mek.message.videoMessage.seconds < 11 || isQuotedVideo && mek.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 11) && args.length == 0) {
						const encmedia = isQuotedVideo ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						const media = await client.downloadAndSaveMediaMessage(encmedia)
						const ran= getRandom('.webp')
						reply(mess.wait)
						await ffmpeg(`./${media}`)
							.inputFormat(media.split('.')[1])
							.on('start', function (cmd) {
								console.log(`Started : ${cmd}`)
							})
							.on('error', function (err) {
								console.log(`Error : ${err}`)
								fs.unlinkSync(media)
								tipe = media.endsWith('.mp4') ? 'video' : 'gif'
								reply(`\`\`\`Gagal, pada saat mengkonversi ${tipe} ke stiker\`\`\``)
							})
							.on('end', function () {
								console.log('Finish')
								buff = fs.readFileSync(ran)
								client.sendMessage(from, buff, sticker, {quoted: mek})
								fs.unlinkSync(media)
								fs.unlinkSync(ran)
							})
							.addOutputOptions([`-vcodec`,`libwebp`,`-vf`,`scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`])
							.toFormat('webp')
							.save(ran)
					} else if ((isMedia || isQuotedImage) && args[0] == 'nobg') {
						const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						const media = await client.downloadAndSaveMediaMessage(encmedia)
						ranw = getRandom('.webp')
						ranp = getRandom('.png')
						reply(mess.wait)
						keyrmbg = 'bcAvZyjYAjKkp1cmK8ZgQvWH'
						await removeBackgroundFromImageFile({path: media, apiKey: keyrmbg.result, size: 'auto', type: 'auto', ranp}).then(res => {
							fs.unlinkSync(media)
							let buffer = Buffer.from(res.base64img, 'base64')
							fs.writeFileSync(ranp, buffer, (err) => {
								if (err) return reply('Gagal, Terjadi kesalahan, silahkan coba beberapa saat lagi.')
							})
							exec(`ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${ranw}`, (err) => {
								fs.unlinkSync(ranp)
								if (err) return reply(mess.error.stick)
								buff = fs.readFileSync(ranw)
								client.sendMessage(from, buff, sticker, {quoted: mek})
							})
						})
					} else {
						reply(`Envie fotos com legendas ${prefix}adesivo ou tag de imagem que foi enviado\nPara fazer adesivos de GIF, certifique-se de Que a Duracao Nao seja maior de que 10 Segundo!`)
					}
					await limitAdd(sender) 
					break 
				case 'img2url':
           if (!isUser) return reply(mess.only.userB)
			if (isBanned) return reply(mess.only.benned)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
					reply(mess.wait)
             var imgbb = require('imgbb-uploader')
            var encmedia  = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
            var media = await  client.downloadAndSaveMediaMessage(encmedia)
            
            imgbb('727e7e43f6cda1dfb85d888522fd4ce1', media)
                .then(data => {
                    var caps = `„Äå *IMAGE TO URL* „Äç\n\n*‚ï†‚û•  ID :* ${data.id}\n*‚ï†‚û•  MimeType :* ${data.image.mime}\n*‚ï†‚û•  Extension :* ${data.image.extension}\n\n*‚ï†‚û•  URL :* ${data.display_url}`
                    ibb = fs.readFileSync(media)
                     client.sendMessage(from, ibb, image, { quoted: mek, caption: caps })
                })
                .catch(err => {
                    throw err
                })
            await limitAdd(sender) 	
            break  
		     	case 'trigger':
		    	case 'tg':
					var imgb = require('imgbb-uploader')
					if ((isMedia && !mek.message.videoMessage || isQuotedImage) && args.length == 0) {
					ger = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek 
					reply(mess.wait)
					owgi = await  client.downloadAndSaveMediaMessage(ger)
					anu = await imgb("727e7e43f6cda1dfb85d888522fd4ce1", owgi)
					teks = `${anu.display_url}`
					ranp = getRandom('.gif')
					rano = getRandom('.webp')
					anu1 = `https://some-random-api.ml/canvas/triggered?avatar=${teks}`
					exec(`wget ${anu1} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
					fs.unlinkSync(ranp)
					if (err) return reply(mess.error.stick)
					nobg = fs.readFileSync(rano)
					client.sendMessage(from, nobg, sticker, {quoted: mek})
					fs.unlinkSync(rano)
					})
					} else {
					reply('Usar foto!')
					}
					await limitAdd(sender) 
					break
              case 'chika':
              case 'ck':
            await client.reply(from, `media sedang dikirim , tunggu sampe10-20 detik`, id)
            fetch('https://raw.githubusercontent.com/AlvioAdjiJanuar/chika/main/chika.txt')
            .then(res => res.text())
            .then(body => {
                let chika = body.split('\n')
                let chikax = chika[Math.floor(Math.random() * chika.length)]
                client.sendFileFromUrl(from, `https://piyobot.000webhostapp.com/${chikax}.mp4`, 'chika.mp4', 'Nih Bang', id)
                .then(() => console.log('Success sending Video'))
                limitAdd(serial)
            })
            .catch(() => {
                client.reply(from, 'Ada yang Error!', id)
            })
            break
                                    case 'wasted':
                        var imgbb = require('imgbb-uploader')

                        if ((isMedia && !mek.message.videoMessage || isQuotedImage) && args.length == 0) {

                                         ger = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek

                                         owgi = await  client.downloadAndSaveMediaMessage(ger)

                                         anu = await imgbb("727e7e43f6cda1dfb85d888522fd4ce1", owgi)

                                        teks = `${anu.display_url}`

                                        ranp = getRandom('.png')

                                        rano = getRandom('.webp')

                                        anu1 = `https://some-random-api.ml/canvas/wasted?avatar=${teks}`

                                         exec(`wget ${anu1} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {

                                                fs.unlinkSync(ranp)

                                                if (err) return reply(ind.error.stick)

                                                nobg = fs.readFileSync(rano)

                                                 client.sendMessage(from, nobg, sticker, {quoted: mek})

                                                fs.unlinkSync(rano)

                                        })

                                    

                                             } else {

                                                 reply('Gunakan foto!')

                                          }

                                          await limitAdd(sender) 
                                          break  
                        
                 case 'kalkulator':
					if (isBanned) return reply(mess.only.benned)    
				   if (!isUser) return reply(mess.only.userB)
				   if (isLimit(sender)) return reply(limits.limitend(pushname2))
				     if (args.length < 1) return reply(`[‚ùó] Kirim perintah *${prefix}kalkulator [ Angka ]*\nContoh : ${prefix}kalkulator 12*12\n*NOTE* :\n- Untuk Perkalian Menggunakan *\n- Untuk Pertambahan Menggunakan +\n- Untuk Pengurangan Mennggunakan -\n- Untuk Pembagian Menggunakan /`)
				    mtk = `${body.slice(12)}`
				    anu = await fetchJson(`https://api.vhtear.com/calculator?value=${mtk}&apikey=${VthearApi}`, {method: 'get'})
				    client.sendMessage(from, `*${anu.result.data}*`, text, {quoted: mek})
				    await limitAdd(sender) 	
				    break 
				case 'owner':
				case 'creator':
                 client.sendMessage(from, {displayname: "+0", vcard: vcard}, MessageType.contact, { quoted: mek})
                 client.sendMessage(from, 'Dono do Bot digite #info',text, { quoted: mek} )
                 break
                 case 'fitnah':
                 if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB) 
				if (args.length < 1) return reply(`Usage :\n${prefix}fitnah [@tag&pesan&balasanbot]]\n\nEx : \n${prefix}fitnah @tagmember&hai&iai juga`)
				var gh = body.slice(8)
				mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
					var replace = gh.split("&")[0];
					var target = gh.split("&")[1];
					var bot = gh.split("&")[2];
					client.sendMessage(from, `${bot}`, text, {quoted: { key: { fromMe: false, participant: `${mentioned}`, ...(from ? { remoteJid: from } : {}) }, message: { conversation: `${target}` }}})
					break

				case 'infogc':
				case 'groupinfo':
				case 'infogrup':
				case 'grupinfo':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
                client.updatePresence(from, Presence.composing)
                if (!isGroup) return reply(mess.only.group)
                ppUrl = await client.getProfilePicture(from)
                reply(mess.wait) // leave empty to get your own
			    buffer = await getBuffer(ppUrl)
		        client.sendMessage(from, buffer, image, {quoted: mek, caption: `*NAME* : ${groupName}\n*MEMBER* : ${groupMembers.length}\n*ADMIN* : ${groupAdmins.length}\n*DESK* : ${groupDesc}`})
                break
				case 'trendtwit':
					client.updatePresence(from, Presence.composing) 
                     if (!isUser) return reply(mess.only.daftarB)
                     if (isLimit(sender)) return reply(limits.limitend(pushname2))
					data = await fetchJson(`https://docs-jojo.herokuapp.com/api/trendingtwitter`, {method: 'get'})
					reply(mess.wait)
					teks = '=================\n'
					for (let i of data.result) {
						teks += `*Hastag* : ${i.hastag}\n*link* : ${i.link}\n*rank* : ${i.rank}\n*Tweet* : ${i.tweet}\n=================\n`
					}
					reply(teks.trim())
					await limitAdd(sender) 
					break 
				case 'testime':
					setTimeout( () => {
					client.sendMessage(from, 'Waktu habis:v', text, {quoted: mek}) // ur cods
					}, 10000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '5 Detik lagi', text, {quoted: mek}) // ur cods
					}, 5000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '10 Detik lagi', text, {quoted: mek}) // ur cods
					}, 0) // 1000 = 1s,
					break 
				case 'animecry':
					ranp = getRandom('.gif')
					rano = getRandom('.webp')
					anu = await fetchJson(`https://tobz-api.herokuapp.com/api/cry?apikey=${TobzApi}`, {method: 'get'})
                   if (!isUser) return reply(mess.only.userB)
                   if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   if (isBanned) return reply(mess.only.benned)
                   if (!isGroup) return reply(mess.only.group)
					if (anu.error) return reply(anu.error)
					reply (mess.wait)
					exec(`wget ${anu.result} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
						fs.unlinkSync(ranp)
						if (err) return reply(mess.error.stick)
						buffer = fs.readFileSync(rano)
						client.sendMessage(from, buffer, sticker, {quoted: mek})
						fs.unlinkSync(rano)
					})
					await limitAdd(sender) 
					break 
				case 'neonime':
					client.updatePresence(from, Presence.composing) 
					data = await fetchJson(`https://docs-jojo.herokuapp.com/api/neonime_lastest`, {method: 'get'})
                    if (!isUser) return reply(mess.only.userB)
                    if (isLimit(sender)) return reply(limits.limitend(pushname2))
                    if (isBanned) return reply(mess.only.benned)
                    if (!isGroup) return reply(mess.only.group)
                    reply(mess.wait)
					teks = '################\n'
					for (let i of data.result) {
						teks += `*Title* : ${i.judul}\n*link* : ${i.link}\n*rilis* : ${i.rilis}\n###############\n`
					}
					reply(teks.trim())
					await limitAdd(sender) 
					break   
				case 'wink':
					ranp = getRandom('.gif')
					rano = getRandom('.webp')
					anu = await fetchJson(`https://api.i-tech.id/tools/wink?key=${TechApi}`, {method: 'get'})
                   if (!isUser) return reply(mess.only.userB)
                   if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   if (isBanned) return reply(mess.only.benned)
                   if (!isGroup) return reply(mess.only.group)
					if (anu.error) return reply(anu.error)
					reply (mess.wait)
					exec(`wget ${anu.result} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
						fs.unlinkSync(ranp)
						if (err) return reply(mess.error.stick)
						buffer = fs.readFileSync(rano)
						client.sendMessage(from, buffer, sticker, {quoted: mek})
						fs.unlinkSync(rano)
					})
					await limitAdd(sender) 
					break 
				case 'imoji':
					if (args.length < 1) return reply('onde est√£o os emojis mano?')
                    if (!isUser) return reply(mess.only.userB)
                    if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   if (isBanned) return reply(mess.only.benned)
					ranp = getRandom('.png')
					rano = getRandom('.webp')
					teks = emojiUnicode(Far).trim()
					anu = await fetchJson(`https://mhankbarbars.tech/api/emoji2png?emoji=${teks}&apikey=${BarBarApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					exec(`wget ${anu.result} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
						fs.unlinkSync(ranp)
						if (err) return reply(mess.error.stick)
						buffer = fs.readFileSync(rano)
						client.sendMessage(from, buffer, sticker)
						fs.unlinkSync(rano)
					})
					await limitAdd(sender) 
					break 
					
					case 'animehug':
					ranp = getRandom('.gif')
					rano = getRandom('.webp')
					anu = await fetchJson(`https://tobz-api.herokuapp.com/api/hug?apikey=${TobzApi}`, {method: 'get'})
                   if (!isUser) return reply(mess.only.userB)
                   if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   if (isBanned) return reply(mess.only.benned)
                   if (!isGroup) return reply(mess.only.group)
					if (anu.error) return reply(anu.error)
					reply(mess.wait)
					exec(`wget ${anu.result} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
						fs.unlinkSync(ranp)
						if (err) return reply(mess.error.stick)
						buffer = fs.readFileSync(rano)
						client.sendMessage(from, buffer, sticker, {quoted: mek})
						fs.unlinkSync(rano)
					})
					await limitAdd(sender) 
					break 
				case 'linkgroup':
				case 'linkgrup':
				case 'linkgc':
				case 'gruplink':
				case 'grouplink':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				    if (!isGroup) return reply(mess.only.group)
				    if (!isBotGroupAdmins) return reply(mess.only.Badmin)
				    linkgc = await client.groupInviteCode (from)
				    yeh = `https://chat.whatsapp.com/${linkgc}\n\nlink Grupo *${groupName}*`
				    client.sendMessage(from, yeh, text, {quoted: mek})
			        break
				case 'hidetag':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					var value = body.slice(9)
					var group = await client.groupMetadata(from)
					var member = group['participants']
					var mem = []
					member.map( async adm => {
					mem.push(adm.id.replace('c.us', 's.whatsapp.net'))
					})
					var options = {
					text: value,
					contextInfo: { mentionedJid: mem },
					quoted: mek
					}
					client.sendMessage(from, options, text)
					break
				case 'gantengcek':
				case 'cekganteng':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					ganteng = body.slice(12)
					const gan =['10%','30%','20%','40%','50%','60%','70%','62%','74%','83%','97%','100%','29%','94%','75%','82%','41%','39%']
					const teng = gan[Math.floor(Math.random() * gan.length)]
					client.sendMessage(from, 'Pertanyaan : Cek Ganteng Bang *'+ganteng+'*\n\nJawaban : '+ teng +'', text, { quoted: mek })
					break
				case 'cantikcek':
				case 'cekcantik':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					cantik = body.slice(11)
					if (args.length < 1) return reply('Yg Mau dicek Siapa Kak??')
					const can =['10% banyak" perawatan ya kak:v\nCanda Perawatan:v','30% Semangat Kaka Merawat Dirinya><','20% Semangat Ya Kakaüëç','40% Wahh Kaka><','50% kaka cantik deh><','60% Hai Cantiküêä','70% Hai Ukhtyüêä','62% Kakak Cantik><','74% Kakak ni cantik deh><','83% Love You Kakak><','97% Assalamualaikum Ukhtyüêä','100% Kakak Pake Susuk ya??:v','29% Semangat Kakak:)','94% Hai Cantik><','75% Hai Kakak Cantik','82% wihh Kakak Pasti Sering Perawatan kan??','41% Semangat:)','39% Lebih Semangatüêä']
					const tik = can[Math.floor(Math.random() * can.length)]
					client.sendMessage(from, 'Pertanyaan : Cantik Cek Kakak *'+cantik+'*\n\nPersen Kecantikan : '+ tik +'', text, { quoted: mek })
					break
				case 'ban':
					client.updatePresence(from, Presence.composing) 
					if (args.length < 1) return
					if (!isOwner) return reply(mess.only.ownerB)
			    	if (!isPrem) return reply(mess.only.premium)	
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
			        ban = mentioned
					reply(`berhasil banned : ${ban}`)
					break
case 'premiumlist':
					denz.updatePresence(from, Presence.composing) 
									
					if (!isUser) return reply(mess.only.userB)
					teks = `‚ï≠‚îÄ„Äå *TOTAL USER PREMIUM ${name}* „Äç\n`
					no = 0
					for (let prem of premium) {
						no += 1
						teks += `[${no.toString()}] @${prem.split('@')[0]}\n`
					}
					teks += `‚îÇ+ Total User Premium : ${premium.length}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚éø *${name}* ‚èã‚îÄ‚îÄ‚îÄ‚îÄ`
					denz.sendMessage(from, teks.trim(), extendedText, {quoted: mek, contextInfo: {"mentionedJid": premium}})
					break
				case 'addprem':
					client.updatePresence(from, Presence.composing)
					if (args.length < 1) return
					if (!isOwner) return reply(mess.only.ownerB)
					addpremi = mek.message.extendedTextMessage.contextInfo.mentionedJid
					addpremium = addpremi
					reply(`* ô·¥á Ä ú·¥ÄÍú±…™ ü ·¥ç·¥á…¥·¥Ä·¥ç ô·¥Ä ú·¥ã·¥Ä…¥ ${addpremium} ·¥ã·¥á ·¥úÍú±·¥á Ä ·¥© Ä·¥á·¥ç…™·¥ú·¥ç*\n\nÍú±·¥á ü·¥Ä·¥ç·¥Ä·¥õ ·¥ç·¥á…¥…¢…¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ Íú∞…™·¥õ·¥ú Ä ·¥© Ä·¥á·¥ç…™·¥ú·¥ç:)`)
					break
				case 'removeprem':
				case 'dellprem':
					if (!isOwner) return reply(mess.only.ownerB)
					rprem = body.slice(13)
					premium.splice(`${rprem}@s.whatsapp.net`, 1)
					fs.writeFileSync('./database/json/premium.json', JSON.stringify(premium))
					reply(`Berhasil Remove wa.me/${rprem} Dari User Premium`)
					break
				case 'unban':
					if (!isOwner)return reply(mess.only.ownerB)
				    if (!isPrem) return reply(mess.only.premium)
					bnnd = body.slice(8)
					ban.splice(`${bnnd}@s.whatsapp.net`, 1)
					fs.writeFileSync('./database/json/banned.json', JSON.stringify(ban))
					reply(`Nomor wa.me/${bnnd} telah di unban!`)
					break
				case 'block':
				 client.updatePresence(from, Presence.composing) 
				 client.chatRead (from)
					if (!isGroup) return reply(mess.only.group)
					if (!isOwner) return reply(mess.only.ownerB)
					client.blockUser (`${body.slice(7)}@c.us`, "add")
					client.sendMessage(from, `perintah Diterima, memblokir ${body.slice(7)}@c.us`, text)
					break
				case 'unblock':
                    if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isOwner) return reply(mess.only.ownerB)
				    client.blockUser (`${body.slice(9)}@c.us`, "remove")
					client.sendMessage(from, `perintah Diterima, membuka blokir ${body.slice(9)}@c.us`, text)
				    break
				    
				  case 'ownergrup':
				  case 'ownergroup':
               client.updatePresence(from, Presence.composing) 
              options = {
          text: `Este proprietario deste grupo e : wa.me/${from.split("-")[0]}`,
          contextInfo: { mentionedJid: [from] }
           }
           client.sendMessage(from, options, text, { quoted: mek } )
				break
				case 'leave': 
				    if (!isGroup) return reply(mess.only.group)
					if (!isOwner) return reply(mess.only.ownerB)
			    	anu = await client.groupLeave(from, `Bye All Member *${groupMetadata.subject}*`, groupId)
	                break
	            case 'getses':
                    if (!isOwner) return client.reply(from, 'Perintah ini hanya untuk Owner bot', id)
                    const sesPic = await client.getSnapshot()
                    client.sendFile(from, sesPic, 'session.jpg', 'Neh...', id)
                    break
				case 'setname':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
                if (!isGroup) return reply(mess.only.group)
			    if (!isGroupAdmins) return reply(mess.only.admin)
				if (!isBotGroupAdmins) return reply(mess.only.Badmin)
                client.groupUpdateSubject(from, `${body.slice(9)}`)
                client.sendMessage(from, `\`\`\`‚úìSukses Mengganti Nama Group Menjadi\`\`\` *${body.slice(9)}*`, text, {quoted: mek})
                break
                case 'setdesc':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (!isGroup) return reply(mess.only.group)
			    if (!isGroupAdmins) return reply(mess.only.admin)
				if (!isBotGroupAdmins) return reply(mess.only.Badmin)
                client.groupUpdateDescription(from, `${body.slice(9)}`)
                client.sendMessage(from, `\`\`\`‚úìSukses Mengganti Deskripsi Group\`\`\` *${groupMetadata.subject}* Menjadi: *${body.slice(9)}*`, text, {quoted: mek})
                break
				case 'tts':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (args.length < 1) return client.sendMessage(from, 'C√≥digo de idioma obrigat√≥rio!!', text, {quoted: mek})
					const gtts = require('./lib/gtts')(args[0])
					if (args.length < 2) return client.sendMessage(from, 'Cad√™ o texto tio', text, {quoted: mek})
					dtt = body.slice(8)
					ranm = getRandom('.mp3')
					rano = getRandom('.ogg')
					dtt.length > 600
					? reply('A maior parte do texto √© tio')
					: gtts.save(ranm, dtt, function() {
						exec(`ffmpeg -i ${ranm} -ar 48000 -vn -c:a libopus ${rano}`, (err) => {
							fs.unlinkSync(ranm)
							buffer = fs.readFileSync(rano)
							if (err) return reply('Gagal om:(')
							client.sendMessage(from, buffer, audio, {quoted: mek, ptt:true})
							fs.unlinkSync(rano)
						})
					})
					await limitAdd(sender)
					break  
				case 'translate':
				case 'translete':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				    if (args.length < 1) return client.sendMessage(from, 'Kode Bahasanya???', text, {quoted: mek})
				    if (args.length < 2) return client.sendMessage(from, 'Text Yg Mau Di translate??', text, {quoted: mek})
				    ts = body.slice(11)
				    kode = ts.split("/")[0]
				    teks = ts.split("/")[1]
				    anu = await fetchJson(`https://api.arugaz.my.id/api/edu/translate?lang=${kode}&text=${teks}`)
				    reply(mess.wait)
				    translate = `Text Asli: *${body.slice(11)}*\n\nHasil: *${anu.text}*`
				    client.sendMessage(from, translate, text, {quoted: mek})
				   await limitAdd(sender)
				   break 
				case 'ts':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				    if (args.length < 1) return client.sendMessage(from, 'Kode Bahasanya???', text, {quoted: mek})
				    if (args.length < 2) return client.sendMessage(from, 'Text Yg Mau Di translate??', text, {quoted: mek})
				    ts = body.slice(4)
				    kode = ts.split("/")[0]
				    teks = ts.split("/")[1]
				    anu = await fetchJson(`https://api.arugaz.my.id/api/edu/translate?lang=${kode}&text=${teks}`)
				    reply(mess.wait)
				    ts = `Text Asli: *${body.slice(7)}*\n\nHasil: *${anu.text}*`
				    client.sendMessage(from, ts, text, {quoted: mek})
				   await limitAdd(sender)
				   break 
	            case 'setpp':
	            if (isBanned) return reply(mess.only.benned)    
	            if (!isUser) return reply(mess.only.userB)
                    if (!isGroup) return reply(mess.only.group)
                    if (!isGroupAdmins) return reply(mess.only.admin)
                    if (!isBotGroupAdmins) return reply(mess.only.Badmin)
                    media = await client.downloadAndSaveMediaMessage(mek)
                    await client.updateProfilePicture (from, media)
                    reply(mess.wait)
                    reply(`\`\`\`‚úìSukses Mengganti Profil Group\`\`\` *${groupMetadata.subject}*`)
                    break
                case 'apakah':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
					apakah = body.slice(1)
					const apa = apakahh
					const kah = apa[Math.floor(Math.random() * apa.length)]
					client.sendMessage(from, 'Pertanyaan : *'+apakah+'*\n\nJawaban : '+ kah, text, { quoted: mek })
					await limitAdd(sender)
					break 
				case 'rate':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					rate = body.slice(1)
					const te = rate[Math.floor(Math.random() * rate.length)]
					client.sendMessage(from, 'Pertanyaan : *'+rate+'*\n\nJawaban : '+ te+'', text, { quoted: mek })
					await limitAdd(sender)
					break 
				case 'watak':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					watak = body.slice(1)
					const tak = wa[Math.floor(Math.random() * wa.length)]
					client.sendMessage(from, 'Pertanyaan : *'+watak+'*\n\nJawaban : '+ tak, text, { quoted: mek })
					await limitAdd(sender)
					break 
				case 'hobby':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					hobby = body.slice(1)
					const by = hob[Math.floor(Math.random() * hob.length)]
					client.sendMessage(from, 'Pertanyaan : *'+hobby+'*\n\nJawaban : '+ by, text, { quoted: mek })
					await limitAdd(sender)
					break 
				case 'bisakah':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					bisakah = body.slice(1)
					const bisa = bisakahh
					const keh = bisa[Math.floor(Math.random() * bisa.length)]
					client.sendMessage(from, 'Pertanyaan : *'+bisakah+'*\n\nJawaban : '+ keh, text, { quoted: mek })
					await limitAdd(sender)
					break 
				case 'kapankah':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					kapankah = body.slice(1)
					const kapan = kapankahh
					const koh = kapan[Math.floor(Math.random() * kapan.length)]
					client.sendMessage(from, 'Pertanyaan : *'+kapankah+'*\n\nJawaban : '+ koh, text, { quoted: mek })
					await limitAdd(sender) 
					break 
				case 'truth':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://xptnbotapinew.herokuapp.com/?truth&apikey=xptn`, {method: 'get'})
					ttrth = `${anu.Dare}`
					truteh = await getBuffer(`https://i.ibb.co/305yt26/bf84f20635dedd5dde31e7e5b6983ae9.jpg`)
					client.sendMessage(from, truteh, image, { caption: '*Truth*\n\n'+ ttrth, quoted: mek })
					await limitAdd(sender) 
					break 
				case 'dare':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://xptnbotapinew.herokuapp.com/?dare&apikey=xptn`, {method: 'get'})
					der = `${anu.Dare}`
					tod = await getBuffer(`https://i.ibb.co/305yt26/bf84f20635dedd5dde31e7e5b6983ae9.jpg`)
					client.sendMessage(from, tod, image, { quoted: mek, caption: '*Dare*\n\n'+ der })
					await limitAdd(sender) 
					  break 
                case 'speed':
                case 'ping':
                const timestamp = speed();
                const latensi = speed() - timestamp 
                client.sendMessage(from, `Speed: ${latensi.toFixed(4)} _Second_`, text, { quoted: mek})
                    break
				case 'dorking':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
				dork = `${body.slice(9)}`
					anu = await fetchJson(`https://api-anoncybfakeplayer.herokuapp.com/dorking?dork=${dork}`, {method: 'get'})
					hasil = `${anu.result}`
					client.sendMessage(from, hasil, text, {quoted: mek})
					await limitAdd(sender) 
					break  
                case 'tagme':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
					var nom = mek.participant
					const tag = {
					text: `@${nom.split("@s.whatsapp.net")[0]} Tuh gua tag, kasian gaada yang tag yahahah`,
					contextInfo: { mentionedJid: [nom] }
					}
					client.sendMessage(from, tag, text, {quoted: mek})
					break
         case 'lirik':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                reply(mess.wait)
					teks = body.slice(7)
					anu = await fetchJson(`http://scrap.terhambar.com/lirik?word=${teks}`, {method: 'get'})
					reply('Lirik dari lagu '+teks+' adalah :\n\n'+anu.result.lirik)
					await limitAdd(sender) 
					break 

                case 'bugreport':
                case 'report':
                     const bug = body.slice(5)
                      if (pesan.length > 300) return client.sendMessage(from, 'Maaf Teks Terlalu Panjang, Maksimal 300 Teks', msgType.text, {quoted: mek})
                        var nomor = mek.participant
                       teks1 = `*[REPORT]*\nNomor : @${nomor.split("@s.whatsapp.net")[0]}\nPesan : ${pesan}`
                      var options = {
                         text: teks1,
                         contextInfo: {mentionedJid: [nomor]},
                     }
                    client.sendMessage(NomerOwner, options, text, {quoted: mek})
                    reply('Masalah telah di laporkan ke owner BOT, laporan palsu/main2 tidak akan ditanggapi.')
                    break
              case 'request':
			if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
                     const pesann = body.slice(8)
                      if (pesan.length > 300) return client.sendMessage(from, 'Maaf Teks Terlalu Panjang, Maksimal 300 Teks', msgType.text, {quoted: mek})
                        var nomor = mek.participant
                       const teks2 = `*[REQUEST]*\nNomor : @${nomor.split("@s.whatsapp.net")[0]}\nPesan : ${pesan}`

                      var options = {
                         text: teks1,
                         contextInfo: {mentionedJid: [nomor]},
                     }
                    client.sendMessage('6289649480997@s.whatsapp.net', options, text, {quoted: mek})
                    reply('Request telah di laporkan ke owner BOT, request  yang dapat membebani owner tidak akan ditanggapi.')
                    break
				case 'meme':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
					meme = await kagApi.memes()
					buffer = await getBuffer(`https://imgur.com/${meme.hash}.jpg`)
					client.sendMessage(from, buffer, image, {quoted: mek, caption: '.......'})
					await limitAdd(sender)
					break 
				case 'memeindo':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
					memein = await fetchJson(`https://api.zeks.xyz/api/memeindo?apikey=${ZeksApi}`)
					buffer = await getBuffer(memein.result)
					client.sendMessage(from, buffer, image, {quoted: mek, caption: '.......'})
					await limitAdd(sender)
					break 
				case 'ssweb':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('Urlnya mana gan?')
					teks = `${body.slice(7)}`
					reply(mess.wait)
					anu = await fetchJson(`https://mnazria.herokuapp.com/api/screenshotweb?url=${teks}`)
					ssweb = await getBuffer(anu.gambar)
					client.sendMessage(from, ssweb, image, {quoted: mek})
					await limitAdd(sender)
					break 
				case 'nsfwloli':
				    try {
				    if (isBanned) return reply(mess.only.benned)    
				    if (!isUser) return reply(mess.only.userB)
				    if (isLimit(sender)) return reply(limits.limitend(pushname2))
						if (!isNsfw) return reply(' *FALSE* ')
						res = await fetchJson(`https://tobz-api.herokuapp.com/api/randomloli?apikey=${TobzApi}`, {method: 'get'})
						buffer = await getBuffer(res.result)
						client.sendMessage(from, buffer, image, {quoted: mek, caption: 'Jangan jadiin bahan buat comli om'})
					} catch (e) {
						console.log(`Error :`, color(e,'red'))
						reply(' *ERROR* ')
					}
					await limitAdd(sender)
					break 
			    case 'nsfwblowjob':
				    try {
				    if (isBanned) return reply(mess.only.benned)    
				    if (!isUser) return reply(mess.only.userB)
				    if (isLimit(sender)) return reply(limits.limitend(pushname2))
						if (!isNsfw) return reply(' *FALSE* ')
						res = await fetchJson(`https://tobz-api.herokuapp.com/api/nsfwblowjob?apikey=${TobzApi}`, {method: 'get'})
						buffer = await getBuffer(res.result)
						client.sendMessage(from, buffer, image, {quoted: mek, caption: 'Jangan jadiin bahan buat comli om'})
					} catch (e) {
						console.log(`Error :`, color(e,'red'))
						reply(' *ERROR* ')
					}
					await limitAdd(sender)
					break 
			    case 'nsfwneko':
				    try {
				    if (isBanned) return reply(mess.only.benned)    
				    if (!isUser) return reply(mess.only.userB)
				    if (isLimit(sender)) return reply(limits.limitend(pushname2))
						if (!isNsfw) return reply(' *FALSE* ')
						res = await fetchJson(`https://tobz-api.herokuapp.com/api/nsfwneko?apikey=${TobzApi}`, {method: 'get'})
						buffer = await getBuffer(res.result)
						client.sendMessage(from, buffer, image, {quoted: mek, caption: 'ni anjim'})
					} catch (e) {
						console.log(`Error :`, color(e,'red'))
						reply(' *ERROR* ')
					}
					await limitAdd(sender) 
					break 
				case 'nsfwtrap':
				    try {
				    if (isBanned) return reply(mess.only.benned)    
				    if (!isUser) return reply(mess.only.userB)
				    if (isLimit(sender)) return reply(limits.limitend(pushname2))
						if (!isNsfw) return reply(' *FALSE* ')
						res = await fetchJson(`https://tobz-api.herokuapp.com/api/nsfwtrap?apikey=${TobzApi}`, {method: 'get'})
						buffer = await getBuffer(res.result)
						client.sendMessage(from, buffer, image, {quoted: mek, caption: 'ni anjim'})
					} catch (e) {
						console.log(`Error :`, color(e,'red'))
						reply(' *ERROR* ')
					}
					await limitAdd(sender) 
					break 
				case 'randomhentai':
				case 'hentai':
				    try {
					if (isBanned) return reply(mess.only.benned)    
			    	if (!isUser) return reply(mess.only.userB)
					if (!isPrem) return reply(mess.only.premium)
						res = await fetchJson(`https://tobz-api.herokuapp.com/api/hentai?apikey=BotWeA`, {method: 'get'})
						bufferxx = await getBuffer(res.result)
						client.sendMessage(from, bufferxx, image, {quoted: mek, caption: 'hentai teros'})
					} catch (e) {
						console.log(`Error :`, color(e,'red'))
						reply('‚ùå *ERROR* ‚ùå')
					}
					break
				case 'hilih':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
					if (args.length < 1) return reply('Teksnya mana gan?')
					anu = await fetchJson(`https://api.i-tech.id/tools/hilih?key=${TechApi}&kata=${body.slice(7)}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'chord':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
					if (args.length < 1) return reply('Mau Nyari Chord Lagu Apa??')
					tels = body.slice(7)
					anu = await fetchJson(`https://api.i-tech.id/tools/chord?key=${TechApi}&query=${tels}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break 
               case 'infogempa':
               if (isBanned) return reply(mess.only.benned)    
               if (!isUser) return reply(mess.only.userB)
               if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   anu = await fetchJson(`https://docs-jojo.herokuapp.com/api/infogempa`, {method: 'get'})
                   if (anu.error) return reply(anu.error)
                   buff = await getBuffer(anu.map)
                   reply(mess.wait)
                   gempa = `‚Ä¢Lokasi *${anu.lokasi}*\n‚Ä¢ Saran: *${anu.waktu}* \n‚Ä¢ Potensi: *${anu.potensi}*\n‚Ä¢ Magnitude: *${anu.magnitude}*\n‚Ä¢ Kedalaman: *${anu.kedalaman}*\n‚Ä¢ Koordinat: *${anu.koordinat}*`
                   client.sendMessage(from, buff, image, {quoted: mek, caption: gempa})
                   await limitAdd(sender) 
                   break
			     case 'nekopoi':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
		          	   reply(mess.wait)
              	    if (args.length < 1) return reply('teksnya mana gan?')
                    teks = body.slice(9)
                    anu = await fetchJson(`https://api.vhtear.com/nekosearch?query=${teks}&apikey=${VthearApi}`, {method: 'get'})
                    teks = `===============\n`
                    for (let neko of anu.result) {
                    teks += `Title: ${neko.title}\nDeskripsi: ${neko.detail}\n===============\n`
                    }
                    reply(teks.trim())
			     	await limitAdd(sender) 
			     	break  
                case 'kucing':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=kucing`, {method: 'get'})
					reply(mess.wait)
					n = JSON.parse(JSON.stringify(anu));
					nimek =  n[Math.floor(Math.random() * n.length)];
					pok = await getBuffer(nimek)
					client.sendMessage(from, pok, image, { quoted: mek , caption: 'meongüêà'})
					await limitAdd(sender) 
					break 


/*
* ====only grup fitur anime====>
*/
              case 'anime':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					anu = await fetchJson(`https://tobz-api.herokuapp.com/api/randomanime?apikey=${TobzApi}`, {method: 'get'})
					reply(mess.wait)
					pok = await getBuffer(anu.result)
					client.sendMessage(from, pok, image, { quoted: mek , caption: 'nihhh'})
					await limitAdd(sender) 
					break  
				case 'animekiss':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					anp = getRandom('.gif')
					rano = getRandom('.webp')
					anu = await fetchJson(`https://tobz-api.herokuapp.com/api/kiss?apikey=${TobzApi}`, {method: 'get'})
					exec(`wget ${anu.result} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
						fs.unlinkSync(ranp)
						if (err) return reply(mess.error.stick)
						buffer = fs.readFileSync(rano)
						client.sendMessage(from, buffer, sticker, {quoted: mek})
						fs.unlinkSync(rano)
					})
					await limitAdd(sender) 
					break 
				case 'naruto':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=Naruto`, {method: 'get'})
					naru = JSON.parse(JSON.stringify(anu));
					to =  naru[Math.floor(Math.random() * naru.length)];
					nye = await getBuffer(to)
					client.sendMessage(from, nye, image, { caption: 'naruto!!', quoted: mek })
					await limitAdd(sender)
					break 
				case 'minato':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=Minato`, {method: 'get'})
					min = JSON.parse(JSON.stringify(anu));
					ato =  min[Math.floor(Math.random() * min.length)];
					nye = await getBuffer(ato)
					client.sendMessage(from, nye, image, { caption: 'minato!!', quoted: mek })
					await limitAdd(sender)
					break 
				case 'boruto':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=Boruto`, {method: 'get'})
					bor = JSON.parse(JSON.stringify(anu));
					uto =  bor[Math.floor(Math.random() * bor.length)];
					nye = await getBuffer(uto)
					client.sendMessage(from, nye, image, { caption: 'boruto!!', quoted: mek })
					await limitAdd(sender)
					break 
				case 'hinata':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=Hinata`, {method: 'get'})
					hina = JSON.parse(JSON.stringify(anu));
					ta =  hina[Math.floor(Math.random() * hina.length)];
					nye = await getBuffer(ta)
					client.sendMessage(from, nye, image, { caption: 'hinata!!', quoted: mek })
					await limitAdd(sender)
					break 
				case 'sasuke':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=sasuke`, {method: 'get'})
					sasu = JSON.parse(JSON.stringify(anu));
					ke =  sasu[Math.floor(Math.random() * sasu.length)];
					nye = await getBuffer(ke)
					client.sendMessage(from, nye, image, { caption: 'sasuke!!', quoted: mek })
					await limitAdd(sender) 
					break 
				case 'sakura':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=sakura`, {method: 'get'})
					sak = JSON.parse(JSON.stringify(anu));
					kura =  sak[Math.floor(Math.random() * sak.length)];
					nye = await getBuffer(kura)
					client.sendMessage(from, nye, image, { caption: 'sakura!!', quoted: mek })
					await limitAdd(sender) 
					break 

				case 'kaneki':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=kaneki`, {method: 'get'})
					kan = JSON.parse(JSON.stringify(anu));
					eki =  kan[Math.floor(Math.random() * kan.length)];
					nye = await getBuffer(eki)
					client.sendMessage(from, nye, image, { caption: 'kaneki!!', quoted: mek })
					await limitAdd(sender) 
					break 
				case 'toukachan':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anime+touka`, {method: 'get'})
					tou = JSON.parse(JSON.stringify(anu));
					ka =  tou[Math.floor(Math.random() * tou.length)];
					nye = await getBuffer(ka)
					client.sendMessage(from, nye, image, { caption: 'toukachan!!', quoted: mek })
					await limitAdd(sender) 
					break 
				case 'rize':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anime+rize`, {method: 'get'})
					ri = JSON.parse(JSON.stringify(anu));
					ze =  ri[Math.floor(Math.random() * ri.length)];
					nye = await getBuffer(ze)
					client.sendMessage(from, nye, image, { caption: 'rize chan!!', quoted: mek })
					await limitAdd(sender) 	
					break 
				case 'akira':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anime+akira`, {method: 'get'})
					ak = JSON.parse(JSON.stringify(anu));
					ara =  ak[Math.floor(Math.random() * ak.length)];
					nye = await getBuffer(ara)
					client.sendMessage(from, nye, image, { caption: 'akira chan!!', quoted: mek })
					await limitAdd(sender) 
					break 
				case 'itori':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anime+itori`, {method: 'get'})
					it = JSON.parse(JSON.stringify(anu));
					ori =  it[Math.floor(Math.random() * it.length)];
					nye = await getBuffer(ori)
					client.sendMessage(from, nye, image, { caption: 'itori chan!!', quoted: mek })
					await limitAdd(sender) 
					break 
				case 'kurumi':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anime+karumi`, {method: 'get'})
					kur = JSON.parse(JSON.stringify(anu));
					imi =  kur[Math.floor(Math.random() * kur.length)];
					nye = await getBuffer(imi)
					client.sendMessage(from, nye, image, { caption: 'kurumi chan!!', quoted: mek })
					await limitAdd(sender) 
					break 
				case 'miku':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isAnime) return reply(' *Harus Mengaktifkan Mode Anime* ')
					reply(mess.wait)
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anime+miku`, {method: 'get'})
					mi = JSON.parse(JSON.stringify(anu));
					ku =  mi[Math.floor(Math.random() * mi.length)];
					nye = await getBuffer(ku)
					client.sendMessage(from, nye, image, { caption: 'miku chan!!', quoted: mek })
					await limitAdd(sender) 
					break 
// akhir fitur anime

				case 'anjing':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.fdci.se/rep.php?gambar=anjing`, {method: 'get'})
					reply(mess.wait)
					n = JSON.parse(JSON.stringify(anu));
					nimek =  n[Math.floor(Math.random() * n.length)];
					pok = await getBuffer(nimek)
					client.sendMessage(from, pok, image, { quoted: mek })
					await limitAdd(sender) 
					break 
                case 'resepmasakan':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                reply(mess.wait)
                   anu = await fetchJson(`https://api.vhtear.com/resepmasakan?query=${body.slice(12)}&apikey=${VthearApi}`, {method: 'get'})
                   buff = await getBuffer(anu.result.image)
                   resep = `*${anu.result.title}*\n${anu.result.desc}\n\n*BAHAN¬≤ YG DIPERLUKAN*\n${anu.result.bahan}\n\n*CARA MASAKNYA*\n${anu.result.cara}`
                   client.sendMessage(from, buff, image, {quoted: mek, caption: resep})
                   await limitAdd(sender) 
                   break 
               case 'cersex':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (!isPrem) return reply(mess.only.premium)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   anu = await fetchJson(`https://api.vhtear.com/cerita_sex&apikey=${VthearApi}`, {method: 'get'})
                   if (anu.error) return reply(anu.error)
                   sex = await getBuffer(anu.result.image)
                   reply (mess.wait)
                   cerita = `‚Ä¢ *Judul:* ${anu.result.judul}\n\n${anu.result.cerita}`
                   client.sendMessage(from, sex, image, {quoted: mek, caption: cerita})
                   await limitAdd(sender) 
                   break    
               case 'pornhub':
			   if (isBanned) return reply(mess.only.benned)    
			   if (!isPrem) return reply(mess.only.premium)
			   if (!isUser) return reply(mess.only.userB)
			   if (isLimit(sender)) return reply(limits.limitend(pushname2))
			   reply(mess.wait)
              	    if (args.length < 1) return reply('teksnya mana gan?')
                    teks = body.slice(9)
                    anu = await fetchJson(`https://api.arugaz.my.id/api/media/pornhub/search?query=${teks}`, {method: 'get'})
                    teks = `===============\n`
                    for (let bokep of anu.result) {
                    teks += `Title: ${bokep.title}\nAktor: ${bokep.author}\nViewers: *${bokep.views}*\nDurasi: ${bokep.duration}\nLink: ${bokep.link}\n===============\n`
                    }
                    reply(teks.trim())
			     	await limitAdd(sender) 
			     	break  
			     	
			     case 'xxx':
			   if (isBanned) return reply(mess.only.benned)    
			   if (!isUser) return reply(mess.only.userB)
			   if (!isPrem) return reply(mess.only.premium)
			   if (isLimit(sender)) return reply(limits.limitend(pushname2))
			   reply(mess.wait)
              	    if (args.length < 1) return reply('teksnya mana gan?')
                    teks = body.slice(5)
                    anu = await fetchJson(`https://api.vhtear.com/xxxsearch?query=${teks}&apikey=${VthearApi}`, {method: 'get'})
                    teks = `===============\n`
                    for (let bokep of anu.result) {
                    teks += `‚Ä¢ Title: ${bokep.data.title}\n‚Ä¢ Durasi: ${bokep.data.durasi}\n‚Ä¢ Link: ${bokep.data.url}\n===============\n`
                    }
                    reply(teks.trim())
			     	await limitAdd(sender) 
			     	break 

				case 'fb':
				  client.updatePresence(from, Presence.composing)
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
					if (args.length < 1) return reply('Urlnya mana gan?')
					if (!isUrl(args[0]) && !args[0].includes('www.facebook.com')) return reply(mess.error.Iv)
					reply(mess.wait)
					anu = await fetchJson(`https://mhankbarbar.tech/api/epbe?url=${args[0]}&apiKey=${BarBarApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					client.sendMessage(from, '[ WAIT ] Sedang Diproses\n\nLinknya Only Google Gan Biar Bisa Didownload', text, {quoted: mek})
					efbe = `Title: *${anu.title}*\nSize: *${anu.filesize}\nDipublikasikan Pada: *${anu.published}*`
					tefbe = await getBuffer(anu.thumb)
					client.sendMessage(from, tefbe, image, {quoted: mek, caption: efbe})
					buffer = await getBuffer(anu.result)
					client.sendMessage(from, buffer, video, {mimetype: 'video/mp4', quoted: mek, caption: 'Nih Gan'})
					await limitAdd(sender) 
					break 
			
			case 'insta':
				if (isBanned) return reply(mess.only.benned)
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (!isUrl(args[0]) && !args[0].includes('www.instagram.com')) return reply(mess.error.lv)
				    anu = await fetchJson(`https://api.i-tech.id/dl/igdl?key=${TechApi}&link=${args[0]}`, {method: 'get'})
				    insta = getBuffer(anu.result.url)
				    reply(mess.wait)
				    client.sendMessage(from, insta, {quoted: mek})
				    await limitAdd(sender) 
				    break  
				    
				case 'instastory':
				if (isBanned) return reply(mess.only.benned)
				if (!isUser) return reply(mess.only.userB) 
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				instor = `${body.slice(12)}`
				anu = await fetchJson(`https://api.i-tech.id/dl/story?key=${TechApi}&username=${instor}`, {method: 'get'})
				buff = await getBuffer(anu.result.url)
				client.sendMessage(from, buff, image, {quoted: mek})
				await limitAdd(sender)
				break
			case 'hekerbucin':
				if (isBanned) return reply(mess.only.benned)
				if (!isUser) return reply(mess.only.userB) 
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				hasil = hekerbucin[Math.floor(Math.random() * (hekerbucin.length))]
				client.sendMessage(from, '*'+hasil+'*', text, {quoted: mek})
				await limitAdd(sender)
				break 
				case 'ytsearch':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('Yang mau di cari apa?')
					reply(mess.wait)
					anu = await fetchJson(`https://api.arugaz.my.id/api/media/ytsearch?query=${body.slice(10)}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					teks = '=================\n'
					for (let i of anu.result) {
						teks += `\`\`\`Title\`\`\` : *${i.title}*\n\`\`\`Link\`\`\` : *https://youtu.be/${i.id}*\n\`\`\`Published\`\`\` : *${i.uploadDate}*\n\`\`\`Duration\`\`\` : *${i.duration}*\n\`\`\`Viewers: \`\`\`*${h2k(i.viewCount)}*\n\`\`\`Channel:\`\`\` *${i.channel.name}*\n=================\n`
					}
					reply(teks.trim())
					await limitAdd(sender) 
					break 
				case 'film':
				if (isBanned) return reply(mess.only.benned)
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('Mau Cari Film Apa?')
					reply(mess.wait)
				anu = await fetchJson(`https://api.vhtear.com/downloadfilm?judul=${body.slice(6)}&apikey=${VthearApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					film = `‚Ä¢ Judul: *${anu.result.judul}*\n‚Ä¢ Resolusi: *${anu.result.resolusi}*\n‚Ä¢ Link Download: *${anu.result.urlDownload}*\n`
					client.sendMessage(from, film, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'tiktok':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('Urlnya mana gan?')
					if (!isUrl(args[0]) && !args[0].includes('vt')) return reply(mess.error.Iv)
					reply(mess.wait)
					anu = await fetchJson(`https://api.vhtear.com/tiktokdl?link=${args[0]}&apikey=${VthearApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					buffer = await getBuffer(anu.result.video)
					client.sendMessage(from, buffer, video, {quoted: mek})
					await limitAdd(sender)
					break 
				case 'tiktokstalk':
					try {
					if (isBanned) return reply(mess.only.benned)    
					if (!isUser) return reply(mess.only.userB)
					if (isLimit(sender)) return reply(limits.limitend(pushname2))
						if (args.length < 1) return client.sendMessage(from, 'Usernamenya mana gan?', text, {quoted: mek})
						let { user, stats } = await tiktod.getUserProfileInfo(args[0])
						reply(mess.wait)
						teks = `*ID* : ${user.id}\n*Username* : ${user.uniqueId}\n*Nickname* : ${user.nickname}\n*Followers* : ${stats.followerCount}\n*Followings* : ${stats.followingCount}\n*Posts* : ${stats.videoCount}\n*Luv* : ${stats.heart}\n`
						buffer = await getBuffer(user.avatarLarger)
						client.sendMessage(from, buffer, image, {quoted: mek, caption: teks})
					} catch (e) {
						console.log(`Error :`, color(e,'red'))
						reply('Kemungkinan username tidak valid')
					}
					await limitAdd(sender) 
					break  
				case 'wp':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				
					if (args.length < 1) return reply('teks nya mana om')
					teksj = body.slice(4)
					reply(mess.wait)
					anwu = await fetchJson(`https://api.vhtear.com/walpaper?query=${teksj}&apikey=Jsieu8287362jshre82`, {method: 'get'})
					bufferx = await getBuffer(anwu.result.LinkImg)
					client.sendMessage(from, bufferx, image, {quoted: mek})
					break
//creator
				case 'nulis':
				case 'tulis':
				  client.updatePresence(from, Presence.composing)
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
			if (args.length < 1) return reply(`${name} Harus Nulis Apa Kak??`)
			reply(mess.wait)
					tulis = body.slice(7)
				  nama = tulis.split("/")[0];
					kelas = tulis.split("/")[1];
					isi = tulis.split("/")[2];
					nulis = await getBuffer(`https://api.zeks.xyz/api/magernulis?nama=${nama}&kelas=${kelas}&text=${isi}&tinta=4`, {method: 'get'})
					client.sendMessage(from, nulis, image, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'ttp':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('*Textnya mana om?*')
					ranp = getRandom('.png')
					rano = getRandom('.webp')
					teks = body.slice(5).trim()
					anu = await fetchJson(`https://mhankbarbar.tech/api/text2image?text=${teks}&apiKey=${BarBarApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					reply(mess.wait)
					exec(`wget ${anu.result} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${rano}`, (err) => {
						fs.unlinkSync(ranp)
						if (err) return reply(mess.error.stick)
						bufferhgf = fs.readFileSync(rano)
						client.sendMessage(from, bufferhgf, sticker, {quoted: mek})
						fs.unlinkSync(rano)
					})
					await limitAdd(sender)
					break  
					
				case 'slide':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('*Textnya mana gan?*')
					teks = `${body.slice(7)}`
					atytyd = await getBuffer(`https://api.vhtear.com/slidingtext?text=${teks}&apikey=${VthearApi}`, {method: 'get'})
					reply(mess.wait)
					client.sendMessage(from, atytyd, video, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'cparty':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply(mess.blank)
					part = body.slice(7)
					reply(mess.wait)
					bufferu = await getBuffer(`https://api.vhtear.com/partytext?text=${part}&apikey=beli api key biar work`, {method: 'get'})
					client.sendMessage(from, bufferu, image, {caption: 'Nih kak', quoted: mek})
					break 
				case 'cshadow':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					shad = body.slice(9)
					reply(mess.wait)
					ssha = await getBuffer(`https://api-anoncybfakeplayer.herokuapp.com/photooxy/shadowtext?text=${shad}`)
					client.sendMessage(from, ssha, image, {caption: 'Nih kak', quoted: mek})
					await limitAdd(sender) 
					break 
				case 'cminion':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					minio = body.slice(9)
					reply(mess.wait)
					minn = await getBuffer(`https://api-anoncybfakeplayer.herokuapp.com/textpro/miniontext?text=${minio}`)
					client.sendMessage(from, minn, image, {caption: 'Nih kak', quoted: mek})
					await limitAdd(sender) 
					break 
				case 'cneon':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					nneoo = body.slice(7)
					reply(mess.wait)
					nooe = await getBuffer(`https://api-anoncybfakeplayer.herokuapp.com/textpro/neontext?text=${nneoo}`)
					client.sendMessage(from, nooe, image, {caption: 'Nih kak', quoted: mek})
					await limitAdd(sender) 
					break 
				case 'cneongreen':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					grre = body.slice(12)
					reply(mess.wait)
					gree = await getBuffer(`https://api-anoncybfakeplayer.herokuapp.com/textpro/greenneontext?text=${grre}`)
					client.sendMessage(from, gree, image, {caption: 'Nih kak', quoted: mek})
					await limitAdd(sender) 
					break 
				case 'cneon2':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					duadua = body.slice(8)
					reply(mess.wait)
					duaa = await getBuffer(`https://api-anoncybfakeplayer.herokuapp.com/textpro/neonwithgalaxytext?text=${duadua}`)
					client.sendMessage(from, duaa, image, {caption: 'Nih kak', quoted: mek})
					await limitAdd(sender) 
					break 
				case 'c3d':
					if (args.length < 1) return reply(mess.blank)
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					dimen = body.slice(5)
					reply(mess.wait)
					tigaa = await getBuffer(`https://api-anoncybfakeplayer.herokuapp.com/textpro/3dgradientstext?text=${dimen}`)
					client.sendMessage(from, tigaa, image, {caption: 'Nih kak', quoted: mek})
					await limitAdd(sender) 
					break 
					case 'croman':
                if (!isUser) return reply(mess.only.userB)
                if (isBanned) return reply(mess.only.benned)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                roman = `${body.slice(8)}`
                     if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
                     buff = await getBuffer(`https://api.vhtear.com/romancetext?text=${roman}&apikey=${VthearApi}`, {method: 'get'})
                     client.sendMessage(from, buff, image, {quoted: mek})
                  await limitAdd(sender) 
                  break 
					case 'love':
					  if (!isUser) return reply(mess.only.userB)
					  if (isBanned) return reply(mess.only.benned)
					  if (isLimit(sender)) return reply(limits.limitend(pushname2))
                tahtae = `${body.slice(6)}`
                     if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
                     buff = await getBuffer(`https://videfikri.com/api/textmaker/lovemsg/?text=${tahtae}`, {method: 'get'})
                     client.sendMessage(from, buff, image, {quoted: mek, caption: `Nih Anjim`})
                  await limitAdd(sender) 
					 break 
				case 'cmwolf':
					  if (!isUser) return reply(mess.only.userB)
					  if (isBanned) return reply(mess.only.benned)
					  if (isLimit(sender)) return reply(limits.limitend(pushname2))
					  if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					 mwolf = `${body.slice(8)}`
					 anu = await fetchJson(`https://tobz-api.herokuapp.com/api/photooxy?theme=wolf_metal&text=${mwolf}&apikey=${TobzApi}`, {method: 'get'})
					 cmwolf = await getBuffer(anu.result)
					 client.sendMessage(from, cmwolf, image, {quoted: mek})
					 await limitAdd(sender)
					 break  
				case 'cml':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					cml = `${body.slice(5)}`
					cml1 = cml.split("/")[0];
					cml2 = cml.split("/")[1];
					buffer = await getBuffer(`https://api.vhtear.com/logoml?hero=${cml1}&text=${cml2}&apikey=${VthearApi}`, {method: 'get'})
					client.sendMessage(from, buffer, image, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'cpubg':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					cpubg = `${body.slice(7)}`
					cpubg1 = cpubg.split("/")[0];
					cpubg2 = cpubg.split("/")[1];
					anu = await fetchJson(`https://tobz-api.herokuapp.com/api/photooxy?theme=pubg&text1=${cpubg1}&text2=${cpubg2}&apikey=${TobzApi}`, {method: 'get'})
					cpubg = await getBuffer(anu.result)
					client.sendMessage(from, cpubg, image, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'csky':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					sky = `${body.slice(6)}`
					if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					anu = await fetchJson(`https://api.zeks.xyz/api/skytext?text=${sky}&apikey=${ZeksApi}`, {method: 'get'})
					gools7 = await getBuffer(anu.result)
					client.sendMessage(from, gools7, image, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'cwooden':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					wood = `${body.slice(9)}`
					if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					anu = await fetchJson(`https://api.zeks.xyz/api/woodentext?text=${wood}&apikey=${ZeksApi}`, {method: 'get'})
					gools6 = await getBuffer(anu.result)
					client.sendMessage(from, gools6, image, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'ccrossfire':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					cf = `${body.slice(12)}`
					if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					anu = await fetchJson(`https://api.zeks.xyz/api/crosslogo?text=${cf}&apikey=${ZeksApi}`, {method: 'get'})
					gools5 = await getBuffer(anu.result)
					client.sendMessage(from, gools5, image, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'cflower':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					flower = `${body.slice(9)}`
					if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					anu = await fetchJson(`https://api.zeks.xyz/api/flowertext?text=${flower}&apikey=${ZeksApi}`, {method: 'get'})
					gools3 = await getBuffer(anu.result)
					client.sendMessage(from, gools3, image, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'cnaruto':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					naruto = `${body.slice(9)}`
					if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
					anu = await fetchJson(`https://api.zeks.xyz/api/naruto?text=${naruto}&apikey=${ZeksApi}`, {method: 'get'})
					gools4 = await getBuffer(anu.result)
					client.sendMessage(from, gools4, image, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'tahta':
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                if (isBanned) return reply(mess.only.benned)
                tahta = `${body.slice(7)}`
                     if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
                     buff = await getBuffer(`https://api.zeks.xyz/api/hartatahta?text=${tahta}&apikey=${ZeksApi}`, {method: 'get'})
                     client.sendMessage(from, buff, image, {quoted: mek})
                  await limitAdd(sender) 
                  break  
                 case 'cbpink':
                if (!isUser) return reply(mess.only.userB)
                if (isBanned) return reply(mess.only.benned)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                bpink = `${body.slice(8)}`
                     if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
                     buff = await getBuffer(`https://api.vhtear.com/blackpinkicon?text=${bpink}&apikey=${VthearApi}`, {method: 'get'})
                     client.sendMessage(from, buff, image, {quoted: mek})
                  await limitAdd(sender)
                  break  
                  case 'cthunder':
                if (!isUser) return reply(mess.only.userB)
                if (isBanned) return reply(mess.only.benned)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                thunder = `${body.slice(10)}`
                     if (args.length < 1) return reply('Teksnya mana gan??')
                     if (args.length > 10) return reply('karakter minimal 10')
                     buff = await getBuffer(`https://api.vhtear.com/thundertext?text=${thunder}&apikey=${VthearApi}`, {method: 'get'})
                     client.sendMessage(from, buff, image, {quoted: mek})
                  await limitAdd(sender) 
                  break 

			    case 'quotemaker':
			    if (isBanned) return reply(mess.only.benned)
			        if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    if (!isUser) return reply(mess.only.userB)
					gh = `${body.slice(12)}`
					quote = gh.split("/")[0];
					wm = gh.split("/")[1];
					bg = gh.split("/")[2];
					const pref = `Usage: \n${prefix}quotemaker teks/watermark/theme\n\nEx :\n${prefix}quotemaker ini contoh/bicit/random`
					if (args.length < 1) return reply(pref)
					anu = await fetchJson(`https://terhambar.com/aw/qts/?kata=${quote}&author=${wm}&tipe=${bg}`, {method: 'get'})
					buffer = await getBuffer(anu.result)
					client.sendMessage(from, buffer, image, {quoted: mek})
					await limitAdd(sender) 
					break 
                case 'glitch':
			    if (isBanned) return reply(mess.only.benned)
			        if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    if (!isUser) return reply(mess.only.userB)
                tahtar3 = `${body.slice(8)}`
                tahtar = tahtar3.split("/")[0];
			    tahtar2 = tahtar3.split("/")[1];
                     const preff = `Usage: \n${prefix}glitch teks/teks\n\nEx :\n${prefix}glitch ini contoh/anjay`
					if (args.length < 1) return reply(preff)
                     buff = await getBuffer(`https://videfikri.com/api/textmaker/tiktokeffect/?text1=${tahtar}&text2=${tahtar2}`, {method: 'get'})
                     client.sendMessage(from, buff, image, {quoted: mek, caption: `Nih Anjim`})
                  await limitAdd(sender) 
                  break  
                case 'cphlogo':
                if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
					gh = `${body.slice(9)}`
					gbl1 = gh.split("/")[0];
					gbl2 = gh.split("/")[1];
					if (args.length < 1) return reply('Teksnya mana gan?')
					buffer = await getBuffer(`https://api.vhtear.com/pornlogo?text1=${gbl1}&text2=${gbl2}&apikey=${VthearApi}`, {method: 'get'})
					client.sendMessage(from, buffer, image, {quoted: mek})
					await limitAdd(sender) 
					break 

//akhir kreator
			    case 'jarak':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    jarak = `${body.slice(7)}`
			    ja = jarak.split("/")[0];
			    rak = jarak.split("/")[1];
			    anu = await fetchJson(`https://api.vhtear.com/distance?from=${ja}&to=${rak}&apikey=${VthearApi}`, {method: 'get'})
			    client.sendMessage(from, `${anu.result.data}`, text, {quoted: mek})
			    await limitAdd(sender) 
			    break  
			    case 'infoalamat':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
                    anu = await fetchJson(`https://api.vhtear.com/infoalamat?query=${body.slice(12)}&apikey=${VthearApi}`, {method: 'get'})
			        client.sendMessage(from, `${anu.result.data}`, text, {quoted: mek})
			        await limitAdd(sender) 
			        break 
				case 'setlimit':
					if (args.length < 1) return
         if (!isOwner) return reply("perintah ini hanya dapat di gunakan oleh owner ${name}")
					limitt = args[0]
					reply(`Limit berhasil di ubah menjadi : ${limitt}`)
			    case 'tinyurl':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
                    anu = await fetchJson(`https://tobz-api.herokuapp.com/api/tinyurl?url=${body.slice(9)}&apikey=${TobzApi}`)
			        tinyurl = `${anu.result}`
			        reply(tinyurl)
			        await limitAdd(sender) 
			        break 
			    case 'infonomor':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
                    anu = await fetchJson(`https://docs-jojo.herokuapp.com/api/infonomor?no=${body.slice(10)}`)
			        infonomor = `*nomor* \n${anu.nomor} *international* \n${anu.international}`
			        reply(infonomor)
			        await limitAdd(sender) 
					break
			   case 'igstalk':
                    if (isBanned) return reply(mess.only.benned)    
   					if (!isUser) return reply(mess.only.userB)
   					if (isLimit(sender)) return reply(limits.limitend(pushname2))
                        anu = await fetchJson(`https://mhankbarbar.tech/api/stalk?username=${body.slice(9)}&apiKey=${BarBarApi}`, {method: 'get'})
                     buffer = await getBuffer(anu.Profile_pic)
                     reply(mess.wait)
                     hasil = `„Äå *INSTAGRAM STALKER* „Äç\n\n‚Ä¢ Link: https://www.instagram.com/${anu.Username}\n‚Ä¢ Fullname : ${anu.Name}\n‚Ä¢ Following : ${anu.Jumlah_Followers}\n‚Ä¢ Followers : ${anu.Jumlah_Following}\n‚Ä¢ Jumlah Postingan: ${anu.Jumlah_Post}\n‚Ä¢ Bio : ${anu.Biodata}`
                    client.sendMessage(from, buffer, image, {quoted: mek, caption: hasil})
                    await limitAdd(sender) 
                    break 
			    case 'mimpi':
			    if (isBanned) return reply(mess.only.benned)
			        if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    if (!isUser) return reply(mess.only.userB)
			    reply(mess.wait)
			        anu = await fetchJson(`https://api.arugaz.my.id/api/primbon/tafsirmimpi?mimpi=${body.slice(7)}`, {method: 'get'})
			        mimpi = `Arti Mimpi *${body.slice(7)}* Adalah:\n${anu.result.hasil}`
			        client.sendMessage(from, mimpi, text, {quoted: mek})
			        await limitAdd(sender) 
			       	break 
				case 'quotes':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.arugaz.my.id/api/random/text/quotes`, {method: 'get'})
					quotes = `Quotes Dari: *${anu.result.by}*\n\n\n*${anu.result.quote}*`
					client.sendMessage(from, quotes, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'fakta':
				if (isBanned) return reply(mess.only.benned)   
				 if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (!isUser) return reply(mess.only.userB)
					anu = await fetchJson(`https://api.arugaz.my.id/api/random/text/faktaunik`, {method: 'get'})
					fakta = `Faktanya: ${anu.result}`
					client.sendMessage(from, fakta, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'katabijak':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.arugaz.my.id/api/random/text/katabijak`, {method: 'get'})
					katabijak = `Kata Bijak: *${anu.result}*`
					client.sendMessage(from, katabijak, text, {quoted: mek})
					await limitAdd(sender) 
					break 

			case 'profiltiktok':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
                    anu = await fetchJson(`https://docs-jojo.herokuapp.com/api/tiktokpp?user=${body.slice(14)}`)
			        tiktok = await getBuffer(anu.result)
              client.sendMessage(from, tiktok, image, {quoted: mek})
			        await limitAdd(sender) 
			        break 
		    case 'walpaper':
				client.updatePresence(from, Presence.composing) 
				 if (isBanned) return reply(mess.only.benned)    
				 if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (!isUser) return reply(mess.only.userB)
				reply(mess.wait)
				 data = fs.readFileSync('./FADHIL/fadil ch.js');
                 jsonData = JSON.parse(data);
                 randIndex = Math.floor(Math.random() * jsonData.length);
                 randKey = jsonData[randIndex];
                walpaper = await getBuffer(randKey.result)
                 client.sendMessage(from, walpaper, image, {quoted: mek, caption: '\`\`\`NIH BANG\`\`\`'})
				await limitAdd(sender) 
				break  
		    case 'darkjokes':
				client.updatePresence(from, Presence.composing) 
				 if (isBanned) return reply(mess.only.benned)    
				 if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (!isUser) return reply(mess.only.userB)
				reply(mess.wait)
				 data = fs.readFileSync('./FADHIL/drak.js');
                 jsonData = JSON.parse(data);
                 randIndex = Math.floor(Math.random() * jsonData.length);
                 randKey = jsonData[randIndex];
                 darkjokes = await getBuffer(randKey.result)
                 client.sendMessage(from, darkjokes, image, {quoted: mek, caption: '\`\`\`NIH BANG\`\`\`'})
				await limitAdd(sender) 
				break  
			case 'katailham':
				 if (isBanned) return reply(mess.only.benned) 
				 if (isLimit(sender)) return reply(limits.limitend(pushname2))    
		  		if (!isUser) return reply(mess.only.userB)
				hasil = katailham[Math.floor(Math.random() * (katailham.length))]
				client.sendMessage(from, '*'+hasil+'*', text, {quoted: mek})
				await limitAdd(sender)
				break
			case 'katacinta':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				anu = await fetchJson(`https://docs-jojo.herokuapp.com/api/katacinta`, {method: 'get'})
				katacin = `*${anu.result}*`
				client.sendMessage(from, katacin, text, {quoted: mek})
				await limitAdd(sender) 
				break  
				
			case 'pasangan':
			if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				pa = `${body.slice(10)}`
				sa = pa.split("/")[0];
				ngan = pa.split("/")[1];
				anu = await fetchJson(`https://api.vhtear.com/primbonjodoh?nama=${sa}&pasangan=${ngan}&apikey=${VthearApi}`, {method: 'get'})
				client.sendMessage(from, `${anu.result.hasil}`, {quoted: mek})
			await limitAdd(sender) 
			break 

			case 'persengay':
			case 'gaypersen':
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (args.length < 1) return reply('tag temanmu!')
				rate = body.slice(11)
				const kl = persengayy[Math.floor(Math.random() * persengayy.length)]
				client.sendMessage(from, 'Persen Gay: *'+rate+'*\n\nJawaban : '+kl+'', text, { quoted: mek })
				await limitAdd(sender) 
				break  

			case 'pbucin':
			case 'persenbucin':
			case 'bucinpersen':
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				if (args.length < 1) return reply('Mana Nama?')
				rate = body.slice(8)
				const pbucin = persenbucin[Math.floor(Math.random() * persenbucin.length)]
				client.sendMessage(from, 'Persen Bucin Kak: *'+rate+'*\n\nJawaban : '+ pbucin +'', text, { quoted: mek })
				await limitAdd(sender) 
				break 
		    case 'map':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
                anu = await fetchJson(`https://mnazria.herokuapp.com/api/maps?search=${body.slice(5)}`, {method: 'get'})
                buffer = await getBuffer(anu.gambar)
                client.sendMessage(from, buffer, image, {quoted: mek, caption: `${body.slice(5)}`})
				await limitAdd(sender) 
				break 
				case 'url2img':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					tipelist = ['desktop','tablet','mobile']
					if (args.length < 1) return reply('Tipenya apa gan?')
					if (!tipelist.includes(args[0])) return reply('Tipe desktop|tablet|mobile')
					if (args.length < 2) return reply('Urlnya mana gan?')
					if (!isUrl(args[1])) return reply(mess.error.Iv)
					reply(mess.wait)
					anu = await fetchJson(`https://mhankbarbar.tech/api/url2image?tipe=${args[0]}&url=${args[1]}&apiKey=${BarBarApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					url2img = await getBuffer(anu.result)
					client.sendMessage(from, url2img, image, {quoted: mek})
					await limitAdd(sender)
					break
          case 'addsticker':
			  if (!isQuotedSticker) return reply('Reply stiker nya')
				svst = body.slice(12)
				if (!svst) return reply('Nama sticker nya apa?')
				boij = JSON.parse(JSON.stringify(mek).replace('quotedM', 'm')).message.extendedTextMessage.contextInfo
				delb = await client.downloadMediaMessage(boij)
				fs.writeFileSync(`./sticker/${svst}.webp`, delb)
				client.sendMessage(from, `Berhasil menyimpan sticker!`, MessageType.text, { quoted: mek })
				break
			    case 'tagall':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					members_id = []
					teks = (args.length > 1) ? body.slice(8).trim() : ''
					teks += '\n'
					for (let mem of groupMembers) {
						teks += `‚ï†‚û• @${mem.jid.split('@')[0]}\nwa.me/${mem.jid.split('@')[0]}\n`
						members_id.push(mem.jid)
					}
					mentions(`‚ïî‚ïê‚ïê‚ïê‚ú™ Tag By *${pushname2}* ‚ú™‚ïê‚ïê`+ teks +'‚ïö‚ïê‚ïê‚ïê„Äò ${name} „Äô‚ïê‚ïê‚ïê', members_id, true)
					break
			case 'instagram':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
					if (args.length < 1) return reply('Urlnya mana gan?')
					if(!isUrl(args[0]) && !args[0].includes('instagram')) return reply(mess.error.Iv)
					anu = await fetchJson(`https://videfikri.com/api/igvideo/?url=${args[0]}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					ytte = `‚ï≠‚îÄ„Äå *INSTAGRAM DOWNLOADER* „Äç\n‚îÇ\n‚îÇ‚Ä¢ *Username:* ${anu.result.username}\n‚îÇ‚Ä¢ *Full Name:* ${anu.result.full_name}\n ‚îÇ‚Ä¢ *Like:* ${anu.result.like}\n ‚îÇ‚Ä¢ *Comment:* ${anu.result.comment}\n ‚îÇ‚Ä¢ *Durasi:* ${anu.result.duration}\n ‚îÇ‚Ä¢ *Caption:* ${anu.result.caption}\n‚îÇ\n‚îÇ Tunggu Sebentar 1 menit Mungkin Agak Lama \n‚îÇ Karna Mendownload Video\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`
					buff = await getBuffer(anu.result.thumb)
					buffer = await getBuffer(anu.result.video)
					client.sendMessage(from, buff, image, {quoted: mek, caption: ytte})
					client.sendMessage(from, buffer, video, {mimetype: 'video/mp4', filename: `${anu.result.caption}.mp4`, quoted: mek, caption: 'Nih Gan'})
					await limitAdd(sender) 
					break 
				case 'kicktime':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('Tag target yang ingin di tendang!')
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
					setTimeout( () => {
					client.sendMessage(from, 'Semoga Die Tenang Di Alam Sana', text)
					}, 8000)
					setTimeout( () => {
					reply('Done Bos Ku')
					}, 7000)
					setTimeout( () => {
					client.groupRemove(from, mentioned)
					}, 6000)
					setTimeout( () => {
					client.sendMessage(from, `Bismilah Kick @${mentioned[0].split('@')[0]}`, text) // ur cods
					}, 5000)
					setTimeout( () => {
					client.sendMessage(from, '..........', text)
					}, 2500)
					setTimeout( () => {
					reply('Dapet Mangsa Juga Akhirnya:v')
					}, 0)
					break
			    case 'mentionall':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					members_id = []
					teks = '\n'
					for (let mem of groupMembers) {
						teks += `‚ï†‚û• @${mem.jid.split('@')[0]}\n`
						members_id.push(mem.jid)
					}
					mentions(`‚ïî‚ïê‚ïê„Äò  *${body.slice(12)}*  „Äô‚ú™‚ïê‚ïê`+teks+'‚ïö‚ïê„Äò BRYANBOT „Äô', members_id, true)
					break
			    case 'kbbi':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
			    if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    reply(mess.wait)
					if (args.length < 1) return reply('Apa yang mau dicari gan?')
					anu = await fetchJson(`https://mnazria.herokuapp.com/api/kbbi?search=${body.slice(6)}`, {method: 'get'})
					reply('Menurut Kbbi:\n\n'+anu.result)
					await limitAdd(sender)
					break 
					case 'grup':
					case 'gc':
					case 'group':
					if (isBanned) return reply(mess.only.benned)    
					if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (args[0] === 'buka') {
					    reply(`\`\`\`‚úìGrupo De Abertura Com Sucesso\`\`\` *${groupMetadata.subject}*`)
						client.groupSettingChange(from, GroupSettingChange.messageSend, false)
					} else if (args[0] === 'tutup') {
						reply(`\`\`\`‚úìSucesso No Fechamento do Grupo\`\`\` *${groupMetadata.subject}*`)
						client.groupSettingChange(from, GroupSettingChange.messageSend, true)
					}
					break
				case 'say':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://anuz.herokuapp.com/api/bapakfont?kata=${body.slice(6)}`, {method: 'get'})
					reply(anu.result)
					await limitAdd(sender) 
					break 
    			case 'profile':
    				client.updatePresence(from, Presence.composing)
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
    				try {
					profil = await client.getProfilePicture(`${sender.split('@')[0]}@s.whatsapp.net`)
					} catch {
					profil = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
					}
					 profile = `‚ï≠‚îÄ„Äå *SEU PERFIL* „Äç\n‚îÇ‚Ä¢ *Name:* ${pushname2}\n‚îÇ‚Ä¢ *User Terdaftar:* ‚úì\n‚îÇ‚Ä¢ *Link:* wa.me/${sender.split("@")[0]}\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`
					buff = await getBuffer(profil)
					client.sendMessage(from, buff, image, {quoted: mek, caption: profile})
					break
				case 'artinama':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('O que voce quer procurar mano?')
					anu = await fetchJson(`https://mnazria.herokuapp.com/api/arti?nama=${body.slice(6)}`, {method: 'get'})
					reply('Menurut nama:\n\n'+anu.result)
					await limitAdd(sender) 
					break 
				case 'clearall':
					if (!isOwner) return reply('Quem √© Voc√™?')
					anu = await client.chats.all()
					client.setMaxListeners(25)
					for (let _ of anu) {
						client.deleteChat(_.jid)
					}
					reply(`\`\`\`Sucesso excluir todo o bate-papo SCREAMOBOT\`\`\``)
					break
                                case 'bcgc':
                    if (!isOwner) return reply("Este comando s√≥ pode ser usado pelo propriet√°rio ${name}")
					client.updatePresence(from, Presence.composing) 
					if (args.length < 1) return reply('teksnya mana?')
					if (isMedia && !mek.message.videoMessage || isQuotedImage) {
				        if (!isGroup) return reply(mess.only.group)
				    	if (!isGroupAdmins) return reply(mess.only.admin)
				    	if (!isBotGroupAdmins) return reply(mess.only.Badmin)
						const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						bcgc = await client.downloadMediaMessage(encmedia)
						for (let _ of groupMembers) {
							client.sendMessage(_.jid, bcgc, image, {caption: `*„Äå BROADCAST GROUP BY ${pushname2} „Äç*\n\n*Group* : ${groupName}\n*Pada Jam* :${jam}\n\n${name}\n\n${body.slice(6)}`})
						}
						reply('')
					} else {
						for (let _ of groupMembers) {
							sendMess(_.jid, `*„Äå GRUPO DE TRANSMISS√ÉO BY ${pushname2} „Äç*\n\n*Grupo* : ${groupName}\n${name}\n*Que Horas*: ${jam}WIB\n\n${body.slice(6)}`)
						}
						reply('Grupo de transmiss√£o de sucesso')
					}
					break
				case 'bc':
					if (!isOwner) return reply('Quem √© Voc√™?')
					if (args.length < 1) return reply('.......')
					anu = await client.chats.all()
					if (isMedia && !mek.message.videoMessage || isQuotedImage) {
						const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						bc = await client.downloadMediaMessage(encmedia)
						for (let _ of anu) {
							client.sendMessage(_.jid, bc, image, {caption: `[ Izin Broadcast ]\n\n${body.slice(4)}`})
						}
						reply('Transmiss√£o de sucesso')
					} else {
						for (let _ of anu) {
							sendMess(_.jid, `[ *FADHILBOT BROADCAST* ]\n\n${body.slice(4)}`)
						}
						reply('Suksess broadcast')
					}
					break
				case 'add':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (args.length < 1) return reply('Yang mau di add siapa??')
					if (args[0].startsWith('08')) return reply('Gunakan kode negara Gan')
					try {
						num = `${args[0].replace(/ /g, '')}@s.whatsapp.net`
						client.groupAdd(from, [num])
					} catch (e) {
						console.log('Error :', e)
						reply('Gagal menambahkan target, mungkin karena di private')
					}
					break
					case 'slow':

					encmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo

					media = await client.downloadAndSaveMediaMessage(encmedia)
					ran = getRandom('.mp3')
					exec(`ffmpeg -i ${media} -filter:a "atempo=0.7,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
						fs.unlinkSync(media)
						if (err) return reply('Error!')
						hah = fs.readFileSync(ran)
						client.sendMessage(from, hah, audio, {mimetype: 'audio/mp4', ptt:true, quoted: mek})
						fs.unlinkSync(ran)
					})
				break
				case 'tupai':

					encmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo

					media = await client.downloadAndSaveMediaMessage(encmedia)
					ran = getRandom('.mp3')
					exec(`ffmpeg -i ${media} -filter:a "atempo=0.5,asetrate=65100" ${ran}`, (err, stderr, stdout) => {
						fs.unlinkSync(media)
						if (err) return reply('Error!')
						hah = fs.readFileSync(ran)
						client.sendMessage(from, hah, audio, {mimetype: 'audio/mp4', ptt:true, quoted: mek})
						fs.unlinkSync(ran)
					})
				break
				case 'gemuk':

					encmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo

					media = await client.downloadAndSaveMediaMessage(encmedia)
					ran = getRandom('.mp3')
					exec(`ffmpeg -i ${media} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
						fs.unlinkSync(media)
						if (err) return reply('Error!')
						hah = fs.readFileSync(ran)
						client.sendMessage(from, hah, audio, {mimetype: 'audio/mp4', ptt:true, quoted: mek})
						fs.unlinkSync(ran)
					})
				break
				case 'bass':     

					encmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo

					media = await client.downloadAndSaveMediaMessage(encmedia)
					ran = getRandom('.mp3')
					exec(`ffmpeg -i ${media} -af equalizer=f=94:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
						fs.unlinkSync(media)
						if (err) return reply('Error!')
						hah = fs.readFileSync(ran)
						client.sendMessage(from, hah, audio, {mimetype: 'audio/mp4', ptt:true, quoted: mek})
						fs.unlinkSync(ran)
					})
					break
				case 'limit':
				if (!isUser) return reply(mess.only.userB)
				   checkLimit(sender)
					break
			    case 'kick':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('Tag target yang ingin di tendang!')
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
					if (mentioned.length > 1) {
						teks = 'Removido por usar calcinha bege ü§¢üëô, e sabemos que isso e broxante ü§ôüèåÔ∏è :\n'
						for (let _ of mentioned) {
							teks += `@${_.split('@')[0]}\n`
						}
						mentions(teks, mentioned, true)
						client.groupRemove(from, mentioned)
					} else {
						mentions(`Removido por usar calcinha bege ü§¢üëô, e sabemos que isso e broxante ü§ôüèåÔ∏è : @${mentioned[0].split('@')[0]}`, mentioned, true)
						client.groupRemove(from, mentioned)
					}
					break
				case 'edotense':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('Tag target yang ingin di tendang!')
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
					if (mentioned.length > 1) {
						teks = 'Perintah di terima, di edotense :\n'
						for (let _ of mentioned) {
							teks += `@${_.split('@')[0]}\n`
						}
						mentions(teks, mentioned, true)
						client.groupRemove(from, mentioned)
					} else {
						mentions(`Perintah di terima, di edotense : @${mentioned[0].split('@')[0]}`, mentioned, true)
						client.groupRemove(from, mentioned)
					}
					break
				case 'promote':
				case 'pm':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('Tag target yang ingin di jadi admin!')
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
					if (mentioned.length > 1) {
						teks = 'Perintah di terima, anda menjdi admin :\n'
						for (let _ of mentioned) {
							teks += `@${_.split('@')[0]}\n`
						}
						mentions(teks, mentioned, true)
						client.groupMakeAdmin(from, mentioned)
					} else {
						mentions(`Perintah di terima, @${mentioned[0].split('@')[0]} Kamu Menjadi Admin Di Group *${groupMetadata.subject}*`, mentioned, true)
						client.groupMakeAdmin(from, mentioned)
					}
					break
				case 'delete':
					case 'del':
			 		case 'd':
		    		if (isBanned) return reply(mess.only.benned)    
			    	if (!isUser) return reply(mess.only.userB)
					client.deleteMessage(from, { id: mek.message.extendedTextMessage.contextInfo.stanzaId, remoteJid: from, fromMe: true })
					break
          case 'tolol':
					if (!isGroup) return reply(mess.only.group)
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					membr = []
					const nus = groupMembers
					const msl = groupMembers
					const siapss = nus[Math.floor(Math.random() * nus.length)]
					const sipss = pushname2[Math.floor(Math.random() * msl.length)]
					teks = `*Yang Paling Tolol Disini Adalah :* @${siapss.jid.split('@')[0]}`
					membr.push(siapss.jid)
					mentions(teks, membr, true)
					break
         case 'babi':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					membr = []
					const mes = groupMembers
					const msk = groupMembers
					const siaps = mes[Math.floor(Math.random() * mes.length)]
					const sips = pushname2[Math.floor(Math.random() * msk.length)]
					teks = `*Yang Paling Babi Disini Adalah :* @${siaps.jid.split('@')[0]}`
					membr.push(siaps.jid)
					mentions(teks, membr, true)
					break
			    case 'demote':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
					if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('Tag target yang ingin di tidak jadi admin!')
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid
					if (mentioned.length > 1) {
						teks = 'Perintah di terima, anda tidak menjadi admin :\n'
						for (let _ of mentioned) {
							teks += `@${_.split('@')[0]}\n`
						}
						mentions(teks, mentioned, true)
						client.groupDemoteAdmin(from, mentioned)
					} else {
						mentions(`Perintah di terima, Menurunka : @${mentioned[0].split('@')[0]} Menjadi Member`, mentioned, true)
						client.groupDemoteAdmin(from, mentioned)
					}
					break
				case 'listadmins':
				case 'listadmin':
				case 'adminlist':
				case 'adminslist':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					teks = `List admin of group *${groupMetadata.subject}*\nTotal : ${groupAdmins.length}\n\n`
					no = 0
					for (let admon of groupAdmins) {
						no += 1
						teks += `[${no.toString()}] @${admon.split('@')[0]}\n`
					}
					mentions(teks, groupAdmins, true)
					break
				case 'toimg':
				if (isBanned) return reply(mess.only.benned)
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (!isQuotedSticker) return reply(' Envie o sticker jovem')
					encmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo
					media = await client.downloadAndSaveMediaMessage(encmedia)
					ran= getRandom('.png')
					exec(`ffmpeg -i ${media} ${ran}`, (err) => {
						fs.unlinkSync(media)
						if (err) return reply(' Falhou, ao converter adesivos em imagens ')
						buffer = fs.readFileSync(ran)
						client.sendMessage(from, buffer, image, {quoted: mek, caption: 'nihhh'})
						fs.unlinkSync(ran)
					})
					await limitAdd(sender) 
					break 
				case 'simi':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('Cad√™ o texto jovem?')
					teks = `{$body.slice(6)}`
					anu = await fetchJson(`https://api.i-tech.id/tools/simi?key=${TechApi}&lang=id&kata=${teks}`, {method: 'get'})
					if (anu.error) return reply('Simi N√£o sei jovem')
					simii = `*${anu.result}`
					client.sendMessage(from, simii, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'simih':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (args.length < 1) return reply('Hmmmm')
					if ((args[0]) === 'on') {
						if (isSimi) return reply('O modo Simi est√° ativo')
						samih.push(from)
						fs.writeFileSync('./database/json/simi.json', JSON.stringify(samih))
						reply(`\`\`\`Ativar o modo simi com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
					} else if ((args[0]) === 'off') {
						samih.splice(from, 1)
						fs.writeFileSync('./database/json/simi.json', JSON.stringify(samih))
						reply(`\`\`\`‚úìDesativando o modo simi com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
					} else {
						reply('On ativar, Off desabilitar')
					}
					break
			    case 'nsfw':
			    if (isBanned) return reply(mess.only.benned)    
			    if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (args.length < 1) return reply('Hmmmm')
					if ((args[0]) === 'on') {
						if (isNsfw) return reply('O modo NSFW est√° ativo')
						nsfw.push(from)
						fs.writeFileSync('./database/json/nsfw.json', JSON.stringify(nsfw))
						reply(`\`\`\`‚úìAtivar com sucesso o modo nsfw no grupo\`\`\` *${groupMetadata.subject}*`)
					} else if ((args[0]) === 'off') {
						nsfw.splice(from, 1)
						fs.writeFileSync('./database/json/nsfw.json', JSON.stringify(nsfw))
						reply(`\`\`\`‚úìSukes menonaktifkan mode nsfw di group\`\`\` *${groupMetadata.subject}*`)
					} else {
						reply('On ativar, Off para desativar')
					}
					break
				case 'modeanime':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (args.length < 1) return reply('Hmmmm')
					if ((args[0]) === 'on') {
						if (isAnime) return reply('O modo anime j√° est√° ativo')
						anime.push(from)
						fs.writeFileSync('./database/json/anime.json', JSON.stringify(anime))
						reply(`\`\`\`‚úìAtivar com sucesso o modo anime no grupo\`\`\` *${groupMetadata.subject}*`)
					} else if ((args[0]) === 'off') {
						anime.splice(from, 1)
						fs.writeFileSync('./database/json/anime.json', JSON.stringify(anime))
						reply(`\`\`\`‚úìModo anime desativado com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
					} else {
						reply('On ativar, Off desabilitar')
					}
					break
				case 'welcome':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (args.length < 1) return reply('Hmmmm')
					if ((args[0]) === 'on') {
						if (isWelkom) return reply('Ja ativo mano')
						welkom.push(from)
						fs.writeFileSync('./database/json/welkom.json', JSON.stringify(welkom))
						reply(`\`\`\`‚úìAtivou com sucesso o recurso de boas-vindas no grupo\`\`\` *${groupMetadata.subject}*`)
					} else if ((args[0]) === 'off') {
						welkom.splice(from, 1)
						fs.writeFileSync('./database/json/welkom.json', JSON.stringify(welkom))
						reply(`\`\`\`‚úìDesativando com sucesso o recurso de boas-vindas no grupo\`\`\` *${groupMetadata.subject}*`)
					} else {
						reply('On ativar, Off desabilitar')
					}
          break
				case 'caklontong':
                if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.vhtear.com/funkuis&apikey=${VthearApi}`, {method: 'get'})
					caklontong = `*${anu.result.soal}*`
					setTimeout( () => {
					client.sendMessage(from, '*‚û∏ Jawaban :* '+anu.result.jawaban+ '\n\n‚Ä¢ Penjelasan: *'+ anu.result.desk+'*', text, {quoted: mek}) // ur cods
					}, 30000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_10 Detik lagi‚Ä¶_', text) // ur cods
					}, 20000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_20 Detik lagi_‚Ä¶', text) // ur cods
					}, 10000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_30 Detik lagi_‚Ä¶', text) // ur cods
					}, 2500) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, caklontong, text, {quoted: mek}) // ur cods
					}, 0) // 1000 = 1s,
					await limitAdd(sender) 
					break 
		         case 'babi':
                    const gmek = await client.getGroupMembersId(groupId)
                    let gmik = gmek[Math.floor(Math.random() * gmek.length)]
                    const mmkk = `YANG PALING BABI DISINI ADALAH @${gmik.replace(/@c.us/g, '')}`
                    client.sendTextWithMentions(dari, mmkk, id)
                    break
		     case 'tutuptime': //by ‚òÖÂΩ°R“Ω Ç∆öŒ±~F ã…≥∆ô·ÉßÂΩ°‚òÖ
					if (isBanned) return reply(mess.only.benned)    
					if (!isUser) return reply(mess.only.userB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (!isBotGroupAdmins) return reply(mess.only.Badmin)
              client.updatePresence(from, Presence.composing) 
              if (args[1]=="detik") {var timer = args[0]+"000"
				} else if (args[1]=="menit") {var timer = args[0]+"0000"
				} else if (args[1]=="jam") {var timer = args[0]+"00000"
				} else {return reply("*pilih:*\ndetik\nmenit\njam\n\n*contoh*\n10 detik")}
				setTimeout( () => {
					var nomor = mek.participant
					const close = {
					text: `Grup ditutup oleh admin @${nomor.split("@s.whatsapp.net")[0]}\nsekarang *hanya admin* yang dapat mengirim pesan`,
					contextInfo: { mentionedJid: [nomor] }
					}
					client.groupSettingChange (from, GroupSettingChange.messageSend, true);
					reply(close)
				}, timer)
				break
				case 'tebakgambar':
                if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://videfikri.com/api/tebakgambar`, {method: 'get'})
					bufferkkk = await getBuffer(anu.result.soal_gbr)
					setTimeout( () => {
					client.sendMessage(from, '*‚û∏ Jawaban :* '+anu.result.jawaban, text, {quoted: mek}) // ur cods
					}, 30000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_10 Detik lagi‚Ä¶_', text) // ur cods
					}, 20000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_20 Detik lagi_‚Ä¶', text) // ur cods
					}, 10000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_30 Detik lagi_‚Ä¶', text) // ur cods
					}, 2500) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, bufferkkk, image, { caption: '_Jelaskan Apa Maksud Gambar Ini_', quoted: mek }) // ur cods
					}, 0) // 1000 = 1s,
					await limitAdd(sender) 
					break  
				case 'family100':
                if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.vhtear.com/family100&apikey=${VthearApi}`, {method: 'get'})
					family = `*${anu.result.soal}*`
					setTimeout( () => {
					client.sendMessage(from, '*‚û∏ Jawaban :* '+anu.result.jawaban, text, {quoted: mek}) // ur cods
					}, 30000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_10 Detik lagi‚Ä¶_', text) // ur cods
					}, 20000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_20 Detik lagi_‚Ä¶', text) // ur cods
					}, 10000) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, '_30 Detik lagi_‚Ä¶', text) // ur cods
					}, 2500) // 1000 = 1s,
					setTimeout( () => {
					client.sendMessage(from, family, text, {quoted: mek }) // ur cods
					}, 0) // 1000 = 1s,
					await limitAdd(sender) 
					break 
				case 'tafsir':
					if (isBanned) return reply(mess.only.benned)
					if (!isUser) return reply(mess.only.userB)
					if (isLimit(sender)) return reply(limits.limitend(pushname2))
					tafsir = `${body.slice(8)}`
					taf = tafsir.split("/")[0];
					sir = tafsir.split("/")[1];
					anu = await fetchJson(`https://api.quran.sutanlab.id/surah/${taf}/${sir}`, {method: 'get'})
					const {ta} = `${anu.data}`
					tafsi = `Tafsir Q.S. ${ta.surah.name.transliteration.id} : ${sir}\n\n${ta.text.arab}\n\n_${ta.text.translation.id}\n\n${ta.tafsir.id.long}`
					client.sendMessage(from, tafsi, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'clone':
				if (isBanned) return reply(mess.only.benned)    
				if (!isOwner) return reply(mess.only.OwnerB)
					if (!isGroup) return reply(mess.only.group)
					if (!isGroupAdmins) return reply(mess.only.admin)
					if (args.length < 1) return reply('Tag target yang ingin di clone')
					if (mek.message.extendedTextMessage === undefined || mek.message.extendedTextMessage === null) return reply('Tag gan')
					mentioned = mek.message.extendedTextMessage.contextInfo.mentionedJid[0]
					let { jid, id, notify } = groupMembers.find(x => x.jid === mentioned)
					try {
						pp = await client.getProfilePicture(id)
						buffer = await getBuffer(pp)
						client.updateProfilePicture(botNumber, buffer)
						mentions(`Foto profile Berhasil di perbarui menggunakan foto profile @${id.split('@')[0]}`, [jid], true)
					} catch (e) {
						reply('Gagal om')
					}
					break
				case 'setpref':
				case 'setprefix':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				
					if (args.length < 1) return
					if (!isOwner) return reply(mess.only.ownerB)
					prefix = args[0]
					reply(`Prefix berhasil di ubah menjadi :„Äå* ${prefix} *„Äç`)
					break
				case 'wait':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if ((isMedia && !mek.message.videoMessage || isQuotedImage) && args.length == 0) {
						reply(mess.wait)
						const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
						media = await client.downloadMediaMessage(encmedia)
						await wait(media).then(res => {
							client.sendMessage(from, res.video, video, {quoted: mek, caption: res.teks.trim()})
						}).catch(err => {
							reply(err)
						})
					} else {
						reply('Foto aja mas')
					}
					await limitAdd(sender) 
                   break 
              case 'randomkpop':
	         		 if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                   anu = await fetchJson(`https://tobz-api.herokuapp.com/api/randomkpop?apikey=${TobzApi}`, {method: 'get'})
                   buff = await getBuffer(anu.result)
                   client.sendMessage(from, buff, image, {quoted: mek})
                   break 
			case 'quran':
			 if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
					anu = await fetchJson(`https://api.banghasan.com/quran/format/json/acak`, {method: 'get'})
					quran = `${anu.acak.ar.teks}\n\n${anu.acak.id.teks}\nQ.S ${anu.surat.nama} ayat ${anu.acak.id.ayat}`
					client.sendMessage(from, quran, text, {quoted: mek})
					await limitAdd(sender) 
					break
				case 'animesaran':
			 if (isBanned) return reply(mess.only.benned)    
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
					costum( `*D·¥Ä“ì·¥õ·¥Ä Ä ·¥Ä…¥…™·¥ç·¥á+…¢·¥á…¥ Ä·¥á*
‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé‚Äé
DRAMA+KESEDIHAN
- P ü·¥Äs·¥õ…™·¥Ñ ·¥ç·¥á·¥ç·¥è Ä…™·¥ás
- S ú…™…¢·¥Ä·¥õs·¥ú ·¥°·¥Ä K…™·¥ç…™ …¥·¥è Us·¥è
- K·¥è·¥á …¥·¥è K·¥Ä·¥õ·¥Ä·¥Ñ ú…™
- K·¥è·¥ã·¥è Ä·¥è C·¥è…¥…¥·¥á·¥Ñ·¥õ
- C ú·¥ú·¥ú…¥…™ ô è·¥è·¥ú D·¥á·¥ç·¥è K·¥è…™ …¢·¥Ä S ú…™·¥õ·¥Ä…™
- S·¥Ä·¥ã·¥ú Ä·¥Äs·¥è·¥ú …¥·¥è P·¥á·¥õ …¥·¥Ä K·¥Ä…¥·¥è·¥ä·¥è
- N·¥Ä…¢…™ …¥·¥è As·¥ú·¥ã·¥Ä Ä·¥Ä (R·¥á·¥Ñ·¥è·¥ç·¥á…¥·¥Ö·¥á·¥Ö)
- J·¥ús·¥õ B·¥á·¥Ñ·¥Ä·¥ús·¥á
- I…¥·¥ú è·¥Äs ú…™·¥ã…™
- C ü·¥Ä…¥…¥·¥Ä·¥Ö
- A…¥…¢·¥á ü B·¥á·¥Ä·¥õs
- Y·¥Ä ú·¥Ä Ä…™ O Ä·¥á …¥·¥è S·¥á…™s ú·¥ú·¥ú…¥ L·¥è·¥†·¥á C·¥è·¥ç·¥á·¥Ö è M·¥Ä·¥Ñ ú…™…¢·¥Ä·¥õ·¥õ·¥á…™ Ä·¥ú
- R·¥á : LIFE
- A…¥·¥è H·¥Ä…¥·¥Ä
- K·¥è…™ ·¥õ·¥è Us·¥è
- K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä H·¥Ä·¥ä…™·¥ç·¥á·¥ç·¥Äs ú…™·¥õ·¥Ä
- H·¥è·¥õ·¥Ä Ä·¥ú ô…™ …¥·¥è M·¥è Ä…™ E
- S·¥Ä…¥·¥ã·¥Ä R·¥á·¥Ä
- K è·¥è·¥ú·¥ã·¥Ä…™ …¥·¥è K·¥Ä…¥·¥Ä·¥õ·¥Ä
- G·¥ú…™ ü·¥õ è C Ä·¥è·¥°…¥ 

GENRE HAREM:

- T·¥è L·¥è·¥†·¥á -  Ä·¥ú
- H…™…¢ ús·¥Ñ ú·¥è·¥è ü DxD 
- H·¥á…¥·¥õ·¥Ä…™ O·¥ú·¥ä…™ W·¥Ä Ä·¥Ä·¥°·¥Ä…¥·¥Ä…™ N·¥á·¥ã·¥è
- Is·¥á·¥ã·¥Ä…™ ·¥°·¥Ä S·¥ç·¥Ä Ä·¥õ·¥ò ú·¥è…¥·¥á T·¥è·¥ç·¥è …¥…™ 
- G·¥Ä·¥ã·¥ús·¥á…¥ T·¥ès ú…™ As·¥õ·¥á Ä…™s·¥ã
- M·¥Äs·¥Ä·¥ç·¥ú…¥·¥á - K·¥ú…¥ R·¥á·¥†·¥á…¥…¢·¥á
- L·¥Ä·¥Ö…™·¥ás Vs B·¥ú·¥õ ü·¥á Ä
- O Ä·¥á …¥·¥è I·¥ç·¥è·¥ú·¥õ·¥è …¢·¥Ä K·¥è…¥…¥·¥Ä…¥…™ K·¥Ä·¥°·¥Ä…™ W·¥Ä·¥ã·¥á …¢·¥Ä N·¥Ä…™
- M·¥Äs·¥è·¥ú G·¥Ä·¥ã·¥ú·¥á…¥ HxH 
- M·¥è…¥s·¥õ·¥á Ä M·¥ús·¥ú·¥ç·¥á 
- S·¥á…™ Ä·¥á…™ Ts·¥ú·¥ã·¥Ä…™ …¥·¥è B ü·¥Ä·¥Ö·¥á D·¥Ä…¥·¥Ñ·¥á
- S·¥á…™·¥ã·¥á…¥ Ts·¥ú·¥ã·¥Ä…™ …¥·¥è W·¥è Ä ü·¥Ö B Ä·¥á·¥Ä·¥ã
- S·¥Ä…™·¥ä·¥Ä·¥ã·¥ú M·¥ú ú·¥Ä…™ …¥·¥è B·¥Ä ú·¥Ä·¥ç·¥ú·¥õ
- M·¥ús·¥Ä…™…¢·¥á…¥ …¥·¥è P ú·¥Ä…¥·¥õ·¥è·¥ç W·¥è Ä ü·¥Ö
- T Ä…™…¥…™·¥õ è S·¥á·¥†·¥á…¥
- H·¥ú…¥·¥Ö Ä·¥á·¥Ö
- D·¥Ä·¥ã·¥Ä Ä·¥Ä B·¥è·¥ã·¥ú ·¥°·¥Ä H, D·¥á·¥ã…™…¥·¥Ä…™? 
- K·¥è Ä·¥á ·¥°·¥Ä Z·¥è·¥ç ô…™·¥á D·¥ás·¥ú K·¥Ä?
- S ú…™·¥è·¥ç…™…¥ S·¥Ä·¥ç·¥ò ü·¥á
- S ú…™…¥·¥ç·¥Ä…™ M·¥Ä·¥è·¥ú …¥·¥è T·¥ás·¥õ·¥Ä·¥ç·¥á…¥·¥õ 
- D·¥Ä·¥õ·¥á A L…™·¥†·¥á
- K·¥è…¥·¥è N·¥Ä·¥ã·¥Ä …¥…™ H…™·¥õ·¥è Ä…™, I·¥ç·¥è·¥ú·¥õ·¥è …¢·¥Ä I Ä·¥ú
- O…¥…™…™ - C ú·¥Ä…¥ D·¥Ä·¥ã·¥á·¥Ö·¥è A…™ S·¥Ä Ä·¥á ô·¥Ä K·¥Ä…¥·¥ã·¥á…™ N·¥Ä…™ è·¥è…¥·¥á
- O Ä·¥á …¥·¥è N·¥è·¥ú…¥·¥Ä…™ S·¥á…¥·¥õ·¥Ä·¥ã·¥ús ú…™ …¢·¥Ä, G·¥Ä·¥ã·¥ú·¥á…¥ L·¥è·¥†·¥á C·¥è·¥ç·¥á·¥Ö è Z·¥á…¥ Ä è·¥è·¥ã·¥ú ·¥Ö·¥á J·¥Ä·¥ç·¥Ä S ú…™·¥õ·¥á Ä·¥ú 
- O Ä·¥á …¥·¥è K·¥Ä…¥·¥è·¥ä·¥è ·¥õ·¥è Os·¥Ä…¥·¥Ä…¥·¥Ä·¥ä…™·¥ç…™ …¢·¥Ä S ú·¥ú Ä·¥Ä ô·¥Ä S·¥ú…¢…™ Ä·¥ú
- K·¥Ä…¥·¥è·¥ã·¥è…¥
- R·¥è·¥ã·¥ú·¥ä·¥ú·¥ç·¥Ä …¥·¥è S ú…™…¥ Ä è·¥Ä·¥ã·¥ús ú·¥Ä
- N…™s·¥á·¥ã·¥è…™
- S·¥Ä·¥á…¥·¥Ä…™ H·¥á Ä·¥è…™…¥·¥á S·¥è·¥Ö·¥Ä·¥õ·¥á·¥ã·¥Ä·¥õ·¥Ä
- B·¥è·¥ã·¥ú ·¥°·¥Ä T·¥è·¥ç·¥è·¥Ö·¥Ä·¥Ñ ú…™ …¢·¥Ä S·¥ú·¥ã·¥ú…¥·¥Ä…™
- K·¥Ä·¥ç…™ N·¥è·¥ç…™ ·¥¢·¥è S ú…™ Ä·¥ú S·¥á·¥ã·¥Ä…™
- R·¥á…¥·¥Ä…™ B·¥è·¥ú·¥ã·¥ú…¥
- I…¥“ì…™…¥…™·¥õ·¥á S·¥õ Ä·¥Ä·¥õ·¥ès
- Y·¥ès·¥ú…¢·¥Ä …¥·¥è S·¥è Ä·¥Ä

GENRE COMEDY

- G…™…¥·¥õ·¥Ä·¥ç·¥Ä 
- T·¥Ä…¥·¥Ä·¥ã·¥Ä - ·¥ã·¥ú…¥ ·¥°·¥Ä I·¥õs·¥ú·¥ç·¥è K·¥á·¥Ö·¥Ä Ä·¥ú…¢·¥á
- W·¥è Ä·¥ã…™…¥…¢!!!
- B·¥Ä Ä·¥Ä·¥ã·¥Ä·¥ç·¥è…¥
- B ü·¥á…¥·¥Ö S
- H…™·¥ç·¥è·¥ú·¥õ·¥è U·¥ç·¥Ä Ä·¥ú - C ú·¥Ä…¥
- N·¥á·¥° G·¥Ä·¥ç·¥á
- A…¥…™·¥ç·¥á…¢·¥Ä·¥õ·¥Ä Ä…™s
- G·¥á·¥ã·¥ã·¥Ä…¥ S ú·¥è·¥ú·¥ä·¥è N·¥è·¥¢·¥Ä·¥ã…™ - ·¥ã·¥ú…¥
- G·¥Ä ô Ä…™·¥á ü D Ä·¥è·¥òO·¥ú·¥õ
- K·¥è ô·¥Ä è·¥Äs ú…™ - ·¥Ñ ú·¥Ä…¥ C ú…™ …¥·¥è M·¥Ä…™·¥Ö D Ä·¥Ä…¢·¥è…¥
- D·¥Ä…¥s ú…™ K·¥è·¥ú·¥ã·¥ès·¥á…™ …¥·¥è N…™·¥Ñ ú…™·¥ä·¥è·¥ú 

GENRE ROMANCE

- I·¥ç·¥è·¥ú·¥õ·¥è S·¥Ä·¥á I Ä·¥á ô·¥Ä I…™
- E Ä·¥è·¥ç·¥Ä…¥…¢·¥Ä S·¥á…¥s·¥á…™
- O Ä·¥á …¥·¥è I·¥ç·¥è·¥ú·¥õ·¥è K·¥è…¥…¥·¥Ä…¥…™ K·¥Ä·¥°·¥Ä…™…™ W·¥Ä·¥ã·¥á …¢·¥Ä N·¥Ä…™
- Y·¥Ä ú·¥Ä Ä…™ O Ä·¥á …¥·¥è S·¥á…™s ú·¥ú·¥ú…¥ ·¥°·¥Ä L·¥è·¥†·¥á C·¥è·¥ç·¥á·¥Ö è M·¥Ä·¥Ñ ú…™…¢·¥Ä·¥õ·¥õ·¥á…™ Ä·¥ú
- B·¥è·¥ã·¥ú ·¥°·¥Ä T·¥è·¥ç·¥è·¥Ö·¥Ä·¥Ñ ú…™ …¢·¥Ä S·¥ú·¥ã·¥ú…¥·¥Ä…™
- K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä H·¥Ä·¥ä…™·¥ç·¥á·¥ç·¥Äs ú…™·¥õ·¥Ä

GENRE ACTION

- F·¥Ä·¥õ·¥á/S·¥õ·¥Ä è N…™…¢ ú·¥õ 
- UQ H·¥è ü·¥Ö·¥á Ä! M·¥Ä ú·¥è·¥ú N·¥á…¢…™·¥ç·¥Ä S·¥á…¥s·¥á…™ 2
- A ôs·¥è ü·¥ú·¥õ·¥á D·¥ú·¥è
- R·¥è·¥ã·¥ú·¥Ö·¥á…¥·¥Äs ú…™ M·¥Ä·¥ä·¥ú·¥õs·¥ú K·¥è·¥ús…™ …¥·¥è A·¥ã·¥Äs ú…™·¥Ñ R·¥á·¥Ñ·¥è Ä·¥Ö
- O·¥†·¥á Ä ü·¥è Ä·¥Ö
- K·¥á·¥ã·¥ã·¥Ä…™ S·¥á…¥s·¥á…¥
- S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
- G·¥ú…™ ü·¥õ è C Ä·¥è·¥°…¥
- S·¥Ä…™·¥ä·¥Ä·¥ã·¥ú M·¥ú ú·¥Ä…™ …¥·¥è B·¥Ä ú·¥Ä·¥ç·¥ú·¥õ
- I…¥“ì…™…¥…™·¥õ·¥á S·¥õ Ä·¥Ä·¥õ·¥ès
- S·¥õ·¥á…™…¥ G·¥Ä·¥õ·¥á
- T·¥è·¥Ä Ä·¥ú K·¥Ä…¢·¥Ä·¥ã·¥ú …¥·¥è R·¥Ä…™ ü…¢·¥ú…¥
- B ü·¥Ä·¥Ñ·¥ã B·¥ú ü ü·¥á·¥õ
- I…¥·¥ú è·¥Äs ú…™·¥ã…™
- O…¥·¥á P·¥ú…¥·¥Ñ ú M·¥Ä…¥
- M·¥è ô Ps è·¥Ñ ú·¥è 100
- G·¥Ä·¥ã·¥ús·¥á…¥ T·¥ès ú…™ As·¥õ·¥á Ä…™s·¥ã
- S ú…™…¥·¥ç·¥Ä…™ M·¥Ä·¥è·¥ú …¥·¥è T·¥ás·¥õ·¥Ä·¥ç·¥á…¥·¥õ
- B·¥ú…¥…¢·¥è·¥ú S·¥õ Ä·¥Ä è D·¥è…¢s

GENRE PHSYCOLOGICAL
- I…¥·¥ú è·¥Äs ú…™·¥ã…™
- M·¥Ä·¥Ö·¥è·¥ã·¥Ä M·¥Ä…¢…™·¥Ñ·¥Ä
- M…™ Ä·¥Ä…™ N…™·¥ã·¥ã…™
- K·¥Ä·¥ã·¥á…¢·¥ú Ä·¥ú…™
- K-P Ä·¥è·¥ä·¥á·¥Ñ·¥õ
- G Ä…™s·¥Ä…™·¥Ä …¥·¥è R·¥Ä·¥ã·¥ú·¥á…¥ & K·¥Ä·¥ä…™·¥õs·¥ú
- D·¥á·¥Ä·¥õ ú N·¥è·¥õ·¥á
- D·¥á·¥Ä·¥õ ú P·¥Ä Ä·¥Ä·¥Ö·¥á
- D·¥á·¥Ä·¥Ö·¥ç·¥Ä…¥ W·¥è…¥·¥Ö·¥á Ä ü·¥Ä…¥·¥Ö
- R·¥á : Z·¥á Ä·¥è K·¥Ä Ä·¥Ä H·¥Ä·¥ä…™·¥ç·¥á Ä·¥ú Is·¥á·¥ã·¥Ä…™ S·¥á…™·¥ã·¥Ä·¥õs·¥ú
- D·¥Ä…¥…¢·¥Ä…¥ Ä·¥è…¥·¥ò·¥Ä
- BTOOOM!
- Ps è·¥Ñ ú·¥è P·¥Äss
- K…™s·¥á…™·¥ä·¥ú·¥ú : S·¥á…™ …¥·¥è K·¥Ä·¥ã·¥ú Ä…™·¥õs·¥ú
- T·¥è·¥ã è·¥è G ú·¥è·¥ú ü
- NHK …¥…™ Y·¥è·¥ú·¥ã·¥ès·¥è 

GENRE GAME & ISEKAI

- M·¥è…¥·¥Ö·¥Ä…™·¥ä…™ - ·¥õ·¥Ä·¥Ñ ú…™ …¢·¥Ä Is·¥á·¥ã·¥Ä…™ K·¥Ä Ä·¥Ä K·¥ú Ä·¥ú S·¥è D·¥ás·¥ú Y·¥è?
- N·¥è G·¥Ä·¥ç·¥á N·¥è L…™“ì·¥á
- A·¥Ñ·¥Ñ·¥á ü W·¥è Ä ü·¥Ö
- K·¥è…¥·¥è S·¥ú ô·¥Ä Ä·¥Äs ú…™ Is·¥á·¥ã·¥Ä…™ S·¥è…¥·¥è S ú·¥ú·¥ã·¥ú“ì·¥ú·¥ã·¥ú ·¥°
- 3 G·¥Ä·¥õs·¥ú …¥·¥è L…™·¥è…¥
- S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
- M·¥Ä·¥Ö·¥Ä…¥ O·¥ú V·¥Ä…¥·¥Ä·¥Ö…™s

GENRE MYSTERI

- S·¥Ä·¥ã·¥ú Ä·¥Ä·¥Ö·¥Ä R·¥ás·¥á·¥õ
- H è·¥è·¥ú·¥ã·¥Ä
- M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ ·¥ú Ä·¥ú·¥õ·¥Ä…¥ ·¥Ñ·¥á Ä…™·¥õ·¥Ä…¥ è·¥Ä
1. K…™·¥¢·¥ú·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ 
2. N·¥á·¥ã·¥è·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ : K·¥ú Ä·¥è
3. B·¥Ä·¥ã·¥á·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
4. N…™s·¥á·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
5. M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ S·¥á Ä…™·¥ás S·¥á·¥Ñ·¥è…¥·¥Ö S·¥á·¥Äs·¥è…¥
6. Ts·¥ú·¥ã…™·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
7. K·¥è è·¥è·¥ç…™·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ (D·¥ú Ä·¥Äs…™ 12 ·¥ç…™…¥)
8. O·¥°·¥Ä Ä…™·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ S1
9. O·¥°·¥Ä Ä…™·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ S2
10. H·¥Ä…¥·¥Ä·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
- D·¥Ä…¥…¢·¥Ä…¥ Ä·¥è…¥·¥ò·¥Ä
- M…™ Ä·¥Ä…™ N…™·¥ã·¥ã…™
- D·¥á·¥Ä·¥õ ú N·¥è·¥õ·¥á
- B ü·¥Ä·¥Ñ·¥ã B·¥ú ü ü·¥á·¥õ
- A…¥·¥è·¥õ ú·¥á Ä

SPORT :

- Y·¥Ä·¥°·¥Ä·¥ç·¥ús ú…™ ·¥ò·¥á·¥Ö·¥Ä ü
- M·¥Ä·¥ä·¥è Ä
- E è·¥ás ú…™ ü·¥á·¥Ö 21
- D…™·¥Ä·¥ç·¥è…¥·¥Ö …¥·¥è ·¥Ä·¥Ñ·¥á
- S ü·¥Ä·¥ç ·¥Ö·¥ú…¥·¥ã
- H·¥Ä·¥ä…™·¥ç·¥á …¥·¥è …™·¥ò·¥ò·¥è
- F Ä·¥á·¥á
- P…™…¥…¢ ·¥ò·¥è…¥…¢ ·¥õ ú·¥á ·¥Ä…¥…™·¥ç·¥Ä·¥õ…™·¥è…¥
- B·¥Ä ô è s·¥õ·¥á·¥ò
- A Ä·¥á·¥Ä …¥·¥è ·¥ã…™s ú…™
- C·¥Ä·¥ò·¥õ·¥á…™…¥ ·¥õs·¥ú ô·¥Ä·¥Ä·¥Ä
- A…™ Ä …¢·¥á·¥Ä Ä
- C ú…™ ú·¥Ä“ì·¥ú è·¥ú
- C Ä·¥èss …¢·¥Ä·¥ç·¥á
- I…¥·¥Ä·¥¢·¥ú·¥ç·¥Ä ·¥á ü·¥á·¥†·¥á…¥

 ROMANCE SAD

- K…™·¥ç…™·¥ã…™ss ·¥ò·¥ú Ä·¥á  Ä·¥Ä·¥è·¥ú…¢·¥á
- K·¥Ä·¥ç…™·¥ã…™ss
- T·¥è Ä·¥Ä·¥Ö·¥è Ä·¥Ä
- L·¥è·¥†·¥á ü è ·¥Ñ·¥è·¥ç·¥ò ü·¥áx
- S·¥Ä·¥ã·¥ú Ä·¥Äs·¥è·¥ú
- W ú…™·¥õ·¥á ·¥Ä ü ô·¥ú·¥ç
- T·¥è…¥·¥Ä Ä…™ …¥·¥è ·¥ã·¥Ä…™ ô·¥ú·¥õs·¥ú-·¥ã·¥ú…¥
- 11·¥á è·¥ás
- A…¥…¢·¥á ü  ô·¥á·¥Ä·¥õs
- P ü·¥Äs·¥õ…™·¥Ñ ·¥ç·¥á·¥ç·¥è Ä…™·¥á
- A·¥ã·¥Ä·¥ç·¥á …¢·¥Ä ·¥ã…™ ü ü
- A·¥ã·¥Ä·¥õs·¥ú·¥ã…™ …¥·¥è  è·¥è…¥·¥Ä
- B·¥á Äs·¥á Ä·¥ã
- S·¥Ä·¥è
- B·¥è·¥ã·¥ú ·¥°·¥Ä ·¥õ·¥è·¥ç·¥è·¥Ö·¥Ä·¥Ñ ú…™ ·¥°·¥Ä s·¥ú·¥ã·¥ú…¥·¥Ä…™
- B·¥è·¥ã·¥ú Ä·¥Ä ·¥°·¥Ä ·¥ç…™…¥…¥·¥Ä ·¥ã·¥Ä·¥°·¥Ä…™s·¥è·¥ú
- B·¥õ·¥è·¥è·¥è·¥ç
- B·¥ú…¥…¢·¥Ä·¥ã·¥ú s ú·¥è·¥ú·¥ä·¥è
- C ·¥õ ú·¥á ·¥ç·¥è…¥·¥á è ·¥è“ì s·¥è·¥ú ü ·¥Ä…¥·¥Ö ·¥ò·¥èss…™ ô…™ ü…™·¥õ è ·¥Ñ·¥è…¥·¥õ Ä·¥è ü
- C ú·¥Ä Ä ü·¥è·¥õ·¥õ·¥á
- C ú…™ ú·¥Ä è·¥Ä“ì·¥ú è·¥ú
- C ú·¥ú·¥ú…¥…™ ô è·¥è·¥ú
- C ü·¥Ä…¥…¥·¥Ä·¥Ö
- D·¥Ä…¥·¥Ñ·¥á …™…¥ ·¥õ ú·¥á ·¥†·¥Ä·¥ç·¥ò…™ Ä·¥á  ô·¥ú…¥·¥Ö
- D·¥Ä…¥s·¥Ä…™  ô·¥ú…¥ Ä…™ …¥·¥è ·¥Ñ Ä…™·¥ç·¥á ·¥á·¥Ö…¢·¥á
- D·¥Ä Ä·¥ã·¥á…¥ ·¥õ ú·¥Ä…¥  ô ü·¥Ä·¥Ñ·¥ã
- D·¥á·¥†…™ üs  ü…™…¥·¥á
- D·¥Ä·¥õ·¥á ·¥Ä  ü…™·¥†·¥á
- D·¥á ·¥Ñ·¥Ä·¥ò…™ s·¥á Ä…™·¥ás
- T Ä·¥ú·¥á·¥á ·¥õ·¥á·¥Ä Äs
- ·¥Ö·¥á·¥Ä·¥Ö·¥ç·¥á·¥Ä…¥ ·¥°·¥è…¥·¥Ö·¥á Ä ü·¥Ä…¥·¥Ö
-  ô ü·¥è·¥è·¥Ö  ü·¥Ä·¥Ö
- ·¥Ö·¥á…¥s·¥á·¥õs·¥ú …¥·¥è  è·¥ús·¥Ä …¥·¥è ·¥Ö·¥á…¥s·¥á·¥õs·¥ú
- ·¥ã è·¥è·¥ú·¥ã·¥Ä…™ …¥·¥è ·¥ã·¥Ä…¥·¥Ä·¥õ·¥Ä
- F·¥Ä·¥õ·¥á/s·¥õ·¥Ä è 
- M·¥Ä…¢…™
- G·¥á·¥ã·¥ã·¥Ä…¥ s ú·¥è·¥ú·¥ä·¥è
- G·¥è ü·¥Ö·¥á…¥ ·¥õ…™·¥ç·¥á
- G·¥ú…™ ü·¥õ è ·¥Ñ Ä·¥è·¥°…¥
- G·¥ès…™·¥Ñ·¥ã
- H·¥á…¥·¥õ·¥Ä…™ ·¥è·¥ú·¥ä…™ ·¥õ·¥è ·¥°·¥Ä Ä·¥Ä·¥°·¥Ä…¥·¥Ä…™ …¥·¥á·¥ã·¥è
- K…™s·¥á…™·¥ä·¥ú·¥ú
- K·¥è·¥ã·¥è Ä·¥è ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ
- M…™·¥ã·¥Ä·¥ã·¥ú…¥…™…¥
- M…™ Ä·¥Ä…™ …¥…™·¥ã…™
- N·¥Ä…¢…™ …¥·¥è ·¥Äs·¥ú·¥ã·¥Ä Ä·¥Ä
- O Ä·¥á ü·¥ç·¥è
- P·¥ú…¥·¥Ñ ú  ü…™…¥·¥á
- R·¥è·¥ã·¥ã·¥Ä …¥·¥è  è·¥ú·¥ús ú·¥Ä
- S ú…™…¢·¥Ä·¥õ·¥ú ·¥°·¥Ä ·¥ã…™·¥ç…™ …¥·¥è ·¥ús·¥è
- K·¥è·¥õ·¥è…¥·¥è ú·¥Ä …¥·¥è ·¥ç…™·¥°·¥Ä
- K…™·¥ç…™ …¥·¥è …¥·¥Ä·¥°·¥Ä
- K·¥Ä…™·¥Ñ ú·¥è·¥ú ·¥°·¥Ä ·¥ç·¥Ä…™·¥Ö s·¥Ä·¥ç·¥Ä
- O Ä·¥á…¢·¥Ä…™ Ä·¥ú
- O·¥è·¥ã·¥Ä·¥ç…™ …¥·¥è ·¥ã·¥è·¥ús ú…™…¥ Ä è·¥è·¥ú
- Z·¥á Ä·¥è …¥·¥è ·¥õs·¥ú·¥ã·¥Ä…™·¥ç·¥Ä
- As·¥õ·¥á Ä…™·¥ã
- K·¥è Ä·¥á ·¥°·¥Ä ·¥¢·¥è·¥ç ô…™·¥á ·¥Ö·¥ás·¥ú ·¥ã·¥Ä
- K·¥è·¥á …¥·¥è ·¥ã·¥Ä·¥õ·¥Ä·¥Ñ ú…™
- K…™·¥ç…™ …¥·¥è ·¥õ·¥á·¥Ö·¥è·¥ã·¥á
- R·¥á ü…™“ì·¥á
- Ts·¥ú·¥ã…™…¢·¥Ä ·¥ã…™ Ä·¥á…™
- T·¥Ä·¥ç·¥Ä·¥ã·¥è ·¥ç·¥Ä Ä·¥ã·¥á·¥õ
- S·¥ú·¥ã…™·¥õ·¥õ·¥á  ü…™ …¥·¥Ä è·¥è·¥ú
- O Ä·¥á ·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
- M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
- A·¥ã·¥Ä…¢·¥Ä·¥ç…™ …¥·¥è s ú…™ Ä·¥Ä è·¥ú·¥ã…™
- S·¥Ä…¥·¥ã·¥Ä Ä·¥á·¥Ä
- A·¥ç·¥Ä…¢·¥Ä·¥ç…™ ss
- Iss·¥ú·¥ã·¥Ä…¥ “ì Ä…™·¥á…¥·¥Ö
- A·¥è  ú·¥Ä Ä·¥ú  Ä…™·¥Ö·¥á
- N…™·¥ä…™ Ä·¥è ·¥Ö·¥Ä ès
- F·¥ú·¥ú·¥ã·¥Ä
- A…¥·¥è  ú·¥Ä…¥·¥Ä
- Y·¥ès·¥ú…¢·¥Ä …¥·¥è s·¥è Ä·¥Ä
MYSTERI:
- D·¥á·¥Ä·¥õ ú …¥·¥è·¥õ·¥á
- G·¥ès…™·¥Ñ·¥ã
- B·¥è·¥ã·¥ú ·¥Ö·¥Ä·¥ã·¥á …¢·¥Ä …™…¥·¥Ä…™ ·¥ç·¥Ä·¥Ñ ú…™
- B·¥Ä·¥Ñ·¥Ñ·¥Ä…¥·¥è
- D·¥ú Ä·¥Ä Ä·¥Ä Ä·¥Ä
- S ú…™…¥s·¥á·¥ã·¥Ä…™  è·¥è Ä…™
- B·¥Ä·¥ã·¥á·¥ç·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
- D·¥á·¥Ä·¥õ ú ·¥ò·¥Ä Ä·¥Ä·¥Ö·¥á
- D·¥Ä Ä·¥ã·¥á…¥ ·¥õ ú·¥Ä…¥  ô ü·¥Ä·¥Ñ·¥ã
- Z·¥Ä·¥õs·¥ú·¥á…¥ …¥·¥è ·¥õ·¥á·¥ç·¥ò·¥ás·¥õ
- E“ì: A ·¥õ·¥Ä ü·¥á ·¥ç·¥á ü·¥è·¥Ö…™·¥ás
- H…™…¢·¥ú Ä·¥Äs ú…™ …¥·¥è …¥·¥Ä·¥ã·¥ú ·¥ã·¥è Ä·¥è …¥…™
- P·¥Ä·¥ò Ä…™·¥ã·¥Ä
- T…™…¢·¥á Ä ·¥Ä…¥·¥Ö  ô·¥ú…¥…¥ è
- T·¥Äs·¥è…¢·¥Ä Ä·¥á ·¥è·¥õ·¥è·¥ç·¥á x ·¥Ä·¥ç…¥·¥ás…™·¥Ä
- M…™ Ä·¥Ä…™ …¥…™·¥ã…™
- T·¥è·¥ã è·¥è·¥ú …¢ ú·¥è·¥ú ü
- E Ä…¢·¥è ·¥ò Ä·¥èx è 
- A…¥·¥è·¥õ ú·¥á Ä
- Y·¥Ä·¥ç·¥Ä·¥Ö·¥Ä ·¥ã·¥ú…¥ ·¥õ·¥è 7 …¥…™…¥ …¥·¥è ·¥ç·¥Ä·¥ä·¥è
- G·¥Ä·¥ã·¥ã·¥è·¥ú …¢·¥ú Ä·¥Äs ú…™
- K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä …¥·¥è ·¥ç·¥á·¥ç·¥è·¥Ñ ú·¥è·¥ú
- H·¥Ä·¥ç·¥Ä·¥õ·¥è Ä·¥Ä
- B ü·¥Ä·¥Ñ·¥ã  ô·¥ú ü ü·¥á·¥õ
- K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä …¥·¥è …™…¥·¥Ä…™ …¥…™·¥Ñ ú…™ è·¥ú ô…™
- D·¥Ä…¥·¥õ·¥Ä ü…™·¥Ä…¥ …¥·¥è s ú·¥è·¥ã·¥Ä
- K·¥ú·¥ä…™ Ä·¥Ä …¥·¥è ·¥ã·¥è Ä·¥Ä ·¥°·¥Ä s·¥Ä·¥ä·¥è·¥ú …¥…™  ·¥ä·¥Ä·¥ç
- S·¥ú ô·¥á·¥õ·¥á …¢·¥Ä “ì …¥…™ …¥·¥Ä Ä·¥ú
- G·¥Ä·¥ã·¥ú·¥ã·¥è·¥ã·¥ú …¥·¥è  ô Ä è…¥ ú…™ ü·¥Ö Ä
- S·¥á…™·¥ã…™·¥ç·¥Ä·¥õs·¥ú ·¥è·¥Ñ·¥Ñ·¥ú ü·¥õ …¢·¥Ä·¥ã·¥ú…™…¥
- K·¥è…¥…™ …¥·¥Ä·¥ã·¥Ä …¥…™  ú…™·¥õ·¥è Ä…™ …™·¥ç·¥è·¥ú·¥õ·¥è …¢·¥Ä …™ Ä·¥ú 
- M·¥Ä è·¥è…™…¢·¥Ä
- K è·¥è·¥õ·¥è ·¥õ·¥á Ä·¥Ä·¥ç·¥Ä·¥Ñ ú…™ s·¥Ä…¥·¥ä·¥è·¥ú …¥·¥è  ú·¥è ü·¥ç·¥ás
- 18…™“ì
- ·¥è·¥ús·¥Ä·¥ç·¥Ä …¢·¥Ä·¥ç·¥á ·¥õ ú·¥á ·¥Ä…¥…™·¥ç·¥Ä·¥õ…™·¥è…¥
- ·¥ç·¥Ä·¥Ö·¥á …™…¥ ·¥Ä ô èss

COMEDY SCHOOL :
- P Ä·¥ás·¥è…¥ s·¥Ñ ú·¥è·¥è ü
- G·¥á·¥ã·¥ã·¥Ä…¥ s ú·¥è·¥ú·¥ä·¥è …¥·¥è·¥¢·¥Ä·¥ã…™ ·¥ã·¥ú…¥
- B·¥á·¥á ü·¥¢·¥á ô·¥ú ô
- S ú…™·¥ç·¥è…¥·¥á·¥õ·¥Ä
- A ú·¥è …¢…™ Ä ü
- T·¥Ä…¥·¥Ä·¥ã·¥Ä ·¥ã·¥ú…¥
- D “ì Ä·¥Ä…¢
- H·¥Ä…¥·¥Ö·¥Ä ·¥ã·¥ú…¥
- T·¥è…¥·¥Ä Ä·¥ú …¥·¥è s·¥á·¥ã…™ ·¥ã·¥ú…¥
- A…¥s·¥Ä·¥õs·¥ú ·¥ã è·¥è·¥ús ú…™·¥õ·¥á
- S·¥Ä…™·¥ã…™ ·¥ã·¥ús·¥ú·¥è
- T·¥è Ä·¥Ä·¥Ö·¥è Ä·¥Ä
- B·¥Ä·¥ã·¥Ä ·¥õ·¥è ·¥õ·¥ás·¥õ
- S·¥Ä·¥ã·¥Ä·¥ç·¥è·¥õ·¥è ·¥Ö·¥ás·¥ú …¢·¥Ä
- G Ä·¥á·¥Ä·¥õ ·¥õ·¥á·¥Ä·¥Ñ ús Ä ·¥è…¥…™·¥¢·¥ú·¥ã·¥Ä
- N…™·¥Ñ ú…™·¥ä·¥è·¥ú
- S·¥ã·¥á·¥õ ·¥Ö·¥Ä…¥·¥Ñ·¥á
- D·¥Ä…¥s ú…™ ·¥ã·¥è·¥ú·¥ã·¥è·¥ús·¥á…™ …¥·¥è …¥…™·¥Ñ ú…™·¥ä·¥è

A…¥…™·¥ç·¥á ·¥Ö·¥ú Ä·¥Äs…™ ·¥ò·¥á…¥·¥Ö·¥á·¥ã:
A ú·¥è …¢…™ Ä ü
Ts·¥ú Ä·¥á·¥õ·¥¢·¥ú Ä·¥á ·¥Ñ ú…™ ü·¥Ö·¥á Ä…¥
U·¥Ñ ú·¥ú·¥ú s·¥á…¥·¥ã·¥Ä…¥ ·¥õ…™ Ä·¥Ä·¥ç…™s·¥ú
M·¥Ä…¥…¢·¥Ä·¥ã·¥Ä s·¥Ä…¥ ·¥õ·¥è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥Ä…¥
T·¥è…¥·¥Ä Ä…™ …¥·¥è s·¥á·¥ã…™ ·¥ã·¥ú…¥
D·¥Ä…¥…¥·¥Ä …¢·¥Ä …™·¥õ·¥õ·¥á…™ Ä·¥ú ·¥ã·¥Ä ·¥°·¥Ä·¥ã·¥Ä Ä·¥Ä…¥·¥Ä…™ ·¥ã·¥á…¥
F·¥ú·¥ç…™·¥ã…™ Ä…™ ·¥ä…™·¥ã·¥Ä…¥
O…¥·¥á·¥á ·¥Ñ ú·¥Ä…¥ …¢·¥Ä ·¥ã…™·¥õ·¥Ä
Os·¥Ä·¥ã·¥á “ì·¥ú“ì·¥ú …¥…™…¥·¥Ä·¥õ·¥õ·¥á
A·¥Ñ·¥õ…™·¥è…¥ S·¥ú·¥ò·¥á Ä…¥·¥Ä·¥õ·¥ú Ä·¥Ä ü :
- S·¥Ä…™·¥ã…™ ·¥ã·¥ús·¥ú·¥è
- O·¥†·¥á Ä ü·¥è Ä·¥Ö
- H·¥Ä·¥õ·¥Ä Ä·¥Ä·¥ã·¥ú ·¥ç·¥Ä·¥è s·¥Ä·¥ç·¥Ä
- M·¥Ä ú·¥è·¥ú·¥ã·¥Ä ·¥ã·¥è·¥ú·¥ã·¥Ä
- B ü·¥è·¥è·¥Ö  ü·¥Ä·¥Ö
- S·¥Ä·¥è
- N·¥Ä…¥·¥Ä·¥õs·¥ú …¥·¥è ·¥õ·¥Ä…™·¥¢·¥Ä…™
- A…¥s è·¥Ä·¥õs·¥ú ·¥ã è·¥è·¥ú ú…™·¥õs·¥ú
- C·¥è·¥Ö·¥á …¢·¥á·¥Äss
- N·¥è …¢·¥Ä·¥ç·¥á …¥·¥è  ü…™“ì·¥á
- M·¥è ô ·¥òs è·¥Ñ·¥è 100
- M·¥è…¥·¥Ö·¥Ä…™·¥ä…™-·¥õ·¥Ä·¥Ñ ú…™ …¢·¥Ä …™s·¥á·¥ã·¥Ä…™ ·¥ã·¥Ä Ä·¥Ä ·¥ã·¥ú Ä·¥ú ·¥¢·¥è·¥ú ·¥Ö·¥ás·¥ú  è·¥è

R·¥è·¥ç·¥Ä…¥·¥Ñ·¥á S ú·¥è·¥ú·¥ä·¥è
- S·¥Ä·¥á…™·¥ã·¥Ä…¥·¥è
- S·¥ò·¥á·¥Ñ…™·¥Ä ü A
- C·¥è·¥Ñ·¥è Ä·¥è ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ
- K·¥Ä·¥ç…™s ú·¥Ä·¥ç·¥Ä  ú·¥Ä·¥ä…™·¥ç·¥á·¥ç·¥Äs ú…™·¥õ·¥Ä
- L·¥è·¥†·¥á ü è ·¥Ñ·¥è·¥ç·¥ò ü·¥áx
- G·¥è ü·¥Ö·¥á…¥ ·¥õ…™·¥ç·¥á
- T·¥è…¥·¥Ä Ä…™ …¥·¥è ·¥ã·¥Ä…™ ô·¥ú·¥õs·¥ú-·¥ã·¥ú…¥
- S…™·¥ã…™·¥õ·¥õ·¥á  ü…™ …¥·¥Ä  è·¥è
- B·¥Ä·¥ã·¥Ä ·¥õ·¥è ·¥õ·¥ás·¥õ
- C ú·¥ú·¥ú…¥…™ ô è·¥è·¥ú
- A…¥·¥è …¥·¥Ä·¥õs·¥ú ·¥Ö·¥á ·¥ç·¥Ä·¥õ·¥õ·¥á Ä·¥ú
- A·¥è  ú·¥Ä Ä·¥ú  Ä…™·¥Ö·¥á
- N…™·¥ä…™ Ä·¥è ·¥Ö·¥Ä ès
- R·¥á ·¥¢·¥á Ä·¥è ·¥ã·¥Ä Ä·¥Ä
- D·¥á…¥s·¥á·¥õs·¥ú …¥·¥è  è·¥ú·¥ús ú·¥Ä …¥·¥è ·¥Ö·¥á…¥s·¥á·¥õs·¥ú
- D·¥Ä…¥·¥ç·¥Ä·¥Ñ ú…™
- S·¥ú·¥ã·¥Äs·¥ú·¥ã·¥Ä
- R·¥Ä·¥ã·¥ú·¥Ö·¥Ä è ·¥ã…™s ú è …¥·¥è ·¥Ñ·¥Ä·¥†·¥Ä ü Ä è
- C·¥è·¥Ö·¥á:R·¥á·¥Ä ü…™·¥¢·¥á
- C·¥è·¥Ö·¥á  ô Ä·¥á·¥Ä·¥ã·¥á Ä
- ·¥¢·¥á Ä·¥è …¥·¥è ·¥õs·¥ú·¥ã·¥Ä…™·¥ç·¥Ä

C ú·¥Ä Ä·¥Ä GENIUS :
-·¥ç·¥Äs·¥Ä·¥ç·¥ú…¥·¥á ·¥ã·¥ú…¥ …¥·¥è  Ä·¥á·¥†·¥á…¥…¢·¥á
-·¥Ä·¥ç·¥Ä…¢…™  ô Ä…™ ü ü…™·¥Ä…¥·¥õ ·¥ò·¥Ä Ä·¥ã
- ú è·¥è·¥ú·¥ã·¥Ä
-·¥è Ä·¥á…¢·¥Ä…™ Ä·¥ú
-·¥õ·¥Ä…¥·¥Ä·¥ã·¥Ä ·¥ã·¥ú…¥
-·¥ã…™s ú·¥ú·¥ã·¥ú …¢·¥Ä·¥ã·¥ã·¥è·¥ú ·¥ä·¥ú ü ü…™·¥á·¥õ
- è·¥è·¥ú·¥ã·¥ès·¥è ·¥ä·¥è·¥õs·¥ú Ä è·¥è·¥ã·¥ú s ú…™·¥ä·¥è·¥ú s ú·¥ú…¢…™ …¥·¥è ·¥ã è·¥è·¥ús ú…™·¥õs·¥ú ·¥á
-·¥Ä·¥ç·¥Ä…¢·¥Ä·¥ç…™ SS
HOROR:
- G ú·¥ès·¥õ ·¥Ä·¥õ s·¥Ñ ú·¥è·¥è ü
- B·¥è·¥è…¢…™·¥á·¥ò·¥è·¥ò ·¥ò ú·¥Ä…¥·¥õ·¥è·¥ç
- P·¥á·¥õ s ú·¥è·¥òs ·¥è“ì  ú·¥è Ä Ä·¥è Ä
- C·¥Ä·¥õ s·¥è·¥ú·¥ò
- H…™ ú·¥ú Ä·¥Äs ú…™ …¥·¥è …¥·¥Ä·¥ã·¥ú ·¥ã·¥è Ä·¥è …¥…™

- I·¥õ·¥è·¥ú ·¥ä·¥ú…¥·¥ä…™
- A…¥·¥è·¥õ ú·¥á Ä
- K·¥è·¥°·¥Ä ô·¥è…¥
- B ü·¥è·¥è·¥Ö ·¥Ñ
- B ü·¥è·¥è·¥Ö +
- K·¥Ä·¥ã·¥ú Ä·¥á…¥ ô·¥è
- J…™·¥ã·¥è…¢·¥ú s ú·¥è·¥ú·¥ä·¥è
- G ú·¥ès·¥õ  ú·¥ú…¥·¥õ
- K·¥Ä…¢·¥á·¥°·¥Ä…¥…™
- Y·¥Ä·¥ç…™ s ú…™ ô·¥Ä…™…™
- H…™…¢·¥ú Ä·¥Äs ú…™ …¥·¥è …¥·¥Ä·¥ã·¥ú ·¥ã·¥è Ä·¥è …¥…™
- C·¥è Ä·¥òs·¥á ·¥ò·¥Ä Ä·¥õ è
- S·¥á Ä…™·¥Ä ü ·¥áx·¥ò·¥á Ä…™·¥ç·¥á…¥·¥õ  ü·¥Ä…™…¥
- E ü“ì·¥á…¥  ü·¥á…™·¥Ö
- S ú…™·¥ã…™
- G·¥Ä…¥·¥õ·¥¢
- G è·¥è : T·¥è·¥ã è·¥è “ì…™s ú ·¥Ä·¥õ·¥õ·¥Ä·¥Ñ·¥ã
- T·¥è·¥ã è·¥è …¢ ú·¥è·¥ú ü
- K…™s·¥á…™·¥ä·¥ú
- M·¥è…¥·¥è…¥·¥è·¥ã·¥á
- A·¥ä…™…¥
- G·¥Ä·¥ã·¥ã·¥è·¥ú…¢·¥ú Ä·¥Äs ú…™
- D·¥á·¥Ä·¥Ö·¥ç·¥Ä…¥ ·¥°·¥è…¥·¥Ö·¥á Ä ü·¥Ä…¥·¥Ö
- H·¥á ü üs…™…¥…¢
C·¥Ä Ä…™  è…¢  ü·¥ú s·¥ú·¥ã·¥Ä
[11/5 20:43] E ü“ì: R·¥á·¥ã·¥è·¥ç·¥á…¥·¥Ö·¥Äs…™ A…¥…™·¥ç·¥á

A·¥Ñ·¥õ…™·¥è…¥
1. O…¥·¥á P…™·¥á·¥Ñ·¥á
2. N·¥Ä Ä·¥ú·¥õ·¥è
3. D Ä·¥Ä…¢·¥è…¥ B·¥Ä ü ü
4. S ú…™…¥…¢·¥á·¥ã…™ …¥·¥è K è·¥è·¥ä…™…¥
5. O…¥·¥á P·¥ú…¥·¥Ñ ú M·¥Ä…¥
6. H·¥ú…¥·¥õ·¥á Ä x H·¥ú…¥·¥õ·¥á Ä
7. B ü·¥á·¥Ä·¥Ñ ú
8. C·¥è·¥Ö·¥á: B Ä·¥á·¥Ä·¥ã·¥á Ä
9. F·¥ú ü ü·¥ç·¥á·¥õ·¥Ä ü A ü·¥Ñ ú·¥á·¥ç…™s·¥õ : B Ä·¥è·¥õ ú·¥á Ä ú·¥è·¥è·¥Ö
10. F·¥Ä…™ Ä è T·¥Ä…™ ü
11. G…™…¥·¥õ·¥Ä·¥ç·¥Ä
12. S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
13. 91 D·¥Ä ès
14. A·¥Ñ·¥Ñ·¥á ü W·¥è Ä ü·¥Ö
15. A…™ Ä G·¥á·¥Ä Ä
16. A·¥ã·¥Ä·¥ç·¥á …¢·¥Ä K…™ ü ü!
17. A ü·¥Ö…¥·¥è·¥Ä ú.Z·¥á Ä·¥è
18. A…¥s·¥Ä·¥õs·¥ú K è·¥è·¥ús ú…™·¥õs·¥ú
19. A·¥è …¥·¥è Ex·¥è Ä·¥Ñ…™s·¥õ
20. A Äs ü·¥Ä…¥ S·¥á…¥·¥ã…™
21. B·¥Ä·¥Ñ·¥Ñ·¥Ä…¥·¥è!
22. B·¥á·¥á ü·¥¢·¥á ô·¥ú ô
23. B·¥á Äs·¥á Ä·¥ã
24. B ü·¥Ä·¥Ñ·¥ã B·¥ú ü ü·¥á·¥õ
25. B ü·¥è·¥è·¥Ö L·¥Ä·¥Ö
26. B ü·¥è·¥è·¥Ö+
27. B·¥è·¥ã·¥ú …¥·¥è H·¥á Ä·¥è A·¥Ñ·¥Ä·¥Ö·¥á·¥ç…™·¥Ä
28. B·¥è Ä·¥ú·¥õ·¥è
29. B·¥õ·¥è·¥è·¥è·¥ç!
30. C ü·¥Ä è·¥ç·¥è Ä·¥á
31. C·¥è·¥Ö·¥á G·¥á·¥Äss
32. C·¥è·¥° ô·¥è è B·¥á ô·¥è·¥ò
33. D.G Ä·¥Ä è-·¥ç·¥Ä…¥
34. D·¥Ä…¥…¢·¥Ä…¥ Ä·¥è…¥·¥ò·¥Ä S·¥á Ä…™·¥ás
35. D·¥Ä Ä·¥ã·¥á Ä ·¥õ ú·¥Ä…¥ B ü·¥Ä·¥Ñ·¥ã S·¥á Ä…™·¥ás
36. D·¥á·¥Ä·¥Ö·¥ç·¥Ä…¥ W·¥è…¥·¥Ö·¥á Ä ü·¥Ä…¥·¥Ö
37. F·¥Ä·¥õ·¥á S·¥á Ä…™·¥ás
38. F ü·¥Ä·¥ç·¥á ·¥è“ì R·¥á·¥Ñ·¥Ñ·¥Ä
39. F·¥ú ü ü M·¥á·¥õ·¥Ä ü P·¥Ä…¥…™·¥Ñ!
40. G·¥Ä…¥…¢s·¥õ·¥Ä
41. G·¥Ä…¥·¥õ·¥¢
42. G·¥Ä-R·¥á…™: Z·¥á Ä·¥è
43. G·¥è·¥Ö E·¥Ä·¥õ·¥á Ä
44. G·¥ú…™ ü·¥õ è C Ä·¥è·¥°…¥
45. H·¥á ü üs…™…¥…¢
46. H…™…¢·¥Äs ú…™ …¥·¥è E·¥Ö·¥á…¥
47. H…™…¢ ús·¥Ñ ú·¥è·¥è ü ·¥è“ì ·¥õ ú·¥á D·¥á·¥Ä·¥Ö
48. I…¥·¥úY·¥Äs ú·¥Ä
49. K (P Ä·¥è·¥ä·¥á·¥Ñ·¥õ K)
50. K·¥Ä·¥õ·¥Ä…¥·¥Ä…¢·¥Ä·¥õ·¥Ä Ä…™
51. K·¥Ä·¥õ·¥á·¥ã è·¥è H…™·¥õ·¥ç·¥Ä…¥ R·¥á ô·¥è Ä…¥!
52. K…™ ü ü  ü·¥Ä K…™ ü ü
53. K…™s·¥á…™·¥ä·¥ú·¥ú: S·¥á…™ …¥·¥è K·¥Ä·¥ã·¥ú Ä…™·¥õs·¥ú
54. K·¥è·¥ú·¥õ·¥á·¥õs·¥ú·¥ä·¥è·¥ú …¥·¥è K·¥Ä ô·¥Ä…¥·¥á Ä…™
55. K·¥ú Ä·¥ès ú…™·¥õs·¥ú·¥ä…™ (B ü·¥Ä·¥Ñ·¥ã B·¥ú·¥õ ü·¥á Ä)
56. M·¥Ä…¢…™ S·¥á Ä…™·¥ás
57. M…™ Ä·¥Ä…™ N…™·¥ã·¥ã…™
58. M·¥è ô Ps è·¥Ñ ú·¥è 100
59. N·¥Ä…¥·¥Ä·¥õs·¥ú …¥·¥è T·¥Ä…™·¥¢·¥Ä…™
60. N·¥á·¥è…¥ G·¥á…¥·¥ás…™s E·¥†·¥Ä…¥…¢·¥á ü…™·¥è…¥
61. N·¥è Ä·¥Ä…¢·¥Ä·¥ç…™
62. N·¥ú Ä·¥Ä Ä…™ ú è·¥è…¥ …¥·¥è M·¥Ä…¢·¥è
63. O·¥†·¥á Ä ü·¥è Ä·¥Ö
64. O·¥°·¥Ä Ä…™ …¥·¥è S·¥á Ä·¥Ä·¥ò ú
65. Ps è·¥Ñ ú·¥è-P·¥Äss
66. R·¥ú Ä·¥è·¥ú…¥…™ K·¥á…¥s ú…™…¥
67. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ C ú·¥Ä·¥ç·¥ò ü·¥è·¥è
68. S ú·¥Ä·¥ã·¥ú…¢·¥Ä…¥ …¥·¥è S ú·¥Ä…¥·¥Ä
69. S ú…™·¥ä·¥è·¥ú S·¥Ä…™·¥ã è·¥è·¥ú …¥·¥è D·¥ás ú…™ K·¥á…¥…™·¥Ñ ú…™
70. S ú…™…¥…¢·¥á·¥ã…™ …¥·¥è B·¥Ä ú·¥Ä·¥ç·¥ú·¥õ S·¥á Ä…™·¥ás
71. S·¥è·¥ú ü E·¥Ä·¥õ·¥á Ä
72. S·¥õ Ä…™·¥ã·¥á ·¥õ ú·¥á B ü·¥è·¥è·¥Ö
73. T·¥Ä ü·¥ás ·¥è“ì Z·¥ás·¥õ…™ Ä…™·¥Ä ·¥õ ú·¥á X
74. T·¥è·¥Ä Ä·¥ú S·¥á Ä…™·¥ás
75. T·¥è·¥ã è·¥è G ú·¥è·¥ú ü
76. Us ú…™·¥è ·¥õ·¥è T·¥è Ä·¥Ä
77. Z·¥á·¥õs·¥ú·¥á…¥ …¥·¥è T·¥á·¥ç·¥ò·¥ás·¥õ

A·¥Ö·¥†·¥á…¥·¥õ·¥ú Ä·¥á
1. O…¥·¥á P…™·¥á·¥Ñ·¥á
2. M·¥ús ú…™s ú…™
3. Z·¥á Ä·¥è …¥·¥è Ts·¥ú·¥ã·¥Ä…™·¥ç·¥Ä
4. M·¥Ä·¥Ö·¥á I…¥ A ô èss
5. C ü·¥Ä è·¥ç·¥è Ä·¥á
6. BTOOOM
7. S ú…™…¥…¢·¥á·¥ã…™ …¥·¥è B·¥Ä ú·¥Ä·¥ç·¥ú·¥õ S·¥á Ä…™·¥ás
8. R·¥è·¥ã·¥ã·¥Ä N·¥è Y·¥ú·¥ús ú·¥Ä
9. F·¥ú ü ü·¥ç·¥á·¥õ·¥Ä ü A ü·¥Ñ ú·¥á·¥ç…™s·¥õ: B Ä·¥è·¥õ ú·¥á Ä ú·¥è·¥è·¥Ö
10. M·¥Ä…¢…™ S·¥á Ä…™·¥ás
11. H·¥ú…¥·¥õ·¥á Ä x H·¥ú…¥·¥õ·¥á Ä 
12. A·¥ã·¥Ä·¥õs·¥ú·¥ã…™ …¥·¥è Y·¥è…¥·¥Ä 
13. N·¥Ä Ä·¥ú·¥õ·¥è S·¥á Ä…™·¥ás
14. O·¥è·¥ã·¥Ä·¥ç…™ ·¥õ·¥è K·¥è·¥ús ú…™…¥ Ä è·¥è·¥ú 
15. F·¥Ä…™ Ä è T·¥Ä…™ ü
16. H·¥è·¥° ü …¥·¥è U…¢·¥è·¥ã·¥ú S ú…™ Ä·¥è
17. K·¥Ä·¥õ·¥Ä…¥·¥Ä…¢·¥Ä·¥õ·¥Ä Ä…™ 
18. C·¥è·¥Ö·¥á G·¥á·¥Äss
19. K…™…¥·¥è …¥·¥è T·¥Ä ô…™: T ú·¥á B·¥á·¥Ä·¥ú·¥õ…™“ì·¥ú ü W·¥è Ä ü·¥Ö
20. S·¥è·¥ú ü E·¥Ä·¥õ·¥á Ä
21. T·¥á…¥…¢·¥á…¥ T·¥è·¥ò·¥ò·¥Ä G·¥ú Ä Ä·¥á…¥ L·¥Ä…¢·¥Ä…¥…¥
22. A·¥ã·¥Ä·¥ç·¥á …¢·¥Ä K…™ ü ü!
23. S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
24. D Ä·¥Ä…¢·¥è…¥ B·¥Ä ü ü
25. N·¥Ä…¥·¥Ä·¥õs·¥ú …¥·¥è T·¥Ä…™·¥¢·¥Ä…™ 
26. L…™·¥õ·¥õ ü·¥á W…™·¥õ·¥Ñ ú A·¥Ñ·¥Ä·¥Ö·¥á·¥ç…™·¥Ä
27. R·¥è·¥ç·¥á·¥è …¥·¥è A·¥è…™ S·¥è Ä·¥Ä
28. S·¥è Ä·¥Ä  è·¥è Ä…™ ·¥ç·¥è T·¥è·¥è…™ B·¥Äs ú·¥è
29. C·¥è·¥° ô·¥è è B·¥á ô·¥è·¥ò
30. S·¥á…¥ ·¥õ·¥è C ú…™ ú…™ Ä·¥è …¥·¥è K·¥Ä·¥ç…™·¥ã·¥Ä·¥ã·¥ús ú…™
31. N·¥ú Ä·¥Ä Ä…™ ú è·¥è…¥ N·¥è M·¥Ä…¢·¥è
32. L·¥è…¢ H·¥è Ä…™·¥¢·¥è…¥
33. T·¥è Ä…™·¥ã·¥è
34. G·¥Ä Ä…¢·¥Ä…¥·¥õ…™·¥Ä ·¥è…¥ ·¥õ ú·¥á V·¥á Ä·¥Ö·¥ú Ä·¥è·¥ús P ü·¥Ä…¥·¥á·¥õ
35. J·¥è·¥ä·¥è‚Äôs B…™·¥¢·¥Ä Ä Ä·¥á A·¥Ö·¥†·¥á…¥·¥õ·¥ú Ä·¥á
36. E·¥ú Ä·¥á·¥ã·¥Ä S·¥á·¥†·¥á…¥
37. B ü·¥Ä·¥Ñ·¥ã L·¥Ä…¢·¥è·¥è…¥
38. D.G Ä·¥Ä è-·¥ç·¥Ä…¥
39. A·¥õ·¥õ·¥Ä·¥Ñ·¥ã ·¥è…¥ T…™·¥õ·¥Ä…¥
40. I…¥·¥úY·¥Äs ú·¥Ä
41. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ C ú·¥Ä·¥ç·¥ò ü·¥è·¥è
42. N·¥è Ä·¥Ä…¢·¥Ä·¥ç…™
43. N·¥è G·¥Ä·¥ç·¥á N·¥è L…™“ì·¥á
44. R·¥Ä·¥Ö…™·¥Ä…¥·¥õ

M·¥á·¥Ñ ú·¥Ä
1. T·¥á…¥…¢·¥á…¥ T·¥è·¥ò·¥ò·¥Ä G·¥ú Ä Ä·¥á…¥ L·¥Ä…¢·¥Ä…¥…¥
2. F·¥ú ü ü M·¥á·¥õ·¥Ä ü P·¥Ä…¥…™·¥Ñ!
3. C Ä·¥èss A…¥…¢·¥á: T·¥á…¥s ú…™ ·¥õ·¥è R è·¥ú·¥ú …¥·¥è R·¥è…¥·¥Ö·¥è
4. N·¥á·¥è…¥ G·¥á…¥·¥ás…™s E·¥†·¥Ä…¥…¢·¥á ü…™·¥è…¥
5. E·¥ú Ä·¥á·¥ã·¥Ä S·¥á·¥†·¥á…¥
6. K·¥Ä·¥ã·¥ú·¥ç·¥á…™·¥ã…™ V·¥Ä ü·¥† Ä·¥Ä·¥†·¥á (V·¥Ä ü·¥† Ä·¥Ä·¥†·¥á ·¥õ ú·¥á L…™ ô·¥á Ä·¥Ä·¥õ·¥è Ä)
7. M·¥è ô…™ ü·¥á S·¥ú…™·¥õ G·¥ú…¥·¥Ö·¥Ä·¥ç 00
8. B·¥ú·¥Ö·¥Ö è C·¥è·¥ç·¥ò ü·¥áx
9. A ü·¥Ö…¥·¥è·¥Ä ú.Z·¥á Ä·¥è
10. C·¥è·¥Ö·¥á G·¥á·¥Äss
11. D·¥Ä·¥õ·¥á A L…™·¥†·¥á
12. G·¥á…¥·¥ás…™s ·¥è“ì Aœô·¥ú·¥Ä Ä…™·¥è…¥ (S·¥è·¥ús·¥á…™ …¥·¥è Aœô·¥ú·¥Ä Ä…™·¥è…¥)
13. V…™s…™·¥è…¥ ·¥è“ì Es·¥Ñ·¥Ä“ì ü·¥è·¥°…¥·¥á 
14. M·¥Ä·¥Ñ Ä·¥èss S·¥á Ä…™·¥ás
15. G ú·¥ès·¥õ …™…¥ ·¥õ ú·¥á S ú·¥á ü ü: S·¥õ·¥Ä…¥·¥Ö A ü·¥è…¥·¥á C·¥è·¥ç·¥ò ü·¥áx
16. R·¥Ä úX·¥á·¥ò ú·¥è…¥
17. Y·¥ú·¥ús ú·¥Ä-O·¥ú G·¥Ä·¥èG·¥Ä…™G·¥Ä Ä
18. FLCL
19. IS: I…¥“ì…™…¥…™·¥õ·¥á S·¥õ Ä·¥Ä·¥õ·¥ès
20. D·¥Ä Ä ü…™…¥…¢ …™…¥ ·¥õ ú·¥á F Ä·¥Ä…¥XX
21. S·¥ú…™s·¥á…™ …¥·¥è G·¥Ä Ä…¢·¥Ä…¥·¥õ…™·¥Ä
22. U…¥·¥Ö·¥á“ì·¥á·¥Ä·¥õ·¥á·¥Ö B·¥Ä ú·¥Ä·¥ç·¥ú·¥õ C ú Ä·¥è…¥…™·¥Ñ ü·¥á
23. H·¥ú…¥·¥Ö Ä·¥á·¥Ö
24. S…™·¥Ö·¥è…¥…™·¥Ä …¥·¥è K…™s ú…™
25. R·¥è ô·¥è·¥õ…™·¥Ñs;N·¥è·¥õ·¥ás
26. H·¥ès ú…™ …¥·¥è K·¥è·¥á
27. G·¥ú…¥·¥Ö·¥Ä·¥ç W…™…¥…¢
28. B·¥è·¥ã·¥ú Ä·¥Ä…¥·¥è
29. M·¥è ô…™ ü·¥áS·¥ú…™·¥õG·¥ú…¥·¥Ö·¥Ä·¥ç:I Ä·¥è…¥-B ü·¥è·¥è·¥Ö·¥á·¥Ö O Ä·¥ò ú·¥Ä…¥s
30. K…¥…™…¢ ú·¥õ‚Äôs & M·¥Ä…¢…™·¥Ñ
31. H·¥á·¥Ä·¥† è O ô·¥ä·¥á·¥Ñ·¥õ
32. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ S·¥á·¥†·¥á…¥
33. C·¥è·¥ç·¥á·¥õ L·¥ú·¥Ñ…™“ì·¥á Ä
34. S·¥õ·¥Ä Ä D Ä…™·¥†·¥á Ä: K·¥Ä…¢·¥Ä è·¥Ä·¥ã…™ …¥·¥è T·¥Ä·¥ã·¥ú·¥õ·¥è
35. As·¥ú Ä·¥Ä C Ä è…™…¥'
36. H·¥á Ä·¥è…™·¥Ñ A…¢·¥á
37. Aœô·¥ú·¥Ä Ä…™·¥è…¥ E·¥†·¥è ü
38. K·¥ú Ä·¥è·¥ç·¥ú·¥ã·¥ú Ä·¥è
39. N·¥è ô·¥ú…¥·¥Ä…¢·¥Ä ·¥õ ú·¥á F·¥è·¥è ü
40. S·¥Ñ ú·¥°·¥Ä Ä·¥¢·¥ás·¥ç·¥Ä Ä·¥ã·¥á…¥
41. T·¥è·¥ò ·¥°·¥è N·¥á Ä·¥Ä·¥á! G·¥ú…¥ ô·¥ús·¥õ·¥á Ä
42. S·¥Ñ Ä·¥Ä·¥ò·¥ò·¥á·¥Ö P Ä…™…¥·¥Ñ·¥áss
43. B Ä·¥á·¥Ä·¥ã B ü·¥Ä·¥Ö·¥á
44. M·¥ú·¥†-L·¥ú·¥† A ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥á: T·¥è·¥õ·¥Ä ü E·¥Ñ ü…™·¥òs·¥á
45. R·¥Ä·¥ã·¥ú·¥á…¥ Ts·¥ú…™ ú·¥è·¥ú 
46. V·¥Ä…¥·¥Ö Ä·¥á·¥Ä·¥Ö
47. B·¥ú ô·¥ú·¥ã…™ B·¥ú Ä·¥Ä…¥·¥ã…™
48. A·¥ò·¥ò ü·¥ás·¥á·¥á·¥Ö (2004)
49. D Ä·¥Ä…¢·¥è…¥·¥Ä·¥ú·¥õ: T ú·¥á R·¥ás·¥è…¥·¥Ä…¥·¥Ñ·¥á
50. G·¥ú…¥ X S·¥°·¥è Ä·¥Ö

C·¥Ä Äs
1. T·¥Ä·¥ã·¥ú·¥ç…™'s AE86 / I…¥…™·¥õ…™·¥Ä ü D
2. A·¥ã…™·¥è's F·¥Ä…™ Ä L·¥Ä·¥Ö è Z / W·¥Ä…¥…¢·¥Ä…¥ M…™·¥Ö…¥…™…¢ ú·¥õ
3. JP's T Ä·¥Ä…¥s·¥Ä·¥ç / R·¥á·¥Ö ü…™…¥·¥á
4. N…™·¥Ñ·¥è's M·¥á Ä·¥Ñ·¥á·¥Ö·¥ás A-·¥Ñ ü·¥Äss / N·¥áx·¥õ A-·¥Ñ ü·¥Äss
5. K·¥Ä·¥ã·¥á Ä·¥ú's R·¥Ä…™ ü ô…™ Ä·¥Ö / C ú·¥è·¥ús·¥è·¥ã·¥ú H·¥á…¥·¥ã·¥á…™ G è Ä·¥è·¥¢·¥á·¥õ·¥õ·¥á Ä
6. S·¥è…™·¥Ñ ú…™'s L·¥è·¥õ·¥ús S·¥ú·¥ò·¥á Ä 7 / ·¥áX-D Ä…™·¥†·¥á Ä: T ú·¥á ·¥ç·¥è·¥†…™·¥á
7. S ú…™ Ä·¥è's ·¥ç·¥è·¥Ö…™“ì…™·¥á·¥Ö F-1 / T·¥Ä…™ ü·¥á…¥·¥Ö·¥á Äs
8. V…™·¥Ñ·¥á P Ä…™…¥·¥Ñ…™·¥ò·¥Ä ü U·¥Ñ ú…™ è·¥Ä·¥ç·¥Ä·¥Ö·¥Ä's T·¥è è·¥è·¥õ·¥Ä C Ä·¥ás·¥õ·¥Ä / GTO
9. C·¥Ä·¥ò·¥á·¥õ·¥Ä's F·¥è Ä·¥ç·¥ú ü·¥Ä O…¥·¥á / C·¥Ä·¥ò·¥á·¥õ·¥Ä
10. R·¥è·¥ç·¥Ä…¥ ·¥Ä…¥·¥Ö O·¥õ·¥õ·¥è's s ú·¥Ä Ä·¥ã ·¥Ñ·¥Ä Ä / C·¥è·¥ç·¥á·¥õ L·¥ú·¥Ñ…™“ì·¥á Ä

D Ä·¥Ä·¥ç·¥Ä
1. R·¥áLIFE
2. Ts·¥ú·¥ã…™ …¢·¥Ä K…™ Ä·¥á…™
3. A…¥·¥èH·¥Ä…¥·¥Ä
4. S ú…™…¢·¥Ä·¥õs·¥ú ·¥°·¥Ä K…™·¥ç…™ …¥·¥è Us·¥è
5. M·¥Ä·¥Ö·¥á I…¥ A ô èss
6. K…™·¥ç…™ …¥·¥è N·¥Ä·¥°·¥Ä
7. R·¥á: Z·¥á Ä·¥è ·¥ã·¥Ä Ä·¥Ä H·¥Ä·¥ä…™·¥ç·¥á Ä·¥ú Is·¥á·¥ã·¥Ä…™ S·¥á…™·¥ã·¥Ä·¥õs·¥ú
8. F·¥ú ü ü·¥ç·¥á·¥õ·¥Ä ü A ü·¥Ñ ú·¥á·¥ç…™s·¥õ: B Ä·¥è·¥õ ú·¥á Ä ú·¥è·¥è·¥Ö
9. A…¥…¢·¥á ü B·¥á·¥Ä·¥õs
10. C ú·¥ú·¥ú…¥…™ ô è·¥è·¥ú ·¥Ö·¥á·¥ç·¥è K·¥è…™ …¢·¥Ä S ú…™·¥õ·¥Ä…™!
11. C ú·¥Ä Ä ü·¥è·¥õ·¥õ·¥á
12. S·¥Ä·¥ã·¥ú Ä·¥Äs·¥è·¥ú …¥·¥è P·¥á·¥õ …¥·¥Ä K·¥Ä…¥·¥è·¥ä·¥è
13. K·¥ú·¥¢·¥ú …¥·¥è H·¥è…¥·¥ã·¥Ä…™
14. E Ä·¥è·¥ç·¥Ä…¥…¢·¥Ä-s·¥á…¥s·¥á…™
15. A·¥è H·¥Ä Ä·¥ú R…™·¥Ö·¥á
16. K·¥è·¥á …¥·¥è K·¥Ä·¥õ·¥Ä·¥Ñ ú…™
17. S ú…™…¥…¢·¥á·¥ã…™ …¥·¥è K è·¥è·¥ú·¥ä…™…¥
18. C ü·¥Ä…¥…¥·¥Ä·¥Ö
19. W ú…™·¥õ·¥á A ü ô·¥ú·¥ç

F·¥Ä…¥·¥õ·¥Äs è
1. O…¥·¥á P…™·¥á·¥Ñ·¥á
2. M·¥Ä·¥Ö·¥á …™…¥ A ô èss
3. R·¥á:Z·¥á Ä·¥è ·¥ã·¥Ä Ä·¥Ä H·¥Ä·¥ä…™·¥ç·¥á Ä·¥ú Is·¥á·¥ã·¥Ä…™ S·¥á…™·¥ã·¥Ä·¥õs·¥ú
4. D·¥Ä…¥M·¥Ä·¥Ñ ú…™
5. O·¥†·¥á ÄL·¥è Ä·¥Ö
6. S·¥Ä è·¥è…¥·¥Ä Ä·¥Ä …¥·¥è As·¥Ä …¥…™ Y·¥Ä·¥ã·¥ús·¥è·¥ã·¥úh…¥·¥è H·¥Ä…¥·¥Ä ·¥°·¥è 
7. T·¥Ä ü·¥ás ·¥è“ì Z·¥ás·¥õ…™ Ä…™·¥Ä ·¥õ ú·¥á X
8. O·¥è·¥ã·¥Ä·¥ç…™ ·¥õ·¥è K·¥è·¥ús ú…™…¥ Ä è·¥è·¥ú
9. A·¥ã·¥Ä·¥õs·¥ú·¥ã…™ …¥·¥è Y·¥è…¥·¥Ä
10. F·¥ú ü ü·¥ç·¥á·¥õ·¥Ä ü A ü·¥Ñ ú·¥á·¥ç…™s·¥õ: B Ä·¥è·¥õ ú·¥á Ä ú·¥è·¥è·¥Ö
11. L·¥è…¢ H·¥è Ä…™·¥¢·¥è…¥
12. B·¥á Äs·¥á Ä·¥ã
13. N·¥è G·¥Ä·¥ç·¥á N·¥è L…™“ì·¥á
14. N·¥Ä…¥·¥Ä·¥õs·¥ú …¥·¥è T·¥Ä…™·¥¢·¥Ä…™
15. M·¥Ä…¢…™ S·¥á Ä…™·¥ás
16. F·¥Ä…™ Ä è T·¥Ä…™ ü
17. H·¥ú…¥·¥õ·¥á Ä x H·¥ú…¥·¥õ·¥á Ä
18. N·¥Ä·¥õs·¥ú·¥ç·¥á Y·¥ú·¥ú·¥ä…™…¥·¥Ñ ú·¥è·¥ú
19. S·¥è·¥ú ü E·¥Ä·¥õ·¥á Ä
20. F·¥Ä·¥õ·¥á/s·¥õ·¥Ä è …¥…™…¢ ú·¥õ: U…¥ ü…™·¥ç…™·¥õ·¥á·¥Ö B ü·¥Ä·¥Ö·¥á W·¥è Ä·¥ãs
21. Z·¥á·¥õs·¥ú·¥á…¥ …¥·¥è T·¥á·¥ç·¥ò·¥ás·¥õ
22. K·¥á·¥ã·¥ã·¥Ä…™ S·¥á…¥s·¥á…¥
23. K·¥è ô·¥Ä·¥õ·¥è.
24. D Ä…™“ì·¥õ·¥á Äs
25. H·¥Ä…™ ô·¥Ä…¥·¥á R·¥á…¥·¥ç·¥á…™
26. M·¥Ä ú·¥è·¥ú·¥ä…™…¥ G·¥ú Ä·¥ú…¢·¥ú Ä·¥ú
27. G·¥Ä·¥õ·¥á: J…™·¥á…™·¥õ·¥Ä…™ K·¥Ä…¥·¥è·¥Ñ ú…™ N…™·¥õ·¥á, K·¥Ä·¥ã·¥ú T·¥Ä·¥õ·¥Ä·¥ã·¥Ä·¥á Ä…™
28. S ú…™…¥…¢·¥á·¥ã…™ …¥·¥è B·¥Ä ú·¥Ä·¥ç·¥ú·¥õ S·¥á Ä…™·¥ás
29. K·¥è…¥·¥ès·¥ú ô·¥Ä
30. S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
31. V…™·¥è ü·¥á·¥õ E·¥†·¥á Ä…¢·¥Ä Ä·¥Ö·¥á…¥
32. M·¥ús ú…™s ú…™
33. H·¥è·¥° ü …¥·¥è U…¢·¥è·¥ã·¥ú S ú…™ Ä·¥è
34. A Ä…™·¥Ä T ú·¥á O Ä…™…¢…™…¥·¥Ä·¥õ…™·¥è…¥
35. K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä H·¥Ä·¥ä…™·¥ç·¥á·¥ç·¥Äs ú…™·¥õ·¥Ä
36. H·¥è·¥ús·¥á·¥ã…™ …¥·¥è K·¥ú…¥…™
37. P Ä…™…¥·¥Ñ·¥áss M·¥è…¥·¥è…¥·¥è·¥ã·¥á
38. K·¥á·¥ç·¥è…¥·¥è …¥·¥è S·¥è·¥ú·¥ä·¥Ä E Ä…™…¥
39. Y·¥Ä·¥è…¢·¥ú·¥Ä…™ M…™…¥…¢·¥Ö·¥Ä…¥
40. J·¥ú·¥ú…¥…™ K·¥è·¥ã·¥ú·¥ã…™
41. C·¥Ä Ä·¥Ö·¥Ñ·¥Ä·¥ò·¥õ·¥è Ä S·¥Ä·¥ã·¥ú Ä·¥Ä: C ü·¥á·¥Ä Ä C·¥Ä Ä·¥Ö- ú·¥á…¥
42. K·¥è ô·¥Ä è·¥Äs ú…™-s·¥Ä…¥ C ú…™ …¥·¥è M·¥Ä…™·¥Ö D Ä·¥Ä…¢·¥è…¥
43. U·¥Ñ ú·¥è·¥ú·¥õ·¥á…¥ K·¥Ä·¥¢·¥è·¥ã·¥ú
44. N·¥Ä…¢…™ …¥·¥è As·¥ú·¥ã·¥Ä Ä·¥Ä
45. M·¥Ä ú·¥è·¥ú·¥õs·¥ú·¥ã·¥Ä…™ …¥·¥è Y·¥è·¥ç·¥á
46. L…™·¥õ·¥õ ü·¥á W…™·¥õ·¥Ñ ú A·¥Ñ·¥Ä·¥Ö·¥á·¥ç…™·¥Ä

S·¥Ñ ú·¥è·¥è ü L…™“ì·¥á
1. A·¥è H·¥Ä Ä·¥ú R…™·¥Ö·¥á
2. H è·¥è·¥ú·¥ã·¥Ä
3. C ú·¥Ä Ä ü·¥è·¥õ·¥õ·¥á
4. K·¥è·¥ã·¥è Ä·¥è C·¥è…¥…¥·¥á·¥Ñ·¥õ
5. K·¥Ä Ä·¥Ä·¥ã·¥Ä…™ J·¥è·¥ú·¥¢·¥ú …¥·¥è T·¥Ä·¥ã·¥Ä…¢…™-s·¥Ä…¥
6. B·¥è·¥ã·¥ú D·¥Ä·¥ã·¥á …¢·¥Ä I…¥·¥Ä…™ M·¥Ä·¥Ñ ú…™
7. T·¥è Ä·¥Ä·¥Ö·¥è Ä·¥Ä!
8. Ts·¥ú·¥ã…™ …¢·¥Ä K…™ Ä·¥á…™
9. K è·¥è·¥ú·¥ã·¥Ä…™ …¥·¥è K·¥Ä…¥·¥Ä·¥õ·¥Ä
10. R·¥áLIFE
11. S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
12. A…¥·¥èH·¥Ä…¥·¥Ä
13. Iss ú·¥ú·¥ã·¥Ä…¥ F Ä…™·¥á…¥·¥Ös
14. S ú…™…¢·¥Ä·¥õs·¥ú ·¥°·¥Ä K…™·¥ç…™ …¥·¥è Us·¥è
15. K·¥ú·¥¢·¥ú …¥·¥è H·¥è…¥·¥ã·¥Ä…™
16. K…™·¥ç…™ …¥·¥è N·¥Ä·¥°·¥Ä
17. S·¥ú·¥ã…™·¥õ·¥õ·¥á I…™ …¥·¥Ä  è·¥è
18. S·¥Ä·¥ã·¥ú Ä·¥Äs·¥è·¥ú …¥·¥è P·¥á·¥õ …¥·¥Ä K·¥Ä…¥·¥è·¥ä·¥è
19. T·¥è·¥ã è·¥è R·¥Ä·¥†·¥á…¥s
20. H…™·¥ç·¥è·¥ú·¥õ·¥è U·¥ç·¥Ä Ä·¥ú-·¥Ñ ú·¥Ä…¥
21. M·¥Äs·¥Ä·¥ç·¥ú…¥·¥á-·¥ã·¥ú…¥ …¥·¥è R·¥á·¥†·¥á…¥…¢·¥á
22. T Ä…™…¥…™·¥õ è S·¥á·¥†·¥á…¥
23. A…¥…¢·¥á ü B·¥á·¥Ä·¥õs
24. B ü·¥á·¥Ä·¥Ñ ú
25. B ü·¥è·¥è·¥Ö-C
26. H…™…¢ ú S·¥Ñ ú·¥è·¥è ü DxD
27. B·¥è·¥ã·¥ú …¥·¥è H·¥á Ä·¥è A·¥Ñ·¥Ä·¥Ö·¥á·¥ç…™·¥Ä
28. S ú·¥è·¥ã·¥ú…¢·¥á·¥ã…™ …¥·¥è S·¥è·¥ú·¥ç·¥Ä
29. A…¥s·¥Ä·¥õs·¥ú K è·¥è·¥ús ú…™·¥õs·¥ú
30. T·¥è…¥·¥Ä Ä…™ …¥·¥è K·¥Ä…™ ô·¥ú·¥õs·¥ú-·¥ã·¥ú…¥
31. O Ä·¥Ä…¥…¢·¥á
32. K…™·¥ç…™ …¥…™ T·¥è·¥Ö·¥è·¥ã·¥á
33. S·¥Ä·¥ã·¥Ä·¥ç·¥è·¥õ·¥è ·¥Ö·¥ás·¥ú …¢·¥Ä?
34. C ú·¥ú·¥ú…¥…™ ô è·¥è·¥ú ·¥Ö·¥á·¥ç·¥è K·¥è…™ …¢·¥Ä S ú…™·¥õ·¥Ä…™!
35. K·¥ú Ä·¥è·¥ã·¥è …¥·¥è B·¥Äs·¥ú·¥ã·¥á
36. N…™s·¥á·¥ã·¥è…™
37. S·¥Ä·¥á…¥·¥Ä…™ H·¥á Ä·¥è…™…¥·¥á …¥·¥è S·¥è·¥Ö·¥Ä·¥õ·¥á·¥ã·¥Ä·¥õ·¥Ä
38. H…™ ô…™·¥ã·¥á! E·¥ú·¥ò ú·¥è…¥…™·¥ú·¥ç
39. N·¥è…¥ N·¥è…¥ B…™ è·¥è Ä…™
40. G·¥Ä ô Ä…™·¥á ü D Ä·¥è·¥òO·¥ú·¥õ
41. A ú·¥è G…™ Ä ü
42. I·¥õs·¥ú·¥Ö·¥Ä·¥õ·¥õ·¥á B·¥è·¥ã·¥ú Ä·¥Ä …¥·¥è K·¥è…™ ·¥°·¥Ä 10-C·¥á…¥·¥õ…™·¥ç·¥á·¥õ·¥á Äs D·¥Ä·¥õ·¥õ·¥Ä
43. J·¥ús·¥õ B·¥á·¥Ñ·¥Ä·¥ús·¥á!
44. K·¥è·¥á …¥·¥è K·¥Ä·¥õ·¥Ä·¥Ñ ú…™
45. K·¥è·¥ã·¥è Ä·¥è …¢·¥Ä S·¥Ä·¥ã·¥á ô…™·¥õ·¥Ä…¢·¥Ä·¥õ·¥õ·¥á Ä·¥ú…¥·¥Ö·¥Ä

S ü…™·¥Ñ·¥á ·¥è“ì L…™“ì·¥á
1. G·¥á…¥s ú…™·¥ã·¥á…¥
2. S ú…™…¥ Ä è·¥Ä·¥ã·¥ú! I·¥ã·¥Ä M·¥ús·¥ú·¥ç·¥á
3. U·¥Ñ ú·¥è·¥ú·¥õ·¥á…¥ K·¥Ä·¥¢·¥è·¥ã·¥ú
4. K·¥è·¥õ·¥è…¥·¥è ú·¥Ä …¥·¥è N…™·¥°·¥Ä
5. M·¥ús ú…™s ú…™
6. P·¥Ä·¥ò·¥Ä …¥·¥è I·¥ú·¥ã·¥è·¥õ·¥è ·¥°·¥è K…™·¥ã…™…¥·¥Äs·¥Ä…™!
7. A…™ Ä
8. A…¥·¥è H…™ M…™·¥õ·¥Ä H·¥Ä…¥·¥Ä …¥·¥è N·¥Ä·¥ç·¥Ä·¥á ·¥°·¥è B·¥è·¥ã·¥ú·¥õ·¥Ä·¥Ñ ú…™ ·¥°·¥Ä M·¥Ä·¥Ö·¥Ä S ú…™ Ä·¥Ä…¥·¥Ä…™.
9. N·¥Ä·¥õs·¥ú·¥ç·¥á Y·¥ú·¥ú·¥ä…™…¥·¥Ñ ú·¥è·¥ú
10. B·¥Ä Ä·¥Ä·¥ã·¥Ä·¥ç·¥è…¥ ·¥Ö·¥Ä…¥ H·¥Ä…¥·¥Ö·¥Ä-·¥ã·¥ú…¥
11. D·¥Ä…¢·¥Äs ú…™ K·¥Äs ú…™
12. A·¥ç·¥Ä·¥Ä·¥ç·¥Ä ·¥õ·¥è I…¥·¥Ä·¥¢·¥ú·¥ç·¥Ä
13. C ü·¥Ä…¥…¥·¥Ä·¥Ö
14. K·¥è ô·¥Ä è·¥Äs ú…™-s·¥Ä…¥ C ú…™ …¥·¥è M·¥Ä…™·¥Ö D Ä·¥Ä…¢·¥è…¥
15. H…™·¥ç·¥è·¥ú·¥õ·¥è! U·¥ç·¥Ä Ä·¥ú-·¥Ñ ú·¥Ä…¥
16. S·¥Ä·¥ã·¥ú Ä·¥Ä Q·¥ú·¥ás·¥õ
17. M·¥Ä ú·¥è·¥ú·¥õs·¥ú·¥ã·¥Ä…™ …¥·¥è Y·¥è·¥ç·¥á
18. K·¥Ä Ä·¥Ä·¥ã·¥Ä…™ J·¥è·¥ú·¥¢·¥ú …¥·¥è T·¥Ä·¥ã·¥Ä…¢…™-s·¥Ä…¥
19. S·¥è Ä·¥Ä  è·¥è Ä…™ ·¥ç·¥è T·¥è·¥è…™ B·¥Äs ú·¥è
20. S·¥á Ä·¥†·¥Ä…¥·¥õ x S·¥á Ä·¥†…™·¥Ñ·¥á
21. T·¥Ä·¥ç·¥Ä·¥ã·¥è L·¥è·¥†·¥á S·¥õ·¥è Ä è
22. N·¥è…¥ N·¥è…¥ B…™ è·¥è Ä…™
23. Us·¥Ä…¢…™ D Ä·¥è·¥ò
24. N·¥á·¥° G·¥Ä·¥ç·¥á!
25. W·¥è Ä·¥ã…™…¥…¢!! (W·¥Ä…¢…¥·¥Ä Ä…™·¥Ä!!) S·¥á Ä…™·¥ás
26. G·¥è·¥Ñ ú·¥ú·¥ú·¥ç·¥è…¥ ·¥°·¥Ä Us·¥Ä…¢…™ ·¥Ö·¥ás·¥ú ·¥ã·¥Ä??
27. A Ä…™·¥Ä T ú·¥á O Ä…™…¢…™…¥·¥Ä·¥õ…™·¥è…¥
28. U·¥Ñ ú·¥ú·¥ú K è·¥è·¥ú·¥Ö·¥Ä…™
28. N…™·¥Ñ ú…™·¥ä·¥è·¥ú
30. N·¥Ä…¥·¥Ä
31. K·¥á·¥ç·¥è…¥·¥è …¥·¥è S·¥è·¥ú·¥ä·¥Ä E Ä…™…¥
32. N·¥è·¥Ö·¥Ä·¥ç·¥á C·¥Ä…¥·¥õ·¥Ä ô…™ ü·¥á
33. D·¥Ä…¥s ú…™ K·¥è·¥ú·¥ã·¥è·¥ús·¥á…™ …¥·¥è N…™·¥Ñ ú…™·¥ä·¥è·¥ú
34. K-O…¥!
35. Y·¥ú Ä·¥ú C·¥Ä·¥ç·¥ò
36. G…™…¥ …¥·¥è S·¥Ä·¥ä…™
37. H·¥Ä·¥Ñ ú…™·¥ç…™·¥õs·¥ú ·¥õ·¥è C ü·¥è·¥†·¥á Ä
38. S·¥Ä·¥ã·¥ú Ä·¥Äs·¥è·¥ú …¥·¥è P·¥á·¥õ …¥·¥Ä K·¥Ä…¥·¥è·¥ä·¥è
39. R·¥áLIFE
40. K·¥ú Ä·¥Ä…¢·¥á ú…™·¥ç·¥á
41. S ú·¥è·¥ú·¥ä·¥è S ú·¥ú·¥ú·¥ç·¥Ä·¥õs·¥ú R è·¥è·¥ã·¥è·¥ú
42. E·¥†·¥á …¥·¥è J…™·¥ã·¥Ä…¥
43. H è·¥è·¥ú·¥ã·¥Ä
44. I·¥á N·¥Ä·¥ã…™ K·¥è R·¥á·¥ç è
45. T·¥Ä…¥·¥Ä·¥ã·¥Ä-·¥ã·¥ú…¥ ·¥°·¥Ä I·¥õs·¥ú·¥ç·¥è K·¥á·¥Ö·¥Ä Ä·¥ú…¢·¥á
46. S ú…™ Ä·¥è ô·¥Ä·¥ã·¥è
47. G Ä·¥á·¥Ä·¥õ T·¥á·¥Ä·¥Ñ ú·¥á Ä O…¥…™·¥¢·¥ú·¥ã·¥Ä
48. S·¥Ä…™·¥ã…™ K·¥ús·¥ú·¥è …¥·¥è Œ® N·¥Ä…¥
49. V…™·¥è ü·¥á·¥õ E·¥†·¥á Ä…¢·¥Ä Ä·¥Ö·¥á…¥
50. 3-…¢·¥Ä·¥õs·¥ú …¥·¥è L…™·¥è…¥
51. G·¥Ä·¥ã·¥ú·¥á…¥ B·¥Ä ô ès…™·¥õ·¥õ·¥á Äs
52. M…™·¥õs·¥ú ô·¥ès ú…™ C·¥è ü·¥è Äs
53. H…™…¥·¥Ä·¥ç·¥Ä·¥õs·¥ú Ä…™
54. T·¥Ä·¥Ö·¥Ä-·¥ã·¥ú…¥ ·¥°·¥Ä K·¥è…™ ·¥°·¥è S ú…™…¥·¥Ä…™
55. C·¥è·¥ç…™·¥Ñ G…™ Ä üs
56. B è·¥è·¥ús·¥è·¥ã·¥ú 5 C·¥á…¥·¥õ…™·¥ç·¥á·¥õ·¥á Ä
57. H·¥Ä…¥·¥Äs·¥Ä·¥ã·¥ú I Ä·¥è ú·¥Ä
58. D·¥á…¥·¥ò·¥Ä O…¥…¥·¥Ä ·¥õ·¥è S·¥á…™s ú·¥ú…¥ O·¥õ·¥è·¥ã·¥è

S·¥Ä·¥ç·¥ú Ä·¥Ä…™
1. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ 7
2. R·¥ú Ä·¥è·¥ú…¥…™ K·¥á…¥s ú…™…¥
3. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ C ú·¥Ä·¥ç·¥ò ü·¥è·¥è
4. A“ì Ä·¥è S·¥Ä·¥ç·¥ú Ä·¥Ä…™
5. S·¥á…¥…¢·¥è·¥ã·¥ú B·¥Äs·¥Ä Ä·¥Ä: S·¥Ä·¥ç·¥ú Ä·¥Ä…™ K…™…¥…¢s
6. G…™…¥·¥õ·¥Ä·¥ç·¥Ä
7. H·¥Ä·¥ã·¥ú·¥è·¥ú·¥ã…™
8. S·¥°·¥è Ä·¥Ö ·¥è“ì ·¥õ ú·¥á S·¥õ Ä·¥Ä…¥…¢·¥á Ä
9. B ü·¥Ä·¥Ö·¥á ·¥è“ì ·¥õ ú·¥á I·¥ç·¥ç·¥è Ä·¥õ·¥Ä ü
10. R·¥è…¥…™…¥ W·¥Ä Ä Ä…™·¥è Äs
11.S·¥Ä·¥ç·¥ú Ä·¥Ä…™ X

M…™ ü…™·¥õ·¥Ä Ä è
1. F·¥ú ü ü·¥ç·¥á·¥õ·¥Ä ü A ü·¥Ñ ú·¥á·¥ç…™s·¥õ: B Ä·¥è·¥õ ú·¥á Ä ú·¥è·¥è·¥Ö
2. S ú…™…¥…¢·¥á·¥ã…™ …¥·¥è K è·¥è·¥ä…™…¥
3. C·¥è·¥Ö·¥á G·¥á·¥Äss: H·¥Ä…¥…¢ è·¥Ä·¥ã·¥ú …¥·¥è L·¥á ü·¥è·¥ú·¥Ñ ú
4. O·¥°·¥Ä Ä…™ …¥·¥è S·¥á Ä·¥Ä·¥ò ú
5. G·¥Ä·¥õ·¥á: J…™·¥á…™·¥õ·¥Ä…™ K·¥Ä…¥·¥è·¥Ñ ú…™ …¥…™·¥õ·¥á, K·¥Ä·¥ã·¥ú T·¥Ä·¥õ·¥Ä·¥ã·¥Ä·¥á Ä…™
6. A ü·¥Ö…¥·¥è·¥Ä ú .Z·¥á Ä·¥è
7. G·¥è·¥Ö E·¥Ä·¥õ·¥á Ä
8. Y·¥è·¥ú·¥ä·¥è S·¥á…¥·¥ã…™ 
9. SAO A ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥á: G·¥ú…¥ G·¥Ä ü·¥á O…¥ ü…™…¥·¥á
10. N·¥á·¥ä…™·¥ç·¥Ä·¥ã…™ S·¥á…™ Ä·¥á…™ S·¥á…¥·¥ã…™: T·¥á…¥·¥ã è·¥è·¥ú …¥·¥è A ü·¥Ö·¥á Ä·¥Ä·¥ç…™…¥
11. G…™ Ä üs ·¥ú…¥·¥Ö P·¥Ä…¥·¥¢·¥á Ä
12. K·¥Ä…¥·¥õ·¥Ä…™ C·¥è ü ü·¥á·¥Ñ·¥õ…™·¥è…¥
13. M·¥ú·¥†-L·¥ú·¥† A ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥á: T·¥è·¥õ·¥Ä ü E·¥Ñ ü…™·¥òs·¥á
14. 07-G ú·¥ès·¥õ
15. M·¥è ô…™ ü·¥á S·¥ú…™·¥õ G·¥ú…¥·¥Ö·¥Ä·¥ç 00
16. K…™…¥…¢·¥Ö·¥è·¥ç
17. K·¥Ä·¥ã·¥ú·¥ç·¥á…™·¥ã…™ V·¥Ä ü·¥† Ä·¥Ä·¥†·¥á
18. S·¥õ Ä…™·¥ã·¥á W…™·¥õ·¥Ñ ú·¥ás
19. M·¥Ä·¥Ñ Ä·¥èss F Ä·¥è…¥·¥õ…™·¥á Ä
20. S·¥è R·¥Ä N·¥è W·¥è T·¥è
21. H·¥á·¥Ä·¥† è O ô·¥ä·¥á·¥Ñ·¥õ
22. S·¥á…¥·¥ä·¥è·¥ú …¥·¥è V·¥Ä ü·¥ã è Ä…™·¥Ä
23. O·¥õ·¥è·¥ç·¥á Y·¥è·¥ú·¥ã·¥Ä…™ Z·¥Ä·¥ã·¥ú Ä·¥è
24. A…¥…¢·¥è ü·¥ç·¥è…™s: G·¥á…¥·¥ã·¥è·¥ú K·¥Äss·¥á…¥·¥ã…™
25. B Ä·¥á·¥Ä·¥ã B ü·¥Ä·¥Ö·¥á
26. H…™…¢ ú S·¥Ñ ú·¥è·¥è ü F ü·¥á·¥á·¥õ
27. T·¥ès ú·¥è·¥ã·¥Ä…¥ S·¥á…¥s·¥è·¥ú
28. S·¥Ä ô·¥Ä…¢·¥á ô·¥ú!
29. T·¥Ä…™·¥ç·¥Ä·¥Ö·¥è·¥ú G·¥Ä·¥ã·¥ú·¥á…¥ 35 S ú…™·¥ã·¥á…¥ S ú·¥è·¥ú·¥õ·¥Ä…™
30. J·¥è·¥ã·¥á Ä G·¥Ä·¥ç·¥á

H…™s·¥õ·¥è Ä…™·¥Ñ·¥Ä ü
1. G…™…¥·¥õ·¥Ä·¥ç·¥Ä
2. M·¥ús ú…™s ú…™
3. D·¥è Ä·¥è Ä·¥è
4. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ C ú·¥Ä·¥ç·¥ò ü·¥è·¥è
5. B·¥Ä·¥Ñ·¥Ñ·¥Ä…¥·¥è!
6. K·¥Ä·¥õ·¥Ä…¥·¥Ä…¢·¥Ä·¥õ·¥Ä Ä…™
7. R·¥ú Ä·¥è·¥ú…¥…™ K·¥á…¥s ú…™…¥: M·¥á…™·¥ä…™ K·¥á…¥·¥ã·¥Ä·¥ã·¥ú R·¥è·¥ç·¥Ä…¥·¥õ·¥Ä…¥
8. G·¥ès…™·¥Ñ·¥ã
9. K…™…¥…¢·¥Ö·¥è·¥ç
10. K·¥ú Ä·¥ès ú…™·¥õs·¥ú·¥ä…™
11. A·¥è…™ B·¥ú…¥…¢·¥Ä·¥ã·¥ú S·¥á Ä…™·¥ás
12. H·¥á·¥õ·¥Ä ü…™·¥Ä Ax…™s P·¥è·¥°·¥á Äs
13. H·¥Ä·¥ã·¥ú·¥è·¥ú·¥ã…™
14. S·¥á…¥…¢·¥è·¥ã·¥ú B·¥Äs·¥Ä Ä·¥Ä
15. J·¥è·¥ã·¥á Ä G·¥Ä·¥ç·¥á
16. K·¥Ä…¢·¥ú è·¥Ä H…™·¥ç·¥á …¥·¥è M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
17. E…™·¥ã·¥è·¥ã·¥ú K·¥è…™ M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ 

P·¥è ü…™·¥Ñ·¥á
1. T·¥Ä…™ ú·¥è S ú…™·¥Ñ ú·¥Ä·¥ú ·¥¢·¥è
2. G ú·¥ès·¥õ …™…¥ ·¥õ ú·¥á S ú·¥á ü ü
3. K·¥è·¥Ñ ú…™ Ä·¥Ä K·¥Ä·¥õs·¥ús ú…™·¥ã·¥Ä·¥ã·¥ú K·¥Ä·¥ç·¥á·¥Ä Ä…™ K·¥è·¥ú·¥á…¥·¥ç·¥Ä·¥á 
4. H·¥Äs ú·¥ú·¥õs·¥ú·¥ä·¥è
5. Ps è·¥Ñ ú·¥è-P·¥Äss
6. M·¥è ô…™ ü·¥á P·¥è ü…™·¥Ñ·¥á P·¥Ä·¥õ ü·¥Ä ô·¥è Ä
7. M…™ Ä·¥Ä…™ K·¥á…™s·¥Ä·¥õs·¥ú U Ä·¥Äs ú…™·¥ç·¥Ä…¥
8. W…™ ü·¥Ö 7
9. Y·¥ú·¥ús ú·¥Ä K·¥á…™s·¥Ä·¥õs·¥ú J-D·¥á·¥Ñ·¥ã·¥á Ä
10. H…™·¥ç…™·¥õs·¥ú: T ú·¥á R·¥á·¥†·¥á ü·¥Ä·¥õ…™·¥è…¥
11. S·¥Ä·¥ç·¥ú Ä·¥Ä…™ F ü·¥Ä·¥ç·¥á…¥·¥Ñ·¥è
12. B: T ú·¥á B·¥á…¢…™…¥…¥…™…¥…¢
13. J…™…¥-R·¥è ú: T ú·¥á W·¥è ü“ì B Ä…™…¢·¥Ä·¥Ö·¥á
14. O…¥…™ ú·¥á…™
15. K…™·¥Ö·¥è·¥ú K·¥á…™s·¥Ä·¥õs·¥ú P·¥Ä·¥õ ü·¥Ä ô·¥è Ä: O…¥ ·¥õ·¥á ü·¥á·¥†…™s…™·¥è…¥
16. M·¥è·¥ús·¥è·¥ú D·¥Ä…™ Ä…™…¥…™…¥
17. P·¥á·¥Ä·¥Ñ·¥á M·¥Ä·¥ã·¥á Ä K·¥ú Ä·¥è…¢·¥Ä…¥·¥á
18. H è·¥ò·¥á Ä P·¥è ü…™·¥Ñ·¥á

S·¥Ñ…™-“ì…™
1. S·¥õ·¥á…™…¥s;G·¥Ä·¥õ·¥á
2. I…¥·¥ú è·¥Äs ú…™·¥ã…™
3. M·¥Ä·¥Ö·¥á …™…¥ A ô èss
4. C·¥è·¥° ô·¥è è B·¥á ô·¥è·¥ò
5. P ü·¥Äs·¥õ…™·¥Ñ M·¥á·¥ç·¥è Ä…™·¥ás
6. E·¥ú Ä·¥á·¥ã·¥Ä S·¥á·¥†·¥á…¥
7. M·¥Ä ú·¥è·¥ú·¥ã·¥Ä K·¥è·¥ú·¥ã·¥è·¥ú …¥·¥è R·¥á·¥õ·¥õ·¥è·¥ús·¥á…™
8. D…™·¥ç·¥á…¥s…™·¥è…¥ W
9. D·¥Ä Ä ü…™…¥…¢ …™…¥ ·¥õ ú·¥á F Ä·¥Ä…¥XX
10. D·¥á…¥…¥·¥è·¥ú C·¥è…™ ü
11. S·¥ò·¥Ä·¥Ñ·¥á‚òÜD·¥Ä…¥·¥Ö è
12. K…™·¥¢…¥·¥Ä…™·¥†·¥á Ä
13. N·¥á·¥è…¥ G·¥á…¥·¥ás…™s E·¥†·¥Ä…¥…¢·¥á ü…™·¥è…¥
14. R·¥è ô·¥è·¥õ…™·¥Ñs;N·¥è·¥õ·¥ás
15. P·¥Ä·¥ò Ä…™·¥ã·¥Ä
16. M·¥á…¢·¥Ä ü·¥è B·¥èx
17. G ú·¥ès·¥õ …™…¥ ·¥õ ú·¥á S ú·¥á ü ü
18. G·¥Ä·¥õ·¥Ñ ú·¥Ä·¥ç·¥Ä…¥ C Ä·¥è·¥°·¥Ös
19. G·¥Ä·¥ã·¥ús·¥á…¥ T·¥ès ú…™ As·¥õ·¥á Ä…™s·¥ã
20. G…™…¥·¥õ·¥Ä·¥ç·¥Ä
21. S·¥Ä·¥ã·¥Äs·¥Ä·¥ç·¥Ä …¥·¥è P·¥Ä·¥õ·¥á·¥ç·¥Ä
22. E·¥†·¥á …¥·¥è J…™·¥ã·¥Ä…¥
23. Ps è·¥Ñ ú·¥è-P·¥Äss
24. D·¥á…¥·¥ò·¥Ä O…¥…¥·¥Ä ·¥õ·¥è S·¥á…™s ú·¥ú…¥ O·¥õ·¥è·¥ã·¥è
25. M·¥á·¥ã·¥Ä·¥ã·¥ú·¥Ñ…™·¥õ è A·¥Ñ·¥õ·¥è Äs
26. P ü·¥Ä…¥·¥á·¥õ·¥ás
27. B·¥ú·¥Ö·¥Ö è C·¥è·¥ç·¥ò ü·¥áx
28. P·¥á Äs·¥è…¥·¥Ä S·¥á Ä…™·¥ás
29. S·¥è Ä·¥Ä …¥·¥è O·¥õ·¥ès ú…™·¥ç·¥è…¥·¥è

S·¥ò·¥è Ä·¥õ
1. C·¥Ä·¥ò·¥õ·¥Ä…™…¥ Ts·¥ú ô·¥Äs·¥Ä
2. G…™·¥Ä…¥·¥õ K…™ ü ü…™…¥…¢
3. T ú·¥á K…¥…™…¢ ú·¥õ …™…¥ T ú·¥á A Ä·¥á·¥Ä (A Ä·¥á·¥Ä …¥·¥è K…™s ú…™ )
4. A·¥è·¥ã…™ D·¥á…¥s·¥á·¥õs·¥ú S ú·¥è·¥è·¥õ! (B ü·¥ú·¥á L·¥á…¢·¥á…¥·¥Ö S ú·¥è·¥è·¥õ!)
5. D·¥Ä ès
6. W ú…™s·¥õ ü·¥á!
7. O“ì“ìs…™·¥Ö·¥á
8. D Ä·¥Ä…¢·¥è…¥ L·¥á·¥Ä…¢·¥ú·¥á
9. F·¥Ä…¥·¥õ·¥Äs…™s·¥õ·¥Ä S·¥õ·¥á ü ü·¥Ä
10. I…¥·¥Ä·¥¢·¥ú·¥ç·¥Ä E ü·¥á·¥†·¥á…¥
11. G…™…¥…¢·¥Ä ·¥á K…™·¥Ñ·¥ã·¥è“ì“ì!!
12. H·¥ú…¥…¢ Ä è H·¥á·¥Ä Ä·¥õ W…™ ü·¥Ö S·¥õ Ä…™·¥ã·¥á Ä
13. G·¥Ä…¥ ô·¥Ä Ä·¥á K…™·¥Ñ·¥ã·¥á Äs
14. K·¥ú Ä·¥è·¥ã·¥è N·¥è B·¥Äs·¥ã·¥á·¥õ
15. S ü·¥Ä·¥ç D·¥ú…¥·¥ã
16. D·¥á·¥Ä Ä B·¥è ès
17. I‚Äô ü ü/CKBC
18. B·¥ú·¥¢·¥¢·¥á Ä B·¥á·¥Ä·¥õ·¥á Ä
19. B·¥Äsœô·¥ú·¥Äs ú!
20. R·¥è-K è·¥ú-B·¥ú!
21. D·¥Äs ú K·¥Ä·¥ò·¥ò·¥á…™
22. D…™·¥Ä·¥ç·¥è…¥·¥Ö …¥·¥è A·¥Ñ·¥á (A·¥Ñ·¥á ·¥è“ì D…™·¥Ä·¥ç·¥è…¥·¥Ö)
23. P Ä…™…¥·¥Ñ·¥áss N…™…¥·¥á: K…™s·¥Ä Ä·¥Ä…¢…™ J·¥ès ú…™·¥ã·¥è·¥ú Y·¥Ä·¥ã è·¥ú·¥ú ô·¥ú
24. M·¥Ä·¥ä·¥è Ä
25. T·¥è·¥ú·¥Ñ ú
26. H2
27. C Ä·¥èss G·¥Ä·¥ç·¥á
28. T·¥Ä…™s ú·¥è·¥ú Y·¥Ä·¥ã è·¥ú·¥ú M·¥ús·¥ú·¥ç·¥á
29. M·¥ès ú…™·¥Ö·¥è Ä·¥Ä (W ú·¥Ä·¥õ I“ì ·¥Ä F·¥á·¥ç·¥Ä ü·¥á M·¥Ä…¥·¥Ä…¢·¥á Ä ·¥è“ì ·¥Ä H…™…¢ ú S·¥Ñ ú·¥è·¥è ü B·¥Äs·¥á ô·¥Ä ü ü T·¥á·¥Ä·¥ç R·¥á·¥Ä·¥Ö D Ä·¥ú·¥Ñ·¥ã·¥á Ä‚Äôs)
30. O…¥·¥á O·¥ú·¥õs
31. O·¥è·¥ã…™·¥ã·¥ú F·¥ú Ä…™·¥ã·¥Ä ô·¥ú·¥õ·¥õ·¥á (B…™…¢ W…™…¥·¥Ö·¥ú·¥ò!)
32. H·¥Ä…™·¥ã è·¥ú·¥ú
33. A·¥õ·¥õ·¥Ä·¥Ñ·¥ã ·¥è…¥ T·¥è·¥ç·¥è Ä Ä·¥è·¥°
34. A·¥õ·¥õ·¥Ä·¥Ñ·¥ã N·¥è.1
35. A·¥õ·¥õ·¥Ä·¥Ñ·¥ã·¥á Ä Y·¥è·¥ú
36. Y·¥è·¥°·¥Ä·¥ç·¥ús ú…™ P·¥á·¥Ö·¥Ä ü
37. I·¥Ö·¥Ä·¥õ·¥á…¥ J·¥ú·¥ç·¥ò
38. O·¥†·¥á Ä D Ä…™·¥†·¥á
39. N·¥Äs·¥ú: S·¥ú·¥ç·¥ç·¥á Ä …™…¥ A…¥·¥Ö·¥Ä ü·¥ús…™·¥Ä
40. N·¥Äs·¥ú : A M…™…¢ Ä·¥Ä·¥õ·¥è Ä è B…™ Ä·¥Ö ·¥°…™·¥õ ú S·¥ú…™·¥õ·¥Ñ·¥Äs·¥á
41. H·¥Ä·¥ä…™·¥ç·¥á …¥·¥è I·¥ò·¥ò·¥è
42. As ú…™·¥õ·¥Ä …¥·¥è J·¥è·¥á
43. G·¥Ä…¥ ô·¥Ä Ä·¥á G·¥á…¥·¥ã…™
44. N·¥è·¥¢·¥è·¥ç…™ W…™·¥õ·¥Ñ ú·¥ás
45. O…¥·¥á P·¥è·¥ú…¥·¥Ö G·¥ès·¥ò·¥á ü
46. A…™·¥ç “ì·¥è Ä ·¥õ ú·¥á A·¥Ñ·¥á!
47. T ú·¥á P Ä…™…¥·¥Ñ·¥á ·¥è“ì T·¥á…¥…¥…™s
48. B·¥Ä ô è S·¥õ·¥á·¥òs
49. E è·¥ás ú…™·¥á ü·¥Ö 21
50. S·¥ç·¥Äs ú
51. S ú·¥Ä·¥ã·¥ú…¥·¥á·¥õs·¥ú …¥·¥è ·¥õ·¥Ä·¥ã·¥ã è·¥ú·¥ú ·¥ç·¥ús·¥ú·¥ç·¥á
52. A…™ Ä …¢·¥á·¥Ä Ä
53. P Ä…™…¥·¥Ñ·¥á O“ì S·¥õ Ä…™·¥Ö·¥á A ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥á
54. F Ä·¥á·¥á!
55. K·¥á…¥·¥ã·¥è·¥ú Z·¥á…¥ Ä·¥Ä·¥ã·¥á…™ S·¥ú…™·¥á…™ ô·¥ú U·¥ç…™s ú·¥è·¥ú

M·¥Ä Ä·¥õ…™·¥Ä ü A Ä·¥õ
1. B·¥è Ä·¥ú·¥õ·¥è: N·¥Ä Ä·¥ú·¥õ·¥è N·¥áx·¥õ G·¥á…¥·¥á Ä·¥Ä·¥õ…™·¥è…¥s
2. S ú…™·¥ã·¥Ä ô·¥Ä…¥·¥á H…™·¥ç·¥á: A·¥ã·¥Ä
3. K·¥Ä·¥õ·¥Ä…¥·¥Ä…¢·¥Ä·¥õ·¥Ä Ä…™
4. S ú…™·¥ä·¥è·¥ú S·¥Ä…™·¥ã è·¥è·¥ú …¥·¥è D·¥ás ú…™ K·¥á…¥…™·¥Ñ ú…™ (K·¥á…¥I·¥Ñ ú…™: T ú·¥á M…™…¢ ú·¥õ…™·¥ás·¥õ D…™s·¥Ñ…™·¥ò ü·¥á)
5. M·¥Ä·¥ä…™ ·¥Ö·¥á W·¥Ä·¥õ·¥Äs ú…™ …¥…™ K·¥è…™ S ú…™…¥·¥Äs·¥Ä…™!
6. T·¥Ä ô·¥è·¥è T·¥Ä·¥õ·¥õ·¥è·¥è
7. S·¥á…¥…¢·¥è·¥ã·¥ú B·¥Äs·¥Ä Ä·¥Ä
8. B·¥á…¥-·¥õ·¥è
9. M·¥á·¥Ö·¥Ä·¥ã·¥Ä B·¥èx
10. M·¥ús ú…™ ô·¥ú…¢ è·¥è·¥ú
11. M·¥Ä·¥ã·¥á…¥-·¥ã…™!
12. B ü·¥Ä·¥Ö·¥á & S·¥è·¥ú ü
13. F Ä·¥á·¥á·¥¢…™…¥…¢
14. I·¥ã·¥ã…™·¥õ·¥è·¥ús·¥á…¥ (I·¥ã·¥ã…™ T·¥è·¥ús·¥á…¥)
15. As·¥ú …¥·¥è Y·¥è…™·¥Ñ ú…™!
16. K·¥ú Ä·¥è·¥ã·¥Ä·¥ç…™ T ú·¥á A…¥…™·¥ç·¥Ä·¥õ…™·¥è…¥
17. T·¥è·¥ã è·¥è M·¥Ä·¥ä…™…¥ G·¥Ä·¥ã·¥ú·¥á…¥ K·¥á…¥·¥ò·¥ú·¥Ñ ú·¥è: T·¥è·¥ú
18. T·¥á…¥·¥ä·¥è·¥ú T·¥á…¥…¢·¥á
19. B·¥Ä·¥ã…™ (2018)
20. K·¥è…™ ú…™·¥ç·¥á ‚Ä†M·¥ús·¥è·¥ú
21. D Ä·¥Ä…¢·¥è…¥ B·¥Ä ü ü

M·¥ús…™·¥ã
1. S ú…™…¢·¥Ä·¥õs·¥ú ·¥°·¥Ä K…™·¥ç…™ …¥·¥è Us·¥è
2. H…™ ô…™·¥ã·¥á! E·¥ú·¥ò ú·¥è…¥…™·¥ú·¥ç
3. Z·¥è·¥ç ô…™·¥á ü·¥Ä…¥·¥Ö S·¥Ä…¢·¥Ä
4. K-O…¥!
5. N·¥è·¥Ö·¥Ä·¥ç·¥á C·¥Ä…¥·¥õ·¥Ä ô…™ ü·¥á
6. S·¥è R·¥Ä N·¥è W·¥è T·¥è
7. B·¥á·¥Ñ·¥ã
8. B·¥Ä…¥G D Ä·¥á·¥Ä·¥ç!
9. T ú·¥á …™DOLM@STER
10. L·¥è·¥†·¥á L…™·¥†·¥á! S·¥Ñ ú·¥è·¥è ü I·¥Ö·¥è ü P Ä·¥è·¥ä·¥á·¥Ñ·¥õ
11. D·¥á·¥õ Ä·¥è…™·¥õ M·¥á·¥õ·¥Ä ü C…™·¥õ è
12. N·¥Ä…¥·¥Ä
13. IDOL…™SH7
14. S·¥Ä·¥ã·¥Ä·¥ç…™·¥Ñ ú…™ …¥·¥è A·¥ò·¥è ü ü·¥è…¥
15. K…™…¥…™ Ä·¥è …¥·¥è C·¥è Ä·¥Ö·¥Ä
16. M·¥Ä…¢…™·¥Ñ-K è·¥ú…¥! R·¥á…¥·¥Ä…™ss·¥Ä…¥·¥Ñ·¥á
17. P…™·¥Ä…¥·¥è …¥·¥è M·¥è Ä…™
18. F·¥ú ü ü M·¥è·¥è…¥ ·¥°·¥è S·¥Ä…¢·¥Äs ú…™·¥õ·¥á
19. W ú…™·¥õ·¥á A ü ô·¥ú·¥ç
20. W·¥Ä·¥ã·¥á U·¥ò, G…™ Ä üs!
21. T·¥Ä Ä…™ T·¥Ä Ä…™
22. G Ä·¥Ä·¥†…™·¥õ·¥Ä·¥õ…™·¥è…¥
23. M·¥Ä·¥Ñ Ä·¥èss S·¥á Ä…™·¥ás
24. ·¥á“ì: A T·¥Ä ü·¥á ·¥è“ì M·¥á·¥ç·¥è Ä…™·¥ás.
25. K·¥Ä·¥Ñ ú·¥è·¥ú O·¥ú·¥ä…™
26. L…™·¥¢ ·¥õ·¥è A·¥è…™ T·¥è Ä…™
27. Y·¥è·¥Ä·¥ã·¥á Ts·¥ú…¢·¥á Ä·¥ú L·¥ú …¥·¥è U·¥õ·¥Ä
28. A…™·¥ã·¥Ä·¥õs·¥ú!
29. S·¥õ·¥Ä Ä·¥ç è·¥ú
30. F·¥ú·¥ú·¥ã·¥Ä
31. S ú·¥á ü·¥õ·¥á Ä
32. AKB0048
33. S ú·¥è·¥° B è R·¥è·¥Ñ·¥ã!!
34. S è·¥ç·¥ò ú·¥è…¢·¥á·¥Ä Ä 

H·¥Ä Ä·¥á·¥ç
1. D·¥Ä·¥õ·¥á ·¥Ä L…™·¥†·¥á
2.M·¥Ä è·¥è C ú…™·¥ã…™!
3. M·¥è…¥s·¥õ·¥á Ä M·¥ús·¥ú·¥ç·¥á N·¥è I Ä·¥ú N…™·¥Ñ ú…™·¥ä·¥è·¥ú
4. T·¥Ä…™·¥ç·¥Ä·¥Ö·¥è·¥ú G·¥Ä·¥ã·¥ú·¥á…¥ 35 S ú·¥è·¥ú·¥õ·¥Ä…™
5. T ú·¥á W·¥è Ä ü·¥Ö G·¥è·¥Ö O…¥ ü è K…¥·¥è·¥°s
6. D·¥á…¥·¥ò·¥Ä K è·¥è·¥ús ú…™
7. K·¥è Ä·¥á W·¥Ä Z·¥è·¥ç ô…™·¥á D·¥ás·¥ú·¥ã·¥Ä
8. M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ S·¥á Ä…™·¥ás
9. O Ä·¥áI·¥ç·¥è
10. Z·¥á Ä·¥è …¥·¥è Ts·¥ú·¥ã·¥Ä…™·¥ç·¥Ä
11. M·¥Ä ú·¥è·¥ú S·¥á…¥s·¥á…™ N·¥á…¢…™·¥ç·¥Ä!
12. Is·¥á·¥ã·¥Ä…™ …¥·¥è S·¥á…™·¥ã…™s ú…™ M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
13. M·¥Ä…¥…¢·¥Ä·¥ã·¥Ä-s·¥Ä…¥ ·¥õ·¥è Ass…™s·¥õ·¥Ä…¥·¥õ-s·¥Ä…¥ ·¥õ·¥è T ú·¥á A…¥…™·¥ç·¥Ä·¥õ…™·¥è…¥
14. I·¥Ñ ú…™…¢·¥è 100%
15. H·¥Ä…™ è·¥è Ä·¥á! N è·¥Ä Ä·¥ú·¥ã·¥è-s·¥Ä…¥
16. S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
17. C·¥Ä·¥ç·¥ò…™·¥è…¥·¥á!
18. G Ä…™s·¥Ä…™·¥Ä S·¥á Ä…™·¥ás
19. F Ä·¥á·¥á·¥¢…™…¥…¢
20. MM!
21. N·¥è·¥úC·¥è·¥ç·¥á
22. A ú, M è G·¥è·¥Ö·¥Ö·¥áss
23. L·¥è·¥†·¥á H…™…¥·¥Ä
24. H…™…¢ ú S·¥Ñ ú·¥è·¥è ü ·¥è“ì ·¥õ ú·¥á D·¥á·¥Ä·¥Ö
25. K…™ss x s…™s
26. H·¥á…¥·¥õ·¥Ä…™ O·¥ú·¥ä…™ ·¥õ·¥è W·¥Ä Ä·¥Ä·¥°·¥Ä…¥·¥Ä…™ N·¥á·¥ã·¥è.
27. S ú…™…¥·¥ç·¥Ä…™ M·¥Ä·¥è·¥ú …¥·¥è T·¥ás·¥õ·¥Ä·¥ç·¥á…¥·¥õ
28. S·¥á·¥ã…™ Ä·¥á…™
29. G·¥Ä·¥ã·¥ús·¥á…¥ T·¥ès ú…™ As·¥õ·¥á Ä…™s·¥ã
30. S·¥Ä·¥á…¥·¥Ä…™ H·¥á Ä·¥è…™…¥·¥á …¥·¥è S·¥è·¥Ö·¥Ä·¥õ·¥á·¥ã·¥Ä·¥õ·¥Ä
31. M·¥Äs·¥Ä·¥ç·¥ú…¥·¥á-·¥ã·¥ú…¥ …¥·¥è R·¥á·¥†·¥á…¥…¢·¥á
32. O Ä·¥á …¥·¥è K·¥Ä…¥·¥è·¥ä·¥è ·¥õ·¥è Os·¥Ä…¥·¥Ä…¥·¥Ä·¥ä…™·¥ç…™ …¢·¥Ä S ú·¥ú Ä·¥Ä ô·¥Ä S·¥ú…¢…™ Ä·¥ú
33. S ú·¥ú“ì“ì ü·¥á!
34. N è·¥Ä…¥ K·¥è…™!
35. O·¥ú·¥õ ô Ä·¥á·¥Ä·¥ã C·¥è·¥ç·¥ò·¥Ä…¥ è
36. M·¥Ä·¥Ö·¥Ä…¥ …¥·¥è O·¥ú ·¥õ·¥è V·¥Ä…¥·¥Ä·¥Ö…™s
37. M·¥Ä·¥ä…™ ·¥Ö·¥á W·¥Ä·¥õ·¥Äs ú…™ …¥…™ K·¥è…™ S ú…™…¥·¥Äs·¥Ä…™!
38. P Ä…™…¥·¥Ñ·¥áss L·¥è·¥†·¥á Ä!
29. S·¥á…™·¥ã·¥á…¥ Ts·¥ú·¥ã·¥Ä…™ …¥·¥è W·¥è Ä ü·¥Ö B Ä·¥á·¥Ä·¥ã
40. R·¥è·¥ã·¥ú·¥ä·¥è·¥ú·¥ç·¥Ä …¥·¥è S ú…™…¥ Ä è·¥Ä·¥ã·¥ús ú·¥Ä!?
41. H…™…¢ ú S·¥Ñ ú·¥è·¥è ü DxD
42. N…™s·¥á·¥ã·¥è…™
43. B·¥è·¥ã·¥ú ·¥°·¥Ä T·¥è·¥ç·¥è·¥Ö·¥Ä·¥Ñ ú…™ …¢·¥Ä S·¥ú·¥ã·¥ú…¥·¥Ä…™
44. R·¥ès·¥Ä Ä…™·¥è ·¥õ·¥è V·¥Ä·¥ç·¥ò…™ Ä·¥á
45. IS: I…¥“ì…™…¥…™·¥õ·¥á S·¥õ Ä·¥Ä·¥õ·¥ès
46. T·¥è LOVE-R·¥ú S·¥á Ä…™·¥ás
47. S·¥è Ä·¥Ä …¥·¥è O·¥õ·¥ès ú…™·¥ç·¥è…¥·¥è
48. T Ä…™…¥…™·¥õ è S·¥á·¥†·¥á…¥
49. Y·¥Ä·¥ç·¥Ä·¥Ö·¥Ä-·¥ã·¥ú…¥ ·¥õ·¥è 7-…¥…™…¥ …¥·¥è M·¥Ä·¥ä·¥è
50. I·¥Ñ ú…™ ô·¥Ä…¥ Us ú…™ Ä·¥è …¥·¥è D·¥Ä…™·¥ç·¥Ä·¥è·¥ú

R·¥á·¥†·¥á Äs·¥á H·¥Ä Ä·¥á·¥ç
1. H·¥Ä…¥·¥Äs·¥Ä·¥ã·¥á Ä·¥ú S·¥á…™s ú·¥è·¥ú…¥·¥á…¥
2. U·¥õ·¥Ä …¥·¥è‚òÜP Ä…™…¥·¥Ñ·¥á-s·¥Ä·¥ç·¥Ä‚ô™
3. H·¥Ä·¥ã·¥ú·¥è·¥ú·¥ã…™
4. Y·¥Ä·¥ç·¥Ä·¥õ·¥è N·¥Ä·¥Ö·¥ás ú…™·¥ã·¥è S ú…™·¥Ñ ú…™ H·¥á…¥…¢·¥á
5. A·¥ã·¥Ä·¥õs·¥ú·¥ã…™ …¥·¥è Y·¥è…¥·¥Ä
6. F·¥ús ú…™…¢…™ Y·¥ú·¥ú…¢…™ (M ès·¥õ·¥á Ä…™·¥è·¥ús P ü·¥Ä è)
7. D…™·¥Ä ô·¥è ü…™·¥ã L·¥è·¥†·¥á Äs
8. A Ä·¥Ñ·¥Ä…¥·¥Ä F·¥Ä·¥ç…™…¢ ü…™·¥Ä
9. B Ä·¥è·¥õ ú·¥á Äs C·¥è…¥“ì ü…™·¥Ñ·¥õ
10. D·¥Ä…¥·¥Ñ·¥á ·¥°…™·¥õ ú D·¥á·¥†…™ üs
11. O·¥ú Ä·¥Ä…¥ H…™…¢ ú S·¥Ñ ú·¥è·¥è ü H·¥ès·¥õ C ü·¥ú ô
12. K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä H·¥Ä·¥ä…™·¥ç·¥á·¥ç·¥Äs ú…™·¥õ·¥Ä
13. A·¥ç…¥·¥ás…™·¥Ä
14. B·¥è…¥·¥ä·¥è·¥ú Ä S·¥°·¥á·¥á·¥õ L·¥è·¥†·¥á P·¥Ä·¥õ…™ss·¥á Ä…™·¥á
15. K·¥Ä·¥ç…™…¢·¥Ä·¥ç…™ …¥·¥è As·¥è ô…™
16. H…™…™ Ä·¥è …¥·¥è K·¥Ä·¥ã·¥á Ä·¥Ä

R·¥è·¥ç·¥Ä…¥·¥Ñ·¥á
1 C ü·¥Ä è & M·¥Ä Ä…™·¥Ä
2. W ú…™·¥õ·¥á A ü ô·¥ú·¥ç 
3. C ü·¥Ä…¥…¥·¥Ä·¥Ö A“ì·¥õ·¥á Ä S·¥õ·¥è Ä è
4. A…¥…¢·¥á ü B·¥á·¥Ä·¥õs
5. Is ú·¥ú·¥ú·¥ã·¥Ä…¥ F Ä…™·¥á…¥·¥Ös.
6. S ú…™…¢·¥Ä·¥õs·¥ú ·¥°·¥Ä K…™·¥ç…™ …¥·¥è Us·¥è
7. N…™s·¥á·¥ã·¥è…™
8. G·¥è ü·¥Ö·¥á…¥ T…™·¥ç·¥á
9. N·¥Ä…¢…™ …¥·¥è As·¥ú·¥ã·¥Ä Ä·¥Ä
10. A·¥è H·¥Ä Ä·¥ú R…™·¥Ö·¥á
11. O Ä·¥á M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™
12. S·¥Ä·¥á…¥·¥Ä…™ H·¥á Ä·¥è…™…¥·¥á N·¥è S·¥è·¥Ö·¥Ä·¥õ·¥á·¥ã·¥Ä
13. G·¥á·¥ã·¥ã·¥Ä…¥ S ú·¥è·¥ä·¥è·¥ú N·¥è·¥¢·¥Ä·¥ã…™-K·¥ú…¥
14. S·¥Ä…¥·¥ã·¥Ä Ä·¥á·¥Ä
15. K·¥è·¥ã·¥è Ä·¥è C·¥è…¥…¥·¥á·¥Ñ·¥õ
16. A·¥ç·¥Ä…¢·¥Ä·¥ç…™ SS
17. K·¥è·¥õ·¥è·¥ú Ä·¥Ä-s·¥Ä…¥ (M·¥Äs·¥ú·¥ã…™…¥ D·¥Ä“ì·¥õ·¥Ä Ä C·¥Ä·¥Ö·¥Ä…¥…¢·¥Ä…¥ A·¥ä·¥Ä ú)
18. H·¥á…¥·¥õ·¥Ä…™ O·¥ú·¥ä…™ ·¥õ·¥è W·¥Ä Ä·¥Ä·¥°·¥Ä…¥·¥Ä…™ N·¥á·¥ã·¥è
19. T·¥è…¥·¥Ä Ä…™ …¥·¥è K·¥Ä…™ ô·¥ú·¥õs·¥ú-·¥ã·¥ú…¥
20. K·¥Ä…™·¥Ñ ú·¥è·¥ú ·¥°·¥Ä M·¥Ä…™·¥Ö-s·¥Ä·¥ç·¥Ä!
21. P ü·¥Äs·¥õ…™·¥Ñ M·¥á·¥ç·¥è Ä…™·¥ás
22. T·¥è Ä·¥Ä·¥Ö·¥è Ä·¥Ä!
23. A…¥·¥è H…™ M…™·¥õ·¥Ä H·¥Ä…¥·¥Ä
24. Z·¥á Ä·¥è …¥·¥è Ts·¥ú·¥ã·¥Ä…™·¥ç·¥Ä
25. B·¥è·¥ã·¥ú Ä·¥Ä ·¥°·¥Ä M…™…¥…¥·¥Ä K·¥Ä·¥°·¥Ä…™s·¥è·¥ú
26. I·¥õ·¥Ä·¥¢·¥ú Ä·¥Ä …¥·¥Ä K…™ss
27. Y·¥Ä·¥ç·¥Ä·¥Ö·¥Ä-·¥ã·¥ú…¥ ·¥õ·¥è 7 …¥…™…¥ …¥·¥è M·¥Ä·¥ä·¥è
28. A·¥ã·¥Ä·¥õs·¥ú·¥ã…™ N·¥è Y·¥è…¥·¥Ä
29. O Ä·¥á …¥·¥è K·¥Ä…¥·¥è·¥ä·¥è ·¥õ·¥è Os·¥Ä…¥·¥Ä…¥·¥Ä·¥ä…™·¥ç…™ …¢·¥Ä S ú·¥ú Ä·¥Ä ô·¥Ä S·¥ú…¢…™ Ä·¥ú
30. Y·¥ès·¥ú…¢·¥Ä …¥·¥è S·¥è Ä·¥Ä
31. S·¥°·¥è Ä·¥Ö A Ä·¥õ O…¥ ü…™…¥·¥á
32. A…¥·¥è N·¥Ä·¥õs·¥ú ·¥Ö·¥á M·¥Ä·¥õ·¥õ·¥á Ä·¥ú
33. N·¥Ä Ä·¥ú·¥õ·¥è S ú…™·¥ò·¥ò·¥ú·¥Ö·¥á…¥ : T ú·¥á L·¥Äs·¥õ
34. K…™·¥ç…™ …¥…™ T·¥è·¥Ö·¥è·¥ã·¥á
35. G·¥ès…™·¥Ñ·¥ã
36. N·¥Ä…¢·¥Ä·¥õ·¥è Y·¥ú·¥ã…™-C ú·¥Ä…¥ …¥·¥è S·¥è·¥ús ú…™·¥õs·¥ú (G·¥Ä·¥ç ô·¥Ä Ä ·¥Ö·¥Ä Ä…™ S·¥¢·¥ú·¥ç…™ è·¥Ä H·¥Ä Ä·¥ú ú…™ …¥·¥è S·¥è·¥ús ú…™·¥õs·¥ú)
37. K·¥Ä·¥ç…™s·¥Ä·¥ç·¥Ä H·¥Ä·¥ä…™·¥ç·¥á·¥ç·¥Äs ú…™·¥õ·¥Ä
38. O Ä·¥á…¢·¥Ä…™ Ä·¥ú
39. S·¥è Ä·¥á·¥Ö·¥á·¥ç·¥è S·¥á·¥ã·¥Ä…™ ·¥°·¥Ä U·¥õs·¥ú·¥ã·¥ús ú…™…™
42. S·¥á Ä·¥†·¥Ä…¥·¥õ x S·¥á Ä·¥†…™·¥Ñ·¥á
43. W·¥è Ä·¥ã…™…¥…¢
44. A·¥ã·¥Ä…¢·¥Ä·¥ç…™ …¥·¥è S ú…™ Ä·¥Ä è·¥ú·¥ã…™ H…™·¥ç·¥á
45. D·¥á…¥·¥ò·¥Ä O…¥…¥·¥Ä ·¥õ·¥è S·¥á…™s ú·¥ú…¥ O·¥õ·¥è·¥ã·¥è
46. T·¥Äs·¥è…¢·¥Ä Ä·¥á O·¥õ·¥è·¥ç·¥á x A·¥ç…¥·¥ás…™·¥Ä
47. NHK N…™ Y·¥è·¥ú·¥ã·¥ès·¥è
48. B·¥è·¥ã·¥ú D·¥Ä·¥ã·¥á …¢·¥Ä I…¥·¥Ä…™ M·¥Ä·¥Ñ ú…™
49. I…¥·¥ú x B·¥è·¥ã·¥ú S·¥á·¥Ñ Ä·¥á·¥õ S·¥á Ä·¥†…™·¥Ñ·¥á
50. N·¥Ä·¥¢·¥è …¥·¥è K·¥Ä…¥·¥è·¥ä·¥è X
51. S·¥ò·¥á·¥Ñ…™·¥Ä ü A
52. L·¥è·¥†·¥á ü è C·¥è·¥ç·¥ò ü·¥áx
53. S·¥ú·¥ã…™·¥õ·¥õ·¥á I…™ …¥·¥Ä  è·¥è
54. E…™·¥ã·¥è·¥ã·¥ú K·¥è…™ M·¥è…¥·¥è…¢·¥Ä·¥õ·¥Ä Ä…™ E·¥ç·¥ç·¥Ä
55. N·¥Ä…¥·¥Ä
56. R·¥è·¥ç·¥á·¥è x J·¥ú ü…™·¥á·¥õ
57. H·¥Ä·¥Ñ ú…™·¥ç…™·¥õs·¥ú ·¥õ·¥è C ü·¥è·¥†·¥á Ä
58. B è·¥è·¥ús·¥è·¥ã·¥ú 5 C·¥á…¥·¥õ…™·¥ç·¥á·¥õ·¥á Ä
59. B·¥è·¥ã·¥ú Ä·¥Ä …¢·¥Ä I·¥õ·¥Ä
60. K·¥è…™ K·¥Ä·¥¢·¥á
61. O·¥è·¥ã·¥Ä·¥ç…™ ·¥õ·¥è K·¥è·¥ús ú…™…¥ Ä è·¥è·¥ú
62. N·¥è·¥Ö·¥Ä·¥ç·¥á C·¥Ä…¥·¥õ·¥Ä ô…™ ü·¥á 
63. H·¥è·¥õ·¥Ä Ä·¥ú ô…™ …¥·¥è M·¥è Ä…™ ·¥á
64. K…™·¥ç…™ …¥·¥è N·¥Ä W·¥Ä?
65. H·¥è Ä…™-s·¥Ä…¥ ·¥õ·¥è M…™ è·¥Ä·¥ç·¥ú Ä·¥Ä-·¥ã·¥ú…¥
66. R·¥á·¥Ñ
67. C ú…™ ú·¥Ä è·¥Ä“ì·¥ú Ä·¥ú
68. M·¥Äs ú…™ Ä·¥è-…™ Ä·¥è S è·¥ç·¥ò ú·¥è…¥ è
70. C Ä·¥èss G·¥Ä·¥ç·¥á
71. T Ä·¥ú·¥á T·¥á·¥Ä Äs
72. M·¥Äs·¥Ä·¥ç·¥ú…¥·¥á-·¥ã·¥ú…¥ …¥·¥è R·¥á·¥†·¥á…¥…¢·¥á 
73. S·¥á…™ Ä·¥á…¥ 
74. R·¥áLIFE
75. H·¥ès ú…™·¥¢·¥è Ä·¥Ä ·¥á K·¥Ä·¥ã·¥Ä Ä·¥ú H·¥Äs ú…™
76. E Ä·¥è·¥ç·¥Ä…¥…¢·¥Ä-S·¥á…¥s·¥á…™
77. K·¥è·¥á …¥·¥è K·¥Ä·¥õ·¥Ä·¥Ñ ú…™
78. N·¥è…¢…™·¥¢·¥Ä·¥ã·¥Ä H·¥Ä Ä·¥ú·¥ã·¥Ä …¥·¥è H…™·¥ç…™·¥õs·¥ú
79. K…™·¥¢…¥·¥Ä…™·¥†·¥á Ä
80. G·¥ú…™ ü·¥õ è C Ä·¥è·¥°…¥
81. O Ä·¥Ä…¥…¢·¥á
82. Ts·¥ú·¥ã…™ …¢·¥Ä K…™ Ä·¥á…™
83. G·¥Ä·¥ç·¥á Äs
84. S·¥Ä·¥ã·¥ú Ä·¥Äs·¥è·¥ú …¥·¥è ·¥ò·¥á·¥õ …¥·¥Ä ·¥ã·¥Ä…¥·¥è·¥ä·¥è·¥ú
85. O Ä·¥á …¥·¥è I·¥ç·¥è·¥ú·¥õ·¥è …¢·¥Ä K·¥è…¥…¥·¥Ä…¥…™ K·¥Ä·¥°·¥Ä…™…™ W·¥Ä·¥ã·¥á …¢·¥Ä N·¥Ä…™`, text, tescuk, replySet)
					break
	case 'infocuaca':
	 if (isBanned) return reply(mess.only.benned)    
     if (!isUser) return reply(mess.only.userB)
     if (isLimit(sender)) return reply(limits.limitend(pushname2))
     if (args.length < 1) return reply(from, 'Kirim perintah *!cuaca [tempat]*\nContoh : *!cuaca Banyuwangi', text)
     reply(mess.wait)
            tempat = `${body.slice(11)}`
            weather = await fetchJson('https://videfikri.com/api/cuaca/?daerah='+ tempat, {method: 'get'})
            if (weather.error) {
             reply(from, weather.error, text)
            } else {
             client.sendMessage(from, `‚û∏ Tempat : ${weather.result.tempat}\n\n‚û∏ Angin : ${weather.result.angin}\n‚û∏ Cuaca : ${weather.result.cuaca}\n‚û∏ Deskripsi : ${weather.result.desc}\n‚û∏ Kelembapan : ${weather.result.kelembapan}\n‚û∏ Suhu : ${weather.result.suhu}\n‚û∏ Udara : ${weather.result.udara}`, text, {quoted: mek})
            }
            await limitAdd(sender)
            break 

         case 'pinterest':
					if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
					if (args.length < 1) return reply(mess.search)
					pinte = body.slice(11)
					anu = await fetchJson(`https://api.vhtear.com/pinterest?query=${pinte}&apikey=${VthearApi}`, {method: 'get'})
					reply(mess.wait)
					var pin = JSON.parse(JSON.stringify(anu.result));
					var trest =  pin[Math.floor(Math.random() * pin.length)];
					pinehg = await getBuffer(trest)
					client.sendMessage(from, pinehg, image, { caption: '*Pinterest*\n\n*Hasil Pencarian : '+pinte+'*', quoted: mek })
					break
					
		case 'jadwalsholat':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (args.length < 1) return reply('Masukan nama daerah!!')
					sholat = `${body.slice(14)}`
					anu = await fetchJson(`https://mhankbarbar.tech/api/jadwalshalat?daerah=${sholat}&apiKey=${BarBarApi}`, {method: 'get'})
					reply(mess.wait)
					if (anu.result) return reply(anu.result)
					jsol = `Jadwal sholat di *${sholat}* hari ini adalah\n\n‚û∏ *Subuh :* ${anu.Subuh} WIB\n*‚û∏ Dzuhur :* ${anu.Dzuhur} WIB\n*‚û∏ Ashar :* ${anu.Ashar} WIB\n*‚û∏ Maghrib :* ${anu.Maghrib} WIB\n*‚û∏ Isya :* ${anu.Isya} WIB`
					client.sendMessage(from, jsol, text, {quoted: mek})
					await limitAdd(sender) 
					break 
            case 'jadwaltv':
                if (isBanned) return reply(mess.wait.benned)
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                if (args.length < 1)return reply('Nama Channelnya??')
                reply(mess.wait)
                jadwaltv = `${body.slice(10)}`
                anu = await fetchJson(`https://docs-jojo.herokuapp.com/api/jadwaltv?ch=${jadwaltv}`, {method: 'get'})
                jtv = `${anu.result}`
                client.sendMessage(from, jtv, text, {quoted: mek})
                await limitAdd(sender)
               	break  
                
           case 'jadwaltvnow':
                if (isBanned) return reply(mess.wait.benned)
                if (!isUser) return reply(mess.only.userB)
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
                anu = await fetchJson(`https://docs-jojo.herokuapp.com/api/jadwaltvnow`, {method: 'get'})
                tvnow = `Jadwal Tv Sekarang Pada Jam : *${anu.result.jam}* Adalah: \n *${anu.result.jadwalTV}`
                client.sendMessage(from, tvnow, text, {quoted: mek})
                await limitAdd(sender) 
                break 

// premium user
         case 'joox':
			if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
                anu = await fetchJson(`https://tobz-api.herokuapp.com/api/joox?q=${body.slice(6)}&apikey=${TobzApi}`, {method: 'get'})
               if (anu.error) return reply(anu.error)
                 infomp3 = `„Äå *JOOX* „Äç\n\n*‚Ä¢ Judul* : ${anu.result.judul}\n*‚Ä¢ Album* : ${anu.result.album}\n*‚Ä¢ Dipublikasi* : ${anu.result.dipublikasi}\n\n*TUNGGU SEBENTAR LAGI DIKIRIM MOHON JANGAN SPAM*`
                bufferddd = await getBuffer(anu.result.thumb)
                 reply(mess.wait)
                buff = await getBuffer(anu.result.mp3)
                client.sendMessage(from, bufferddd, image, {quoted: mek, caption: infomp3})
                client.sendMessage(from, buff, audio, {mimetype: 'audio/mp4', filename: `${anu.result.title}.mp3`, quoted: mek})
                await limitAdd(sender) 
                break  
          case 'snack':
			if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (!isPrem) return reply(mess.only.premium)
				if (args.length < 1) return reply('Urlnya mana gan?')
					if (!isUrl(args[0]) && !args[0].includes('sck')) return reply(mess.error.Iv)
                anu = await fetchJson(`https://api-anoncybfakeplayer.herokuapp.com/sckdown?url=${args[0]}`, {method: 'get'})
               if (anu.error) return reply(anu.error)
                 sck = `„Äå *SNACK VIDEO DOWNLOADER* „Äç\n\n*‚Ä¢ Format:* ${anu.format}\n*‚Ä¢ Size:* ${anu.size}\n\n*TUNGGU SEBENTAR LAGI DIKIRIM MOHON JANGAN SPAM*`
                bufferddd = await getBuffer('https://raw.githubusercontent.com/FarhanXCode7/termux-bot-wa/main/src/glitchtext.png')
                 reply(mess.wait)
                buff = await getBuffer(anu.result)
                client.sendMessage(from, bufferddd, image, {quoted: mek, caption: sck})
                client.sendMessage(from, buff, video, {mimetype: 'video/mp4', filename: `${anu.format}.mp4`, quoted: mek})
                await limitAdd(sender) 
                break  
             case 'ytmp4':
    				if (isBanned) return reply(mess.only.benned)    
    				if (!isPrem) return reply(mess.only.premium)
    				if (!isUser) return reply(mess.only.userB)
					if (args.length < 1) return reply('Urlnya mana gan?')
					if (!isUrl(args[0]) && !args[0].includes('youtu.be')) return reply(mess.error.Iv)
					anu = await fetchJson(`http://itsmeikygans.my.id/ytmp4?apikey=${ItsApi}&url=${args[0]}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					ytt = `„Äå *YOUTUBE MP4 DOWNLOADER* „Äç\n\n‚Ä¢ Title : *${anu.title}*\n‚Ä¢ *Size:* ${anu.filesize}\n‚Ä¢ *Deskripsi:* ${anu.desc}\n\n Tunggu Sebentar 1 menit Mungkin Agak Lama Karna Mendownload Video`
					buff = await getBuffer(anu.thumb)
					reply(mess.wait)
					buffer = await getBuffer(anu.result)
					client.sendMessage(from, buff, image, {quoted: mek, caption: ytt})
					client.sendMessage(from, buffer, video, {mimetype: 'video/mp4', filename: `${anu.title}.mp4`, quoted: mek, caption: 'Nih Gan'})
					await limitAdd(sender) 
					break 
				case 'ytmp3':
					if (isBanned) return reply(mess.only.benned)    
					if (!isPrem) return reply(mess.only.premium)
					if (!isUser) return reply(mess.only.userB)
					if (args.length < 1) return reply('Urlnya mana gan?')
					if(!isUrl(args[0]) && !args[0].includes('youtu')) return reply(mess.error.Iv)
					anu = await fetchJson(`http://itsmeikygans.my.id/ytmp3?apikey=${ItsApi}&url=${args[0]}&apiKey=${BarBarApi}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					teks = `„Äå *YOUTUBE MP3 DOWNLOADER* „Äç\n\n‚Ä¢ Title : *${anu.title}*\n‚Ä¢ *Size:* ${anu.filesize}\n*‚Ä¢ Deskripsi:* ${anu.desc}\n\n Tunggu Sebentar 1 menit Mungkin Agak Lama Karna Mendownload Video`
					buff = await getBuffer(anu.thumb)
					reply(mess.wait)
					buffer = await getBuffer(anu.result)
					client.sendMessage(from, buff, image, {quoted: mek, caption: teks})
					client.sendMessage(from, buffer, audio, {mimetype: 'audio/mp4', filename: `${anu.title}.mp3`, quoted: mek})
					await limitAdd(sender) 
					break 
           case 'playmp3':
                if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
                reply(mess.wait)
                play = body.slice(9)
                anu = await fetchJson(`https://api.zeks.xyz/api/ytplaymp3?q=${play}&apikey=apivinz`)
               if (anu.error) return reply(anu.error)
                 infomp3 = `„Äå *PLAY MP3* „Äç\n*‚Ä¢ Titulo:* ${anu.result.title}\n*‚Ä¢ Fonte:* ${anu.result.source}\n*‚Ä¢ Tamanho:* ${anu.result.size}\n\n*POR FAVOR ESPERE SE A MUSICA NAO CHEGAR ENVIE NOVAMENTE COM NOME CORRETO*`
                buffer = await getBuffer(anu.result.thumbnail)
                lagu = await getBuffer(anu.result.url_audio)
                client.sendMessage(from, buffer, image, {quoted: mek, caption: infomp3})
                client.sendMessage(from, lagu, audio, {mimetype: 'audio/mp4', filename: `${anu.title}.mp3`, quoted: mek})
                await limitAdd(sender) 
                break 
         case 'play':
					if (!isOwner) return reply('novamente fechado')
			    if (isPrem) return reply(mess.only.premium)
	            if (isBanned) return reply(mess.only.benned) 
				if (!isUser) return reply(mess.only.userB)
                reply(mess.wait)
                play = body.slice(9)
                anu = await fetchJson(`https://api.zeks.xyz/api/ytplaymp3?q=${play}&apikey=apivinz`, {method: 'get'})
               if (anu.error) return reply(anu.error)
                 infomp3 = `„Äå *TIMELINE PLAY MP3* „Äç\n*‚Ä¢ Judul:* ${anu.result.title}\n*‚Ä¢ Source:* ${anu.result.source}\n*‚Ä¢ Ukuran:* ${anu.result.size}\n\n*TUNGGU SEBENTAR LAGI DIKIRIM MOHON JANGAN SPAM YA SAYANG*`
                buffer = await getBuffer(anu.result.thumbnail)
                lagu = await getBuffer(anu.result.url_audio)
                client.sendMessage(from, buffer, image, {quoted: mek, caption: infomp3})
                client.sendMessage(from, lagu, audio, {mimetype: 'audio/mp4', filename: `${anu.title}.mp3`, quoted: mek})
                break
           case 'asupan':
				 if (isBanned) return reply(mess.only.benned) 
				 if (isLimit(sender)) return reply(limits.limitend(pushname2))				    
				if (!isUser) return reply(mess.only.userB)
				client.updatePresence(from, Presence.composing) 
                reply('Sabar beri jeda 3menit')
				 data = fs.readFileSync('./FADHIL/asupan.js');
                 jsonData = JSON.parse(data);
                 randIndex = Math.floor(Math.random() * jsonData.length);
                 randKey = jsonData[randIndex];
                 asupan = await getBuffer(randKey.result)
                 client.sendMessage(from, asupan, video, {quoted: mek, caption: '\`\`\`ASUPAN BNGST:V\`\`\`'})
                   await limitAdd(sender) 
                break 

// Akhir Fitur Premium 

				case 'wiki':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
                    if (args.length < 1) return reply('teks nya mana om?')
                    reply(mess.wait)
                   wiki = `${body.slice(6)}`
                    anu = await fetchJson(`http://itsmeikygans.my.id/wiki?apikey=${ItsApi}&q=${wiki}`, {method: 'get'})
                    if (anu.error) return reply(anu.error)
                    wikii = `${anu.result}`
                    client.sendMessage(from, wikii, text, {quoted: mek})
                   await limitAdd(sender) 
                   break  
                   
               case 'pastebin':
                   if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
				paste = `${body.slice(10)}`
                   anu = await fetchJson(`https://api-anoncybfakeplayer.herokuapp.com/pastebin?text=${paste}`, {method: 'get'})
                   client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
                   await limitAdd(sender) 				
                   break 
	       case 'smule':
	       if (isBanned) return reply(mess.only.benned)
	       if (!isPrem) return reply(mess.only.premium)
				if (!isUser) return reply(mess.only.userB)
					if (args.length < 1) return reply('Urlnya mana gan?')
					if (!isUrl(args[0]) && !args[0].includes('c-ash.smule')) return reply(mess.error.Iv)
					reply(mess.wait)
					anu = await fetchJson(`https://mnazria.herokuapp.com/api/smule?link=${args[0]}`, {method: 'get'})
					if (anu.error) return reply(anu.error)
					teks = `*Title* : ${anu.title}\n\n Tunggu Sebentar 1 menit Mungkun Agak Lama Karna Mendownload Video`
					thumb = await getBuffer(anu.thumb)
					client.sendMessage(from, thumb, image, {quoted: mek, caption: teks})
					buffer = await getBuffer(anu.result)
					client.sendMessage(from, buffer, video, {mimetype: 'video/mp4', filename: `${anu.title}.mp4`, quoted: mek, caption: 'Nih Gan'})
					await limitAdd(sender) 	
					break  
		case 'bpfont':
			if (isBanned) return reply(mess.only.benned)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			if (!isUser) return reply(mess.only.userB)
			bp = `${body.slice(8)}`
			anu = await fetchJson(`https://api.terhambar.com/bpk?kata=${bp}`, {method: 'get'})
			reply (anu.text)
			await limitAdd(sender) 
			break  
		case 'spamsms':
			if (isBanned) return reply(mess.only.benned)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			if (!isUser) return reply(mess.only.userB)
			sms = `${body.slice(9)}`
			nomer = sms.split("/")[0];
			jumlah = sms.split("/")[1];
			anu = await fetchJson(`http://itsmeikygans.my.id/spamsms?apikey=${ItsApi}&no=${body.slice(10)}&jum=${jumlah}`, {method: 'get'})
			client.sendMessage(from, `${anu.logs}`, text, {quoted: mek})
			await limitAdd(sender) 
			break  
		case 'spamcall':
			if (isBanned) return reply(mess.only.benned)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			if (!isUser) return reply(mess.only.userB)
			call = `${body.slice(11)}`
			anu = await fetchJson(`https://videfikri.com/api/call/?nohp=${call}`, {method: 'get'})
			client.sendMessage(from, `${anu.result.logs}`, text, {quoted: mek})
			await limitAdd(sender) 
			break  
		case 'spamgmail':
			if (isBanned) return reply(mess.only.benned)
			if (!isUser) return reply(mess.only.userB)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			spam = `${body.slice(10)}`
			anu = await fetchJson(`https://videfikri.com/api/spamemail/?email=${spam}&subjek=PT.PLN&pesan=Silahkan%20bayar%20tagihan%20listrik%20Anda`, {method: 'get'})
			client.sendMessage(from, `${anu.result.log_lengkap}`, text, {quoted: mek})
			await limitAdd(sender) 
			break  
		case 'quransurah':
			if (isBanned) return reply(mess.only.benned)
			if (!isUser) return reply(mess.only.userB)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			reply(mess.wait)
			surah = `${body.slice(12)}`
			anu = await fetchJson(`https://api.zeks.xyz/api/quran?no=${surah}&apikey=${ZeksApi}`)
			quran = `Surah Al-Qur\`an Nomer: *${surah}*\nSurah: *${anu.surah}*\nDiturunkan Dikota: *${anu.type}*\nJumlah Ayat: *${anu.jumlah_ayat}*\n\n*${anu.ket}\n=============================\n`
			for (let surah of anu.ayat) {
			quran += `${surah.number}\n${surah.text}\n${surah.translation_id}\n=====================\n`
			}
			reply(quran.trim())
			await limitAdd(sender) 
			break 
		case 'bitly':
			if (isBanned) return reply(mess.only.benned)
			if (!isUser) return reply(mess.only.userB)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			link = `${body.slice(7)}`
			anu = await fetchJson(`https://tobz-api.herokuapp.com/api/bitly?url=${link}&apikey=${TobzApi}`, {method: 'get'})
			bitly = `${bitlyy.result}`
			client.sendMessage(from, anu, text, {quoted: mek})
			await limitAdd(sender) 
			break  
			case 'textstyle':
			if (isBanned) return reply(mess.only.benned)
			if (!isUser) return reply(mess.only.userB)
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			reply(mess.wait)
			style = `${body.slice(11)}`
			anu = await fetchJson(`https://api.arugaz.my.id/api/random/text/fancytext?text=${style}`, {method: 'get'})
			reply (anu.result)
			await limitAdd(sender) 
			break  
			case 'pantun':
			if (isLimit(sender)) return reply(limits.limitend(pushname2))
			if (isBanned) return reply(mess.only.benned)
			if (!isUser) return reply(mess.only.userB)
			anu = await fetchJson(`https://api.arugaz.my.id/api/random/text/pantun`, {method: 'get'})
			client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
			await limitAdd(sender) 
			break  
			
		case 'jamdunia':
		if (isLimit(sender)) return reply(limits.limitend(pushname2))
			if (isBanned) return reply(mess.only.benned)
			if (!isUser) return reply(mess.only.userB)
			reply(mess.wait)
		 jamdunia = `${body.slice(10)}`
			anu = await fetchJson(`https://api.i-tech.id/tools/jam?key=${TechApi}&kota=${jamdunia}`, {method: 'get'})
			wtime = `*${anu.timezone}*\n*${anu.date}*\n*${anu.time}*`
			client.sendMessage(from, wtime, text, {quoted: mek})
			await limitAdd(sender) 
			break  
			
		 case 'tomp3':
                if (isBanned) return reply(mess.only.benned)    
                if (isLimit(sender)) return reply(limits.limitend(pushname2))
			    if (isPrem) return reply(mess.only.premium)
				if (!isUser) return reply(mess.only.userB)
                	client.updatePresence(from, Presence.composing) 
					if (!isQuotedVideo) return reply('_*Reply Video nya Gan!*_')
					reply(mess.wait)
					encmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo
					media = await client.downloadAndSaveMediaMessage(encmedia)
					ran = getRandom('.mp4')
					exec(`ffmpeg -i ${media} ${ran}`, (err) => {
						fs.unlinkSync(media)
						if (err) return reply('Gagal, pada saat mengkonversi video ke mp3')
						bufferlkj = fs.readFileSync(ran)
						client.sendMessage(from, bufferlkj, audio, {mimetype: 'audio/mp4', quoted: mek})
						fs.unlinkSync(ran)
					})
					await limitAdd(sender) 
					break 

				case 'setppbot':
					if (!isOwner) return reply(mess.only.owner)
				    client.updatePresence(from, Presence.composing) 
					if (!isQuotedImage) return reply(`Envie fotos com legendas ${prefix}setbotpp ou tag de imagem que foi enviada`)
					enmedia = JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo
					media = await client.downloadAndSaveMediaMessage(enmedia)
					await client.updateProfilePicture(botNumber, media)
					reply('Obrigado pelo novo perfilüôÇ')
					break

          /*******Fitur Defacer*******/

				case 'dorking':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				reply(mess.wait)
				dork = `${body.slice(9)}`
					anu = await fetchJson(`https://api-anoncybfakeplayer.herokuapp.com/dorking?dork=${dork}`, {method: 'get'})
					hasil = `${anu.result}`
					client.sendMessage(from, hasil, text, {quoted: mek})
					await limitAdd(sender) 
					break  
			     case 'xvideos':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
			   reply(mess.wait)
              	    if (args.length < 1) return reply('teksnya mana gan?')
                    anu = await fetchJson(`https://api.arugaz.my.id/api/media/xvideo/search?query=${body.slice(9)}`, {method: 'get'})
                    teks = `===============\n`
                    for (let b of anu.result) {
                    teks += `‚Ä¢ Title: ${b.title}\n‚Ä¢ Info: ${b.info}\n‚Ä¢ Link: ${b.link}\n===============\n`
                    }
                    reply(teks.trim())
			     	await limitAdd(sender) 
			     	break 
				case 'encode64':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				encode64 = `${body.slice(10)}`
				anu = await fetchJson(`https://api.i-tech.id/hash/bs64?key=${TechApi}&type=encode&string=${encode64}`, {method: 'get'})
				client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break 
				case 'decode64':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				decode64 = `${body.slice(10)}`
					anu = await fetchJson(`https://api.i-tech.id/hash/bs64?key=${TechApi}&type=decode&string=${decode64}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'decode32':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				decode32 = `${body.slice(10)}`
					anu = await fetchJson(`https://api.i-tech.id/hash/bs32?key=${TechApi}&type=decode&string=${decode32}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'encode32':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				encode32 = `${body.slice(10)}`
					anu = await fetchJson(`https://api.i-tech.id/hash/bs32?key=${TechApi}&type=decode&string=${encode32}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'encbinary':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				encbinary = `${body.slice(11)}`
					anu = await fetchJson(`https://api.anoncybfakeplayer.com/api/binary/?encode=${encbinary}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'decbinary':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				decbin = `${body.slice(11)}`
					anu = await fetchJson(`https://api.anoncybfakeplayer.com/api/binary/?decode=${decbin}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'encoctal':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				encoc = `${body.slice(10)}`
					anu = await fetchJson(`https://api.anoncybfakeplayer.com/api/base64/?decode=${encoc}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender)
					break  
				case 'decoctal':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				decoc = `${body.slice(10)}`
					anu = await fetchJson(`https://api.anoncybfakeplayer.com/api/base64/?encode=${decoc}`, {method: 'get'})
					client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
					await limitAdd(sender) 
					break  
				case 'becrypt':
				if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
				becry = `${body.slice(10)}`
				anu = await fetchJson(`https://api.i-tech.id/hash/bcrypt?key=${TechApi}&string=${becry}`, {method: 'get'})
				client.sendMessage(from, `${anu.result}`, text, {quoted: mek})
				await limitAdd(sender) 
				break 
// akhir encrypt & decrypt Fitur

			case 'google':
                const googleQuery = body.slice(8)
               if (isBanned) return reply(mess.only.benned)    
				if (!isUser) return reply(mess.only.userB)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
                if(googleQuery == undefined || googleQuery == ' ') return reply(`*Hasil Pencarian : ${googleQuery}* tidak ditemukan`)
                google({ 'query': googleQuery }).then(results => {
                let vars = `_*Hasil Pencarian : ${googleQuery}*_\n`
                for (let i = 0; i < results.length; i++) {
                    vars +=  `\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n*Judul* : ${results[i].title}\n\n*Deskripsi* : ${results[i].snippet}\n\n*Link* : ${results[i].link}\n\n`
                }
                    reply(vars)
                }).catch(e => {
                    console.log(e)
                    client.sendMessage(from, 'Google Error : ' + e);
                })
                await limitAdd(sender) 
                break 
                
                case 'addbucin':
                    if (!isOwner) return reply(mess.only.owner)
				    huu = body.slice(10)
						bucinrandom.push(huu)
						fs.writeFileSync('./database/json/bucin.json', JSON.stringify(bucinrandom))
						reply(`Sukses, Kata \n*${huu}*\n Telah Ditambahkan ke database`)
						break
                    case 'bucin':
                    case 'quotebucin':
                    if (isBanned) return reply(mess.only.benned)    
                    if (!isUser) return reply(mess.only.userB)
                    hasil = bucinrandom[Math.floor(Math.random() * (bucinrandom.length))]
                    client.sendMessage(from, '"'+hasil+'*', text, {quoted: mek})
                    await limitAdd(sender)
                    break
// SOUND					
case 'iri':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
const irimp3 = fs.readFileSync('./assets/iri.mp3');
client.sendMessage(from, irimp3, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'pale':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
const pa = fs.readFileSync('assets/pale.mp3')
client.sendMessage(from, pa, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound46':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound46.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu50':
			    if (isPrem) return reply(mess.only.premium)
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu50.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu8':
			    if (isPrem) return reply(mess.only.premium)
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu8.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lemonkobasolo':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lemonkobasolo.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu7':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu7.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'lovestory':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/love story.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'lagu6':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu6.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'singoff':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/SINGOFF.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound47':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound47.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'singofftiktok':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/SINGOFFTIKTOK.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu5':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu5.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu4':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu4.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu3':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu3.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu2':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu2.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'lagu1':
			    if (isPrem) return reply(mess.only.premium)
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/lagu1.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound45':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound45.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound44':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound44.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound43':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound43.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound42':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound42.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound41':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound41.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound40':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound40.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound39':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound39.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound38':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound38.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound37':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound37.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound36':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound36.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound35':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound35.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound34':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound34.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound33':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound33.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound32':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound32.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound31':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound31.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound30':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound30.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound29':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound29.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound49':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound49.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound48':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound48.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound28':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound28.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound27':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound27.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound26':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound26.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound25':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound25.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound1':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
satu = fs.readFileSync('./assets/sound1.mp3');
client.sendMessage(from, satu, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound12':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
dua = fs.readFileSync('./assets/sound12.mp3');
client.sendMessage(from, dua, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound2':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
dua = fs.readFileSync('./assets/sound2.mp3');
client.sendMessage(from, dua, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound3':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
tiga = fs.readFileSync('./assets/sound3.mp3');
client.sendMessage(from, tiga, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound4':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
empat = fs.readFileSync('./assets/sound4.mp3');
client.sendMessage(from, empat, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound5':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
lima = fs.readFileSync('./assets/sound5.mp3');
client.sendMessage(from, lima, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound50':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
enam = fs.readFileSync('./assets/sound50.mp3');
client.sendMessage(from, enam, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound6':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
enam = fs.readFileSync('./assets/sound6.mp3');
client.sendMessage(from, enam, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound7':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
tujuh = fs.readFileSync('./assets/sound7.mp3');
client.sendMessage(from, tujuh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound8':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
lapan = fs.readFileSync('./assets/sound8.mp3');
client.sendMessage(from, lapan, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound9':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
bilan = fs.readFileSync('./assets/sound9.mp3');
client.sendMessage(from, bilan, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound11':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound11.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound10':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound10.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound60':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound60.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound59':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound59.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound58':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound58.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound57':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound57.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound56':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound56.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound55':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound55.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound54':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound54.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound53':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound53.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound52':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound52.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound51':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound51.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound14':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound14.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound22':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound22.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound21':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound21.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound20':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound20.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound19':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound19.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound18':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound18.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound17':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound17.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound16':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound16.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'baka':
case 'onichan':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/baka.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'sound15':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound15.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound13':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound13.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound23':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound23.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'sound24':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/sound24.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'yamate':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/yamate.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'dj2':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/dj2.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'bot':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/bot.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
case 'dj1':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/dj1.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break
case 'bernyanyi':
				if (isLimit(sender)) return reply(limits.limitend(pushname2))
					if (isBanned) return reply(mess.only.benned)
				    if (!isUser) return reply(mess.only.userB)
puluh = fs.readFileSync('./assets/bernyanyi.mp3');
client.sendMessage(from, puluh, MessageType.audio, {quoted: mek, mimetype: 'audio/mp4', ptt:true})
await limitAdd(sender)
break	
				default:
					if (body.startsWith(`${prefix}${command}`)) {
                  reply(`Comando *${prefix}${command}* nao esta listado*menu* tente prestar atencao novamente Modelo *${prefix}help*`)
                  }
					if (isGroup && isSimi && budy != undefined) {
						console.log(budy)
						muehe = await simih(budy)
						console.log(muehe)
						reply(muehe)
					} else {
						console.log(color('[SCREAMOBOT]','Yellow'), 'Comando Nao Registrado', color(sender.split('@')[0]))
					}
                           }
		} catch (e) {
			console.log('Error : %s', color(e, 'yellow'))
		}
	})
}
starts()


/*
* THANGKS TO :
* FARHAN XCODE 7
* FADHIL GRAPHY
* BRYAN RAFLY
* AFFIS JUNIANTO
* ANANG
* MAHANKBARBAR
* NAZWA S
* DAN SELURUH MEMBER MYBOT TEAM!!
*/
